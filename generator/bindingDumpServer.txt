do local _={Enums={System={[1]="Windows",[2]="Linux",[3]="WebBrowser",[4]="MacOS",[5]="iOS",[6]="Android",[0]="Unknown"},LuaErrorType={[1]="DoFile",[2]="Runtime",[3]="UIAction",[0]="None"},VRControllerButton={[1]="A",[2]="B",[4]="Menu",[16]="Shoulder",[64]="Grip",[32]="Trigger",[8]="Thumb"},UIActionsPlace={[1]="Server",[2]="Inherited",[0]="Client"},UIItemType={[1]="Window",[2]="Header",[3]="Panel",[4]="Grid",[5]="Tab",[6]="Separator",[7]="Button",[8]="Number",[9]="Wheel",[10]="TextInput",[11]="ListBox",[12]="ListBoxSimple",[13]="ListBoxEnum",[14]="CheckBox",[15]="Radio",[16]="Label",[17]="Color",[18]="Vector",[19]="Matrix",[20]="Transformation",[21]="Plot",[22]="Count",[0]="Undefined"},ResourceUsage={[1]="Dynamic",[2]="Stream",[0]="Static"},HitType={[1]="StaticCommon",[2]="StaticTmp",[3]="ObjectVoxel",[0]="Invalid"},Space={[1]="World",[0]="Local"},PixelFormat={[1]="RGB888",[2]="RGBA8888",[3]="RGB565",[4]="RGBA5551",[5]="RGBA4444",[6]="RGB10A2",[7]="BGR888",[8]="BGRA8888",[9]="SRGB888",[10]="SRGB888A8",[11]="Depth16",[12]="Depth24",[13]="Depth32",[14]="Depth24Stencil8",[15]="Depth32Stencil8X24",[16]="A8",[17]="LA88",[18]="RGB16U",[19]="RGBA16U",[20]="R32f",[21]="RGB32f",[22]="RGBA32f",[23]="R16f",[24]="RGB16f",[25]="RGBA16f",[26]="DXT1",[27]="DXT1_with_ALPHA",[28]="DXT3",[29]="DXT5",[30]="ATC_RGB",[31]="ATC_RGBEA",[32]="ATC_RGBIA",[33]="ETC_RGB",[34]="ETC2_RGB",[35]="ETC2_RGBA_PUNCHTHROUGH_ALPHA",[36]="ETC2_RGBA",[37]="PVRTC4_RGB",[38]="PVRTC2_RGB",[39]="PVRTC4_RGBA",[40]="PVRTC2_RGBA",[41]="Int8",[42]="Int16",[43]="Int32",[44]="UInt8",[45]="UInt16",[46]="UInt32",[0]="Unknown"},PrimitiveTopology={[1]="LineStrip",[2]="Lines",[3]="TriangleStrip",[4]="TriangleFan",[5]="Triangles",[0]="Points"},RendererStateFlags={[1]="Shadows",[2]="Fog",[4]="MultiView",[8]="Lighting",[131072]="DepthPass",[16]="PBR",[64]="VR",[32]="IBL"},TextureType={[1]="Cube",[2]="Dome",[3]="Sphere",[0]="Unknown"},BlendMode={[1]="Darken",[2]="Multiply",[3]="ColorBurn",[4]="LinearBurn",[5]="DarkenColor",[6]="Lighten",[7]="Screen",[8]="ColorDodge",[9]="LinearDodge",[10]="LightenColor",[11]="Overlay",[12]="SoftLight",[13]="HardLight",[14]="VividLight",[15]="LinearLight",[16]="PinLight",[17]="HardMix",[18]="Difference",[19]="Exclusion",[20]="Subtract",[21]="Divide",[22]="Hue",[23]="Color",[24]="Saturation",[25]="Luminosity",[0]="Normal"},Side={[1]="Right",[0]="Left"},ShaderPrecisionType={[1]="MediumFloat",[2]="HighFloat",[3]="LowInt",[4]="MediumInt",[5]="HighInt",[0]="LowFloat"},TmpLayerFlags={[1]="Common",[2]="Atlas",[0]="None"},ClientMode={[1]="Edit",[2]="DevDebug",[0]="View"},Device={[1]="Quest",[2]="MagicLeap2",[0]="Generic"}},Pointers={"AssetManager","CommandLine","Image","UIItem","VoxelRenderer","const char","const uint8"},Classes={VoxelRenderer={Methods={"bool __eq (VoxelRenderer, VoxelRenderer)","tuple<classTVector3<float>,classTVector3<float> > GetAABounds ()","tuple<classTVector3<float>,classae::core::TQuaternion<float>,classTVector3<float> > GetBounds ()"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","bool syncToClients","bool enabled","bool prioritizeLod","bool outline","Vec4f tintColor","bool receiveTransform"}},UILayout={},VoxelData={Methods={"VoxelData ()","void Mirror (Vec3f, Vec3f)","tuple<bool,classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>> > SetPath (string)","bool __eq (VoxelData, VoxelData)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","string path","shared_ptr<classae::scene::VoxelDataResource> data","bool copyOnWrite","bool save","bool editable"}},Box={Methods={"Box (this_state)","Box (Vec3f, Quatf, Vec3f, this_state)","Box (Vec3f, Vec3f, this_state)","Box (Vec3f, this_state)"}},Camera={Methods={"Vec3f ScreenToWorldRay (Vec2f)","Vec2f WorldToScreen (Vec3f)","Vec3f WorldToScreen3f (Vec3f)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","float fovY","shared_ptr<classae::scene::Transform> transform"}},BaseLightingParams={Properties={"Vec3f diffuseColor","bool directionalLight","Vec3f direction","float diffuseRayLen","float diffuseDirSpread","int32 diffuseSamples","float shadowsIntensity","bool shadows","bool ambientOcclusion","Vec3f ambientColor","float ambientRayLen","int32 ambientSamples","float skyAmbientIntensity","float ambientOcclusionFactor"}},VoxelInspectData={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetTexts (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetPositions (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetColors (this_state)"},Properties={"float voxelSize","string header","Vec3f headerPos"}},VVCollision={Methods={"VVCollision (this_state)","VVCollision (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (Vec3f, Vec3f, this_state)","basic_table_core<0,classsol::basic_reference<0> > CapsuleOverlap (Vec3f, Vec3f, float, this_state)"},Properties={"shared_ptr<classae::scene::Filter> filter","float traversalStopVxSize","float detectionGeometryDetail","bool globalVisibleLocalVisible","bool globalInvisibleLocalVisible","bool globalVisibleLocalInvisible","bool globalInvisibleLocalInvisible","Vec3f rayPos","Vec3f rayDir"}},Sky={Methods={"void LoadSkyTexture (string, TextureType, Vec4f, float)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","float cloudScale","float cloudOffset","float cloudSlope","float sunAzimuth","float sunAltitude","Vec3f rayleighCoeff","float mieCoeff","float yRotationAngle","bool render"}},Input={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetEvents (this_state)","bool KeyDown (string)","bool Key (string)","bool KeyUp (string)","basic_table_core<0,classsol::basic_reference<0> > KeyCombosDown (this_state)","bool KeyComboDown (string)","bool KeyComboDown (string, string, string)","bool KeyComboDown (string, string)","bool KeyCombo (string)","bool KeyCombo (string, string, string)","bool KeyCombo (string, string)","bool ShiftKey ()","bool CtrlKey ()","bool AltKey ()","bool MouseButtonDown (uint16)","bool MouseButton (uint16)","bool MouseButtonUp (uint16)","int32 MouseWheel ()","Vec2f MousePos ()","Vec2f MousePosLast ()","Vec2f MouseMove ()","Vec2f MousePosPerc ()","Vec2f MousePosPercLast ()","Vec2f MouseMovePerc ()","bool GetRelativeMouseMode ()","void SetRelativeMouseMode (bool)","bool GetEmulateMouseWithTouch ()","void SetEmulateMouseWithTouch (bool)","bool GetEmulateTouchWithMouse ()","void SetEmulateTouchWithMouse (bool)","float GesturePinch ()","float GestureRotate ()","Vec2f GestureMove ()","int16 NumFingers ()","bool FingerDown (int64)","basic_object<classsol::basic_reference<0> > Fingers (this_state)","bool FingerUp (int64)","Vec2f FingerPos (int64)","bool VRButtonDown (uint64, VRControllerButton)","bool VRButton (uint64, VRControllerButton)","bool VRButtonUp (uint64, VRControllerButton)","float VRHandTrigger (uint64)","float VRIndexTrigger (uint64)","Vec2f VRThumbStick (uint64)","Vec2f VRTrackpad (uint64)","bool VRIsControllerValid (uint64)","Vec3f VRControllerPos (uint64)","Vec3f VRControllerDir (uint64)","tuple<classTVector3<float>,classae::core::TQuaternion<float> > VRControllerTransform (uint64, Space)","basic_object<classsol::basic_reference<0> > Gamepads (this_state)","basic_object<classsol::basic_reference<0> > GetActiveGamepad (this_state)"}},ServerScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","int64 GetCurrentFrame ()","string GetProcessState ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (string)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectToRoot (shared_ptr<classae::scene::Object>)","bool CanMoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","void SetActiveCamera (shared_ptr<classae::scene::Camera>)","string AddNewScriptFile (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","Vec3f ConvertWcToDc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertWcToDc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","Vec3f ConvertDcToWc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertDcToWc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","bool IsNameValid (string)","string MakeNameValid (string)","bool UpdatePrefab (shared_ptr<classae::scene::Object>)","bool ResetPrefab (shared_ptr<classae::scene::Object>)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}},LightProbeTexture={Methods={"LightProbeTexture (string, FilePath)"}},ScriptInstance={Methods={"void Start ()","void Update (float deltaTime)","void Attach ()","void Detach ()","void OnActivate ()","void OnDeactivate ()","void LateUpdate ()","void RPC (string, variadic_args)","void RPC (int64, string, variadic_args)"},Properties={"shared_ptr<classae::scene::Script> component","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool onServer","bool onClient"}},GraphicsOptions={Methods={"GraphicsOptions ()"},Properties={"Options globalOptions","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> > platformOptions"}},Mat4f={Methods={"Mat4f ()","Mat4f (float)","Mat4f (float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4i)","Mat4f (Mat3f)","Mat4f (Mat4f)","Mat4f (Quatf)","Vec4f __index (Mat4f, uint32)","void __newindex (Mat4f, uint32, Vec4f)","Mat4f __add (Mat4f, Mat4f)","Mat4f __add (Mat4f, float)","Mat4f __add (float, Mat4f)","Mat4f __sub (Mat4f, Mat4f)","Mat4f __sub (Mat4f, float)","Mat4f __sub (float, Mat4f)","Mat4f __mul (Mat4f, Mat4f)","Mat4f __mul (Mat4f, float)","Mat4f __mul (float, Mat4f)","Mat4f __div (Mat4f, Mat4f)","Mat4f __div (Mat4f, float)","Mat4f __div (float, Mat4f)","Vec4f __div (Vec4f, Mat4f)","Mat4f __unm (Mat4f)","bool __eq (Mat4f, Mat4f)","float GetDeterminant ()","Mat4f Transpose ()","Mat4f GetTransposed ()","Mat4f Invert ()","Mat4f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()","Mat4f Translation (float, float, float)","Mat4f Translation (Vec3f)","Mat4f RotationXYZ (float, float, float)","Mat4f RotationXYZ (Vec3f)","Mat4f RotationYawPitchRoll (float, float, float)","Mat4f RotationYawPitchRoll (Vec3f)","Mat4f Scaling (float, float, float)","Mat4f Scaling (Vec3f)","Mat4f LookAt (Vec3f, Vec3f, Vec3f)","Mat4f Perspective (float, float, float, float)","Mat4f Ortho (float, float, float, float, float, float)"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f translation","Vec3f row1","Vec3f row2","Vec3f row3","Vec3f row4"}},Texture={},FileTexture={Methods={"FileTexture (string, FilePath)","string GetPath ()","ResourceUsage GetUsage ()","void SetUsage (ResourceUsage)","Image GetImage ()"}},SamplerParams={Methods={"SamplerParams ()"},Properties={"TextureWrappingMode wrappingModeS","TextureWrappingMode wrappingModeT","TextureWrappingMode wrappingModeR","TextureFiltering filtering","float maxAnisotropy","bool compareEnable","Function compareOp"}},VoxelDataResource={Methods={"VoxelDataResource (string, bool, this_state)","VoxelDataResource (this_state)","VoxelDataResource (string, this_state)","string Save (string, bool)","tuple<classTVector3<float>,classTVector3<float> > GetLocalBounds ()","tuple<classTVector3<float>,classTVector3<float> > GetPreciseLocalBounds ()","basic_object<classsol::basic_reference<0> > Duplicate (this_state)","void RebuildLighting ()"},Properties={"bool isEditable","bool isSaved","bool hasAnyVoxels","float volumePerc","float volume","float scaleToStatic"}},LuaSystem={Methods={"Vector_string GetEnumValues (string)","rttr_type GetRttrType (string)"}},Vec4f={Methods={"Vec4f ()","Vec4f (float)","Vec4f (int32)","Vec4f (float, float, float, float)","Vec4f (float, float, float, int32)","Vec4f (float, float, int32, float)","Vec4f (float, float, int32, int32)","Vec4f (float, int32, float, float)","Vec4f (float, int32, float, int32)","Vec4f (float, int32, int32, float)","Vec4f (float, int32, int32, int32)","Vec4f (int32, float, float, float)","Vec4f (int32, float, float, int32)","Vec4f (int32, float, int32, float)","Vec4f (int32, float, int32, int32)","Vec4f (int32, int32, float, float)","Vec4f (int32, int32, float, int32)","Vec4f (int32, int32, int32, float)","Vec4f (int32, int32, int32, int32)","Vec4f (Vec2f, float, float)","Vec4f (Vec2f, float, int32)","Vec4f (Vec2f, int32, float)","Vec4f (Vec2f, int32, int32)","Vec4f (Vec2i, float, float)","Vec4f (Vec2i, float, int32)","Vec4f (Vec2i, int32, float)","Vec4f (Vec2i, int32, int32)","Vec4f (float, Vec2f, float)","Vec4f (float, Vec2f, int32)","Vec4f (float, Vec2i, float)","Vec4f (float, Vec2i, int32)","Vec4f (int32, Vec2f, float)","Vec4f (int32, Vec2f, int32)","Vec4f (int32, Vec2i, float)","Vec4f (int32, Vec2i, int32)","Vec4f (float, float, Vec2f)","Vec4f (float, float, Vec2i)","Vec4f (float, int32, Vec2f)","Vec4f (float, int32, Vec2i)","Vec4f (int32, float, Vec2f)","Vec4f (int32, float, Vec2i)","Vec4f (int32, int32, Vec2f)","Vec4f (int32, int32, Vec2i)","Vec4f (Vec2f, Vec2f)","Vec4f (Vec2f, Vec2i)","Vec4f (Vec2i, Vec2f)","Vec4f (Vec2i, Vec2i)","Vec4f (Vec3f, float)","Vec4f (Vec3f, int32)","Vec4f (Vec3i, float)","Vec4f (Vec3i, int32)","Vec4f (float, Vec3f)","Vec4f (float, Vec3i)","Vec4f (int32, Vec3f)","Vec4f (int32, Vec3i)","Vec4f (Vec4f)","Vec4f (Vec4i)","float __index (Vec4f, uint32)","void __newindex (Vec4f, uint32, float)","Vec4f __add (Vec4f, Vec4f)","Vec4f __add (Vec4f, Vec4i)","Vec4f __add (Vec4f, float)","Vec4f __add (float, Vec4f)","Vec4f __sub (Vec4f, Vec4f)","Vec4f __sub (Vec4f, Vec4i)","Vec4f __sub (Vec4f, float)","Vec4f __sub (float, Vec4f)","Vec4f __mul (Vec4f, Vec4f)","Vec4f __mul (Vec4f, Vec4i)","Vec4f __mul (Vec4f, Mat4f)","Vec4f __mul (Vec4f, float)","Vec4f __mul (float, Vec4f)","Vec4f __div (Vec4f, Vec4f)","Vec4f __div (Vec4f, Vec4i)","Vec4f __div (Vec4f, float)","Vec4f __div (float, Vec4f)","Vec4f __mod (Vec4f, Vec4f)","Vec4f __mod (Vec4f, Vec4i)","Vec4f __mod (Vec4f, float)","Vec4f __mod (float, Vec4f)","Vec4f __pow (Vec4f, Vec4f)","Vec4f __pow (Vec4f, Vec4i)","Vec4f __pow (Vec4f, float)","Vec4f __pow (float, Vec4f)","Vec4f __unm (Vec4f)","bool __eq (Vec4f, Vec4f)","bool __eq (Vec4f, Vec4i)","float Len ()","float Length ()","float SqrLength ()","bool IsZero ()","Vec4f GetAbs ()","void Clamp (Vec4f, float, float)","void Clamp (Vec4f, Vec4f, Vec4f)","Vec4f GetClamped (Vec4f, float, float)","Vec4f GetClamped (Vec4f, Vec4f, Vec4f)","float Dot (Vec4f, Vec4f)","float Dot (Vec4f, Vec4i)","bool IsAnyNaN ()","Vec4f Lerp (Vec4f, Vec4f, float)","Vec4f Normalize ()","Vec4f GetNormalized ()","void Ceil (Vec4f)","Vec4f GetCeiled (Vec4f)","void Floor (Vec4f)","Vec4f GetFloored (Vec4f)","void Round (Vec4f)","Vec4f GetRounded (Vec4f)","float DistanceTo (Vec4f)","string __tostring (Vec4f)"},Properties={"float x","float y","float z","float w","Vec4f zero","Vec4f up","Vec4f right","Vec4f forward","Vec4f down","Vec4f left","Vec4f back"}},ClientContext={Methods={"string UIItemUpdate (uint32, UIItem, basic_object<classsol::basic_reference<0> >)","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64)","string GetUIActionType (uint64)","string GetUIActionScript (uint64)","uint32 GetCurrentUIActionID ()","void OnLuaLog ()","bool IsServer ()","bool IsClient ()","void OpenScriptFile (string, int64)","string GetScript (string)","void ClearLuaLogClient ()","void ScrollToLastestLuaLog ()","CommandLine GetCommandLine ()","basic_table_core<0,classsol::basic_reference<0> > GetVersion (this_state)","System GetSystem ()","double GetFPS ()","uint32 GetScriptsVersion ()","float GetLogValue (string)","void SetLogValue (string, float)","Vector_float GetLogValueForPlot (string)","float GetLogIValue (uint64)","string GetLogIValueName (uint64)","string GetLogIValueOutputName (uint64)","bool GetLogIsValue (uint64)","uint64 GetLogValuesCount ()","double GetLogTime (string)","basic_table_core<0,classsol::basic_reference<0> > GetLogTimers (string, this_state)","string GetSystemConsole ()","string GetSystemOutput ()","Vec2i GetVideoRange ()","int32 GetCurrentFrame ()","void SetCurrentFrame (int32)","bool IsContainerEnabledAndVisible (UIItem)","void LuaStartDebugger ()","void LuaEnableDebugging (bool)"},Properties={"uint64 clientID","ClientMode mode"}},Overlap={Properties={"Vec3f center","float radius","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::LuaShape> shape"}},Prefab={Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","const char type","shared_ptr<classae::scene::Object> object"}},RealtimeLightingInfo={Properties={"Vec3f diffuseColor","bool directionalLight","Vec3f direction","float diffuseRayLen","float diffuseDirSpread","int32 diffuseSamples","float shadowsIntensity","bool shadows","bool ambientOcclusion","Vec3f ambientColor","float ambientRayLen","int32 ambientSamples","float skyAmbientIntensity","float ambientOcclusionFactor","int32 taskBoxScale"}},["ae::renderer::RenderTarget"]={Methods={"uint32 GetWidth ()","uint32 GetHeight ()","uint64 GetLayerCount ()"}},Server={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetClients (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetUsersID (this_state)","string GetUserID (uint64)","void DisconnectClient (uint64)","uint32 GetScriptsVersion ()","string GetScript (string)","void LuaReset ()","void ResendScripts ()","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetLuaFilesList (this_state)","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetVoxelFilesList (this_state)","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetMakerAssetsList (this_state)","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetCommonAssetsList (this_state)","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetCommonScenesList (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetPrefabsList (this_state)","shared_ptr<classae::scene::Object> InsertPrefab (uint64)","shared_ptr<classae::scene::Object> InsertPrefab (string)","bool MakePrefab (shared_ptr<classae::scene::Object>)","void SaveScene ()","void SaveSceneHierarchy ()","void SetBackupSceneOnSave (bool)","bool GetBackupSceneOnSave ()","void ReloadScene ()","void OnLuaLog ()","bool IsClient ()","bool IsServer ()","bool DevMode ()","string GetSystemConsole ()","string GetSystemOutput ()","uint32 GetCurrentUIActionID ()","void ScrollToLastestLuaLog ()","CommandLine GetCommandLine ()","basic_table_core<0,classsol::basic_reference<0> > GetVersion (this_state)","System GetSystem ()","string GetDateTime ()","int32 GetMemoryUsage ()","basic_table_core<0,classsol::basic_reference<0> > GetErrors (this_state)","uint32 GetMaxConnections ()","void ResetTracy ()","bool GetStartedWithOriginalScripts ()","void OverwriteWithOriginalScripts ()","bool GetOriginalScriptsWereSet ()","void HttpPost (string, basic_table_core<0,classsol::basic_reference<0> >, string, basic_object<classsol::basic_reference<0> >)","void HttpGet (string, basic_table_core<0,classsol::basic_reference<0> >, basic_object<classsol::basic_reference<0> >)","void HttpDownload (string, basic_table_core<0,classsol::basic_reference<0> >, basic_object<classsol::basic_reference<0> >)","double GetPing (uint64)","bool MoveFileToMontageVoxelsFolder (shared_ptr<classae::studio::FileLua>, string)","void MakeUrlForFile (shared_ptr<classae::studio::FileLua>, basic_object<classsol::basic_reference<0> >, basic_object<classsol::basic_reference<0> >)","AssetManager GetResourceManScene ()","AssetManager GetResourceManUI ()","AssetManager GetResourceManSettings ()","double GetLogTime (string)","basic_table_core<0,classsol::basic_reference<0> > GetLogTimers (string)","basic_table_core<0,classsol::basic_reference<0> > GetStreamingStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetMainDispatcherStats ()","void TriggerCrash ()","void TriggerException ()","void TriggerCriticalError ()","void Restart ()","void AnalyticsServer (string, basic_table_core<0,classsol::basic_reference<0> >)","void AnalyticsClient (uint64, string, basic_table_core<0,classsol::basic_reference<0> >)","void TeamcityApiTest ()","void TeamcityApiTest2 (int32)","basic_table_core<0,classsol::basic_reference<0> > GetTeamcityBuilds (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetTeamcityBuild (int32, this_state)","uint64 GetCollectionPreferredLoad (int32)","void SetCollectionPreferredLoad (int32, uint64)","void GenTestVoxelScene ()","void GenTestVoxelScene2 ()","void GenTestVoxelScene3 ()","void MakeVoxelScene (int32, int32, int32, int32)","void RebuildLODsBrightnessMethod ()","void RebuildLODsBrightnessMethod (Vec3i, Vec3i)","bool RebuildLODsGradientMethod ()","bool RebuildLODsGradientMethod (Vec3i, Vec3i)","bool ShowAllNormalsPerVoxel (uint32)","bool ShowAllNormalsPerBT (uint32)","void PBRTranscodeToPBR0Ver1 ()"},Properties={"uint64 clientID"}},Vec2f={Methods={"Vec2f ()","Vec2f (float)","Vec2f (int32)","Vec2f (float, float)","Vec2f (float, int32)","Vec2f (int32, float)","Vec2f (int32, int32)","Vec2f (Vec2f)","Vec2f (Vec2i)","Vec2f (Vec3f)","Vec2f (Vec3i)","Vec2f (Vec4f)","Vec2f (Vec4i)","float __index (Vec2f, uint32)","void __newindex (Vec2f, uint32, float)","Vec2f __add (Vec2f, Vec2f)","Vec2f __add (Vec2f, Vec2i)","Vec2f __add (Vec2f, float)","Vec2f __add (float, Vec2f)","Vec2f __sub (Vec2f, Vec2f)","Vec2f __sub (Vec2f, Vec2i)","Vec2f __sub (Vec2f, float)","Vec2f __sub (float, Vec2f)","Vec2f __mul (Vec2f, Vec2f)","Vec2f __mul (Vec2f, Vec2i)","Vec2f __mul (Vec2f, float)","Vec2f __mul (float, Vec2f)","Vec2f __div (Vec2f, Vec2f)","Vec2f __div (Vec2f, Vec2i)","Vec2f __div (Vec2f, float)","Vec2f __div (float, Vec2f)","Vec2f __mod (Vec2f, Vec2f)","Vec2f __mod (Vec2f, Vec2i)","Vec2f __mod (Vec2f, float)","Vec2f __mod (float, Vec2f)","Vec2f __pow (Vec2f, Vec2f)","Vec2f __pow (Vec2f, Vec2i)","Vec2f __pow (Vec2f, float)","Vec2f __pow (float, Vec2f)","Vec2f __unm (Vec2f)","bool __eq (Vec2f, Vec2f)","bool __eq (Vec2f, Vec2i)","float Len ()","float Length ()","float SqrLength ()","bool IsZero ()","Vec2f GetAbs ()","void Clamp (Vec2f, float, float)","void Clamp (Vec2f, Vec2f, Vec2f)","Vec2f GetClamped (Vec2f, float, float)","Vec2f GetClamped (Vec2f, Vec2f, Vec2f)","float Dot (Vec2f, Vec2f)","float Dot (Vec2f, Vec2i)","bool IsAnyNaN ()","Vec2f Lerp (Vec2f, Vec2f, float)","Vec2f Normalize ()","Vec2f GetNormalized ()","void Ceil (Vec2f)","Vec2f GetCeiled (Vec2f)","void Floor (Vec2f)","Vec2f GetFloored (Vec2f)","void Round (Vec2f)","Vec2f GetRounded (Vec2f)","float DistanceTo (Vec2f)","float GetAngle (Vec2f)","void Rotate (Vec2f, float)","Vec2f GetRotated (Vec2f, float)","string __tostring (Vec2f)"},Properties={"float x","float y","Vec2f zero"}},Gamepad={Methods={"bool ButtonDown (uint16)","bool Button (uint16)","bool ButtonUp (uint16)","float Axis (uint16)","int32 Rumble (uint16, uint16, uint32)","int32 RumbleTriggers (uint16, uint16, uint32)"}},ConfigMap={Methods={"void SetInt (string, int64)","void SetFloat (string, double)","void SetBool (string, bool)","void SetString (string, string)","void SetVec2 (string, Vec2f)","void SetVec3 (string, Vec3f)","void SetVec4 (string, Vec4f)","void Del (string)","bool Exists (string)","void Save ()","int64 GetInt (string)","int64 GetInt (string, int64)","double GetFloat (string)","double GetFloat (string, double)","bool GetBool (string)","bool GetBool (string, bool)","string GetString (string)","string GetString (string, string)","Vec2f GetVec2 (string)","Vec2f GetVec2 (string, Vec2f)","Vec3f GetVec3 (string)","Vec3f GetVec3 (string, Vec3f)","Vec4f GetVec4 (string)","Vec4f GetVec4 (string, Vec4f)","basic_table_core<0,classsol::basic_reference<0> > GetAllValuesStringified (ConfigMap, this_state)"}},Script={Methods={"uint64 RPC (variadic_args)","string GetNetworkFlow ()","string GetScriptUpdateTime ()"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","basic_table_core<0,classsol::basic_reference<0> > instance","string name","string file","bool syncToClients"}},Quatf={Methods={"Quatf ()","Quatf (float, Vec3f)","Quatf (Mat4f)","Quatf (Mat3f)","Quatf (float, float, float, float)","Quatf (Quatf)","Quatf __add (Quatf, Quatf)","Quatf __sub (Quatf, Quatf)","Quatf __mul (Quatf, Quatf)","Vec4f __mul (Quatf, Vec4f)","Vec3f __mul (Quatf, Vec3f)","Quatf __mul (float, Quatf)","Quatf __mul (Quatf, float)","Quatf __div (Quatf, float)","Quatf __pow (Quatf, float)","Quatf __unm (Quatf)","bool __eq (Quatf, Quatf)","float Len ()","float Length ()","float SqrLength ()","bool IsZero ()","float Dot (Quatf)","Quatf Lerp (Quatf, Quatf, float)","Quatf Slerp (Quatf, Quatf, float)","Quatf Sterp (Quatf, Quatf, float)","Quatf Sterp (Quatf, Quatf, float, Vec3f)","void Normalize ()","Quatf GetNormalized ()","void Invert ()","Quatf GetInversed ()","void Rotate (Quatf, float, Vec3f)","Quatf GetRotated (Quatf, float, Vec3f)","Quatf GetConjugate ()","float GetPitch (Quatf)","float GetYaw (Quatf)","float GetRoll (Quatf)","Vec3f GetEuler (Quatf)","float GetAngle (Quatf)","Vec3f GetAxis ()","Quatf Euler (float, float, float)","Quatf Euler (Vec3f)","Quatf Axes (Vec3f, Vec3f)","Quatf AngleAxis (float, Vec3f)","Quatf LookAt (Vec3f)","Quatf LookAt (Vec3f, Vec3f)","string __tostring (Quatf)"},Properties={"float x","float y","float z","float w","Quatf identity"}},EntityPathWaypoint={Methods={"EntityPathWaypoint ()"},Properties={"double time","Vec3f pos","Quatf rot"}},MeshData={Methods={"bool __eq (MeshData, MeshData)","void ClearShape ()","void ClearShape (PrimitiveTopology)","uint32 AddVertex (Vec3f)","uint32 AddVertex (Vec3f, Vec4f)","uint32 AddVertex (Vec3f, Vec2f, Vec4f)","uint32 AddVertex (Vec3f, Vec2f)","void AddIndex (uint32)","void AddIndex (uint32, uint32, uint32)","void AddIndex (uint32, uint32)","void AddShape (shared_ptr<classae::scene::LuaShape>, Vec4f)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","ResourceUsage resourceUsageMode","PrimitiveTopology topology"}},Shape={Properties={"Vec3f pos","Quatf rot","Vec3f size","float radius","float diameter","Vec3f pos2","float radius2","float diameter2","basic_table_core<0,classsol::basic_reference<0> > points","bool useShellPositions"}},UILayouts={},Vec3i={Methods={"Vec3i ()","Vec3i (int32)","Vec3i (float)","Vec3i (int32, int32, int32)","Vec3i (int32, int32, float)","Vec3i (int32, float, int32)","Vec3i (int32, float, float)","Vec3i (float, int32, int32)","Vec3i (float, int32, float)","Vec3i (float, float, int32)","Vec3i (float, float, float)","Vec3i (Vec2i, int32)","Vec3i (Vec2i, float)","Vec3i (Vec2f, int32)","Vec3i (Vec2f, float)","Vec3i (int32, Vec2i)","Vec3i (int32, Vec2f)","Vec3i (float, Vec2i)","Vec3i (float, Vec2f)","Vec3i (Vec3i)","Vec3i (Vec3f)","Vec3i (Vec4i)","Vec3i (Vec4f)","int32 __index (Vec3i, uint32)","void __newindex (Vec3i, uint32, int32)","Vec3i __add (Vec3i, Vec3i)","Vec3f __add (Vec3i, Vec3f)","Vec3i __add (Vec3i, int32)","Vec3i __add (int32, Vec3i)","Vec3i __sub (Vec3i, Vec3i)","Vec3f __sub (Vec3i, Vec3f)","Vec3i __sub (Vec3i, int32)","Vec3i __sub (int32, Vec3i)","Vec3i __mul (Vec3i, Vec3i)","Vec3f __mul (Vec3i, Vec3f)","Vec3i __mul (Vec3i, int32)","Vec3i __mul (int32, Vec3i)","Vec3i __div (Vec3i, Vec3i)","Vec3f __div (Vec3i, Vec3f)","Vec3i __div (Vec3i, int32)","Vec3i __div (int32, Vec3i)","Vec3i __mod (Vec3i, Vec3i)","Vec3f __mod (Vec3i, Vec3f)","Vec3i __mod (Vec3i, int32)","Vec3i __mod (int32, Vec3i)","Vec3i __pow (Vec3i, Vec3i)","Vec3f __pow (Vec3i, Vec3f)","Vec3i __pow (Vec3i, int32)","Vec3i __pow (int32, Vec3i)","Vec3i __unm (Vec3i)","bool __eq (Vec3i, Vec3i)","bool __eq (Vec3i, Vec3f)","int32 Len ()","int32 Length ()","int32 SqrLength ()","bool IsZero ()","Vec3i GetAbs ()","void Clamp (Vec3i, int32, int32)","void Clamp (Vec3i, Vec3i, Vec3i)","Vec3i GetClamped (Vec3i, int32, int32)","Vec3i GetClamped (Vec3i, Vec3i, Vec3i)","int32 Dot (Vec3i, Vec3i)","float Dot (Vec3i, Vec3f)","Vec3i __band (Vec3i, Vec3i)","Vec3i __band (int32, Vec3i)","Vec3i __band (Vec3i, int32)","Vec3i __bor (Vec3i, Vec3i)","Vec3i __bor (int32, Vec3i)","Vec3i __bor (Vec3i, int32)","Vec3i __bxor (Vec3i, Vec3i)","Vec3i __bxor (int32, Vec3i)","Vec3i __bxor (Vec3i, int32)","Vec3i __bnot (Vec3i)","Vec3i __shl (Vec3i, Vec3i)","Vec3i __shl (int32, Vec3i)","Vec3i __shl (Vec3i, int32)","Vec3i __shr (Vec3i, Vec3i)","Vec3i __shr (int32, Vec3i)","Vec3i __shr (Vec3i, int32)","string __tostring (Vec3i)"},Properties={"int32 x","int32 y","int32 z","Vec3i zero","Vec3i up","Vec3i right","Vec3i forward","Vec3i down","Vec3i left","Vec3i back"}},Hit={Properties={"Vec3f pos","Vec3f normal","Vec3f color","shared_ptr<classae::scene::Object> object","float distance","HitType type"}},File={Properties={"string filename","string type","string url","bool available"}},Vec2i={Methods={"Vec2i ()","Vec2i (int32)","Vec2i (float)","Vec2i (int32, int32)","Vec2i (int32, float)","Vec2i (float, int32)","Vec2i (float, float)","Vec2i (Vec2i)","Vec2i (Vec2f)","Vec2i (Vec3i)","Vec2i (Vec3f)","Vec2i (Vec4i)","Vec2i (Vec4f)","int32 __index (Vec2i, uint32)","void __newindex (Vec2i, uint32, int32)","Vec2i __add (Vec2i, Vec2i)","Vec2f __add (Vec2i, Vec2f)","Vec2i __add (Vec2i, int32)","Vec2i __add (int32, Vec2i)","Vec2i __sub (Vec2i, Vec2i)","Vec2f __sub (Vec2i, Vec2f)","Vec2i __sub (Vec2i, int32)","Vec2i __sub (int32, Vec2i)","Vec2i __mul (Vec2i, Vec2i)","Vec2f __mul (Vec2i, Vec2f)","Vec2i __mul (Vec2i, int32)","Vec2i __mul (int32, Vec2i)","Vec2i __div (Vec2i, Vec2i)","Vec2f __div (Vec2i, Vec2f)","Vec2i __div (Vec2i, int32)","Vec2i __div (int32, Vec2i)","Vec2i __mod (Vec2i, Vec2i)","Vec2f __mod (Vec2i, Vec2f)","Vec2i __mod (Vec2i, int32)","Vec2i __mod (int32, Vec2i)","Vec2i __pow (Vec2i, Vec2i)","Vec2f __pow (Vec2i, Vec2f)","Vec2i __pow (Vec2i, int32)","Vec2i __pow (int32, Vec2i)","Vec2i __unm (Vec2i)","bool __eq (Vec2i, Vec2i)","bool __eq (Vec2i, Vec2f)","int32 Len ()","int32 Length ()","int32 SqrLength ()","bool IsZero ()","Vec2i GetAbs ()","void Clamp (Vec2i, int32, int32)","void Clamp (Vec2i, Vec2i, Vec2i)","Vec2i GetClamped (Vec2i, int32, int32)","Vec2i GetClamped (Vec2i, Vec2i, Vec2i)","int32 Dot (Vec2i, Vec2i)","float Dot (Vec2i, Vec2f)","Vec2i __band (Vec2i, Vec2i)","Vec2i __band (int32, Vec2i)","Vec2i __band (Vec2i, int32)","Vec2i __bor (Vec2i, Vec2i)","Vec2i __bor (int32, Vec2i)","Vec2i __bor (Vec2i, int32)","Vec2i __bxor (Vec2i, Vec2i)","Vec2i __bxor (int32, Vec2i)","Vec2i __bxor (Vec2i, int32)","Vec2i __bnot (Vec2i)","Vec2i __shl (Vec2i, Vec2i)","Vec2i __shl (int32, Vec2i)","Vec2i __shl (Vec2i, int32)","Vec2i __shr (Vec2i, Vec2i)","Vec2i __shr (int32, Vec2i)","Vec2i __shr (Vec2i, int32)","string __tostring (Vec2i)"},Properties={"int32 x","int32 y","Vec2i zero"}},Object={Methods={"shared_ptr<classae::scene::Object> GetChild (string)","shared_ptr<classae::scene::Object> GetChildById (Guid)","bool RemoveParent ()","bool IsPrefab ()","bool IsPrefab (string)","shared_ptr<classae::scene::Script> AddScript (string, bool)","shared_ptr<classae::scene::MeshData> AddMeshData ()","shared_ptr<classae::scene::VoxelData> AddVoxelData (string)","shared_ptr<classae::scene::StaticVoxelData> AddStaticVoxelData (string)","shared_ptr<classae::scene::VoxelRenderer> AddVoxelRenderer ()","shared_ptr<classae::scene::Camera> AddCamera ()","shared_ptr<classae::scene::Sky> AddSkybox ()","basic_object<classsol::basic_reference<0> > AddComponent (string, this_state)","bool RemoveComponent (string, this_state)","bool RemoveComponent (basic_object<classsol::basic_reference<0> >, this_state)","basic_object<classsol::basic_reference<0> > GetComponentByType (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetComponentsByType (string, this_state)","basic_object<classsol::basic_reference<0> > FindScript (string, this_state)","shared_ptr<classae::scene::Camera> GetCamera ()","string GetNetworkFlow ()","string GetScriptUpdateTime ()","uint32 GetRefCount ()"},Properties={"shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string id","string name","bool active","bool activeInHierarchy","bool save","shared_ptr<classae::scene::Object> parent","basic_table_core<0,classsol::basic_reference<0> > children","uint64 childCount","int32 siblingIndex","bool isPrefabObject","basic_table_core<0,classsol::basic_reference<0> > components","uint64 componentsCount"}},Component={Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type"}},Polygon={Methods={"Polygon (this_state)"}},["ae::core::Guid"]={Methods={"ae::core::Guid ()","ae::core::Guid (uint64, uint64)","ae::core::Guid (uint32, uint16, uint16, const uint8)","ae::core::Guid (uint32, uint16, uint16, uint8, uint8, uint8, uint8, uint8, uint8, uint8, uint8)","ae::core::Guid ()","ae::core::Guid (const char)","ae::core::Guid (string)","string ToString (bool)","bool __eq (Guid)","bool __lt (Guid)","bool __le (Guid)"},Properties={"bool isNull"}},StaticVoxelData={Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","string path","bool isLoaded"}},Collision={Methods={"Collision (this_state)","Collision (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (Vec3f, Vec3f, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetOverlap (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetOverlap (shared_ptr<classae::scene::LuaShape>, this_state)"},Properties={"shared_ptr<classae::scene::Filter> filter","int32 maxHitCount","shared_ptr<classae::scene::LuaShape> shape","bool precise","Vec3f rayPos","Vec3f rayDir"}},VoxelEdit={Methods={"VoxelEdit (this_state)","VoxelEdit (shared_ptr<classae::scene::LuaShape>, Vec3f, this_state)","VoxelEdit (shared_ptr<classae::scene::LuaShape>, this_state)","void Flush ()","void Paint ()","void Add ()","void Remove ()","void Copy ()","void Kernel ()","shared_ptr<classae::core::Image> CaptureImage (Mat4f, float)","shared_ptr<classae::core::Image> GetImageResource (string)","void FreeTmpLayers (int32, this_state)","void FillTmpLayers (int32, Vec3f, basic_table_core<0,classsol::basic_reference<0> >, float, int32, this_state)"},Properties={"bool blendEnable","BlendMode blendMode","float blendOpacity","float blendRadiusRatio","Vec3f color","basic_object<classsol::basic_reference<0> > filter","basic_object<classsol::basic_reference<0> > shape","bool clampToMinVoxelSize","shared_ptr<classae::scene::Transform> copySourceTr","shared_ptr<classae::scene::Transform> copyDestinationTr","Vec3f copyDestinationPos","Quatf copyDestinationRot","float copyDestinationScale","Vec3f copySourcePos","Quatf copySourceRot","float copySourceScale","basic_object<classsol::basic_reference<0> > copyResource","bool copyInsert","bool copyRemove","bool copyColor","int32 kernelType","basic_object<classsol::basic_reference<0> > imageColor","basic_object<classsol::basic_reference<0> > imageNormal","Mat4f imageUVTm","bool imageUVClamp","bool imageNormalBlendEnable","float imageNormalBlendPower","basic_object<classsol::basic_reference<0> > onProgress","basic_object<classsol::basic_reference<0> > onFinished","basic_object<classsol::basic_reference<0> > onError"}},MeshRenderer={Methods={"bool __eq (MeshRenderer, MeshRenderer)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","Res<classae::renderer::Material> material"}},Filter={Methods={"Filter (this_state)","Filter (bool, bool, this_state)","Filter (basic_table_core<0,classsol::basic_reference<0> >, basic_table_core<0,classsol::basic_reference<0> >, this_state)"},Properties={"bool useStatic","bool useNotStatic","bool useTmpStatic","bool useTmpNotStatic","basic_table_core<0,classsol::basic_reference<0> > ignoreList","basic_table_core<0,classsol::basic_reference<0> > forceList"}},Vec3f={Methods={"Vec3f ()","Vec3f (float)","Vec3f (int32)","Vec3f (float, float, float)","Vec3f (float, float, int32)","Vec3f (float, int32, float)","Vec3f (float, int32, int32)","Vec3f (int32, float, float)","Vec3f (int32, float, int32)","Vec3f (int32, int32, float)","Vec3f (int32, int32, int32)","Vec3f (Vec2f, float)","Vec3f (Vec2f, int32)","Vec3f (Vec2i, float)","Vec3f (Vec2i, int32)","Vec3f (float, Vec2f)","Vec3f (float, Vec2i)","Vec3f (int32, Vec2f)","Vec3f (int32, Vec2i)","Vec3f (Vec3f)","Vec3f (Vec3i)","Vec3f (Vec4f)","Vec3f (Vec4i)","float __index (Vec3f, uint32)","void __newindex (Vec3f, uint32, float)","Vec3f __add (Vec3f, Vec3f)","Vec3f __add (Vec3f, Vec3i)","Vec3f __add (Vec3f, float)","Vec3f __add (float, Vec3f)","Vec3f __sub (Vec3f, Vec3f)","Vec3f __sub (Vec3f, Vec3i)","Vec3f __sub (Vec3f, float)","Vec3f __sub (float, Vec3f)","Vec3f __mul (Vec3f, Vec3f)","Vec3f __mul (Vec3f, Vec3i)","Vec3f __mul (Vec3f, float)","Vec3f __mul (float, Vec3f)","Vec3f __div (Vec3f, Vec3f)","Vec3f __div (Vec3f, Vec3i)","Vec3f __div (Vec3f, float)","Vec3f __div (float, Vec3f)","Vec3f __mod (Vec3f, Vec3f)","Vec3f __mod (Vec3f, Vec3i)","Vec3f __mod (Vec3f, float)","Vec3f __mod (float, Vec3f)","Vec3f __pow (Vec3f, Vec3f)","Vec3f __pow (Vec3f, Vec3i)","Vec3f __pow (Vec3f, float)","Vec3f __pow (float, Vec3f)","Vec3f __unm (Vec3f)","bool __eq (Vec3f, Vec3f)","bool __eq (Vec3f, Vec3i)","float Len ()","float Length ()","float SqrLength ()","bool IsZero ()","Vec3f GetAbs ()","void Clamp (Vec3f, float, float)","void Clamp (Vec3f, Vec3f, Vec3f)","Vec3f GetClamped (Vec3f, float, float)","Vec3f GetClamped (Vec3f, Vec3f, Vec3f)","float Dot (Vec3f, Vec3f)","float Dot (Vec3f, Vec3i)","bool IsAnyNaN ()","Vec3f Lerp (Vec3f, Vec3f, float)","Vec3f Normalize ()","Vec3f GetNormalized ()","void Ceil (Vec3f)","Vec3f GetCeiled (Vec3f)","void Floor (Vec3f)","Vec3f GetFloored (Vec3f)","void Round (Vec3f)","Vec3f GetRounded (Vec3f)","float DistanceTo (Vec3f)","Vec3f Cross (Vec3f, Vec3f)","Vec3f Cross (Vec3f, Vec3i)","string __tostring (Vec3f)"},Properties={"float x","float y","float z","Vec3f zero","Vec3f up","Vec3f right","Vec3f forward","Vec3f down","Vec3f left","Vec3f back"}},Cylinder={Methods={"Cylinder (this_state)","Cylinder (Vec3f, Vec3f, float, float, this_state)","Cylinder (Vec3f, Vec3f, float, this_state)","Cylinder (Vec3f, Vec3f, this_state)"}},Capsule={Methods={"Capsule (this_state)","Capsule (Vec3f, Vec3f, float, float, this_state)","Capsule (Vec3f, Vec3f, float, this_state)","Capsule (Vec3f, Vec3f, this_state)"}},Sphere={Methods={"Sphere (this_state)","Sphere (Vec3f, float, this_state)","Sphere (Vec3f, this_state)"}},VoxelDataParams={},Vec4i={Methods={"Vec4i ()","Vec4i (int32)","Vec4i (float)","Vec4i (int32, int32, int32, int32)","Vec4i (int32, int32, int32, float)","Vec4i (int32, int32, float, int32)","Vec4i (int32, int32, float, float)","Vec4i (int32, float, int32, int32)","Vec4i (int32, float, int32, float)","Vec4i (int32, float, float, int32)","Vec4i (int32, float, float, float)","Vec4i (float, int32, int32, int32)","Vec4i (float, int32, int32, float)","Vec4i (float, int32, float, int32)","Vec4i (float, int32, float, float)","Vec4i (float, float, int32, int32)","Vec4i (float, float, int32, float)","Vec4i (float, float, float, int32)","Vec4i (float, float, float, float)","Vec4i (Vec2i, int32, int32)","Vec4i (Vec2i, int32, float)","Vec4i (Vec2i, float, int32)","Vec4i (Vec2i, float, float)","Vec4i (Vec2f, int32, int32)","Vec4i (Vec2f, int32, float)","Vec4i (Vec2f, float, int32)","Vec4i (Vec2f, float, float)","Vec4i (int32, Vec2i, int32)","Vec4i (int32, Vec2i, float)","Vec4i (int32, Vec2f, int32)","Vec4i (int32, Vec2f, float)","Vec4i (float, Vec2i, int32)","Vec4i (float, Vec2i, float)","Vec4i (float, Vec2f, int32)","Vec4i (float, Vec2f, float)","Vec4i (int32, int32, Vec2i)","Vec4i (int32, int32, Vec2f)","Vec4i (int32, float, Vec2i)","Vec4i (int32, float, Vec2f)","Vec4i (float, int32, Vec2i)","Vec4i (float, int32, Vec2f)","Vec4i (float, float, Vec2i)","Vec4i (float, float, Vec2f)","Vec4i (Vec2i, Vec2i)","Vec4i (Vec2i, Vec2f)","Vec4i (Vec2f, Vec2i)","Vec4i (Vec2f, Vec2f)","Vec4i (Vec3i, int32)","Vec4i (Vec3i, float)","Vec4i (Vec3f, int32)","Vec4i (Vec3f, float)","Vec4i (int32, Vec3i)","Vec4i (int32, Vec3f)","Vec4i (float, Vec3i)","Vec4i (float, Vec3f)","Vec4i (Vec4i)","Vec4i (Vec4f)","int32 __index (Vec4i, uint32)","void __newindex (Vec4i, uint32, int32)","Vec4i __add (Vec4i, Vec4i)","Vec4f __add (Vec4i, Vec4f)","Vec4i __add (Vec4i, int32)","Vec4i __add (int32, Vec4i)","Vec4i __sub (Vec4i, Vec4i)","Vec4f __sub (Vec4i, Vec4f)","Vec4i __sub (Vec4i, int32)","Vec4i __sub (int32, Vec4i)","Vec4i __mul (Vec4i, Vec4i)","Vec4f __mul (Vec4i, Vec4f)","Vec4i __mul (Vec4i, classTMatrix4<int>)","Vec4i __mul (Vec4i, int32)","Vec4i __mul (int32, Vec4i)","Vec4i __div (Vec4i, Vec4i)","Vec4f __div (Vec4i, Vec4f)","Vec4i __div (Vec4i, int32)","Vec4i __div (int32, Vec4i)","Vec4i __mod (Vec4i, Vec4i)","Vec4f __mod (Vec4i, Vec4f)","Vec4i __mod (Vec4i, int32)","Vec4i __mod (int32, Vec4i)","Vec4i __pow (Vec4i, Vec4i)","Vec4f __pow (Vec4i, Vec4f)","Vec4i __pow (Vec4i, int32)","Vec4i __pow (int32, Vec4i)","Vec4i __unm (Vec4i)","bool __eq (Vec4i, Vec4i)","bool __eq (Vec4i, Vec4f)","int32 Len ()","int32 Length ()","int32 SqrLength ()","bool IsZero ()","Vec4i GetAbs ()","void Clamp (Vec4i, int32, int32)","void Clamp (Vec4i, Vec4i, Vec4i)","Vec4i GetClamped (Vec4i, int32, int32)","Vec4i GetClamped (Vec4i, Vec4i, Vec4i)","int32 Dot (Vec4i, Vec4i)","float Dot (Vec4i, Vec4f)","Vec4i __band (Vec4i, Vec4i)","Vec4i __band (int32, Vec4i)","Vec4i __band (Vec4i, int32)","Vec4i __bor (Vec4i, Vec4i)","Vec4i __bor (int32, Vec4i)","Vec4i __bor (Vec4i, int32)","Vec4i __bxor (Vec4i, Vec4i)","Vec4i __bxor (int32, Vec4i)","Vec4i __bxor (Vec4i, int32)","Vec4i __bnot (Vec4i)","Vec4i __shl (Vec4i, Vec4i)","Vec4i __shl (int32, Vec4i)","Vec4i __shl (Vec4i, int32)","Vec4i __shr (Vec4i, Vec4i)","Vec4i __shr (int32, Vec4i)","Vec4i __shr (Vec4i, int32)"},Properties={"int32 x","int32 y","int32 z","int32 w","Vec4i zero","Vec4i up","Vec4i right","Vec4i forward","Vec4i down","Vec4i left","Vec4i back"}},SkyboxTexture={Methods={"SkyboxTexture (string, FilePath)"}},Sampler={Properties={"SamplerParams params"}},ClientScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","int64 GetCurrentFrame ()","string GetProcessState ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (string)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectToRoot (shared_ptr<classae::scene::Object>)","bool CanMoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","void SetActiveCamera (shared_ptr<classae::scene::Camera>)","string AddNewScriptFile (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","Vec3f ConvertWcToDc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertWcToDc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","Vec3f ConvertDcToWc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertDcToWc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","bool IsNameValid (string)","string MakeNameValid (string)","bool UpdatePrefab (shared_ptr<classae::scene::Object>)","bool ResetPrefab (shared_ptr<classae::scene::Object>)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}},VoxelDB={Methods={"void Clear ()","void Flush ()","Vec3i FromWorld (Vec3f)","int32 FromWorld (float)","Vec3f ToWorld (Vec3i)","float ToWorld (float)","bool SetUnitVoxelDim (bool)","void SetMask_deprecated (Vec3i, bool)","bool GetMask (Vec3i)","bool GetMask (double, double, double)","int32 GetMaskNeighbours (Vec3i, int32)","int32 GetMaskNeighbours (double, double, double, int32)","int32 GetMaskNeighboursVN (Vec3i, int32)","int32 GetMaskNeighboursVN (double, double, double, int32)","void ClearVoxel (Vec3i)","void ClearVoxel (double, double, double)","void SetColor (Vec3i, Vec3f)","void SetColor (double, double, double, Vec3f)","basic_object<classsol::basic_reference<0> > GetColor (Vec3i, this_state)","Vec3f GetNormalV (Vec3i)","Vec3f GetFilteredNormalV (Vec3i)","void PaintSphereV (Vec3i, int32, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32, int32, Vec3f)","void ClearSphereV (Vec3i, int32)","void ClearBoxV (Vec3i, Vec3i)","void ClearBoxV (Vec3i, Vec3i, Quatf)","void ClearCapsuleV (Vec3i, Vec3i, int32)","void ClearCapsuleV (Vec3i, Vec3i, int32, int32)","void MakeSphereV (Vec3i, int32, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32, int32, Vec3f)","void PaintSphereBlendV (Vec3i, int32, Vec3f, float, float, float)","Vec3f GetNormal (Vec3f)","Vec3f GetFilteredNormal (Vec3f)","basic_object<classsol::basic_reference<0> > TraceRay (Vec3f, Vec3f, float, this_state)","bool CheckSphere (Vec3f, float)","bool CheckBox (Vec3f, Vec3f, Quatf)","bool CheckBox (Vec3f, Vec3f)","bool CheckCapsule (Vec3f, Vec3f, float, float)","bool CheckCapsule (Vec3f, Vec3f, float)","void PaintSphere (Vec3f, float)","void PaintBox (Vec3f, Vec3f, Quatf)","void PaintBox (Vec3f, Vec3f)","void PaintCapsule (Vec3f, Vec3f, float, float)","void PaintCapsule (Vec3f, Vec3f, float)","void ClearSphere (Vec3f, float)","void ClearBox (Vec3f, Vec3f, Quatf)","void ClearBox (Vec3f, Vec3f)","void ClearCapsule (Vec3f, Vec3f, float, float)","void ClearCapsule (Vec3f, Vec3f, float)","void MakeSphere (Vec3f, float)","void MakeBox (Vec3f, Vec3f, Quatf)","void MakeBox (Vec3f, Vec3f)","void MakeCapsule (Vec3f, Vec3f, float, float)","void MakeCapsule (Vec3f, Vec3f, float)","void SetMaterial (Vec3f)","void InstantiateIE (Vec3f, Quatf, float)","void ClearContent ()","void RebuildLods (bool)","bool CopyLayer (string, string)","bool ClearLayer (string)","void RemoveHiddenVoxelsC32 ()","void RemoveHiddenVoxelsN16 ()","basic_table_core<0,classsol::basic_reference<0> > GetInfo (this_state)","void CopyTo (shared_ptr<classae::scene::VoxelDB>)","bool Save (string, string, int32)","basic_object<classsol::basic_reference<0> > InspectNormals (this_state, Vec3f, uint32, uint32)","basic_object<classsol::basic_reference<0> > Inspect (this_state, Vec3f, int32, int32, basic_table_core<0,classsol::basic_reference<0> >, int32)","int64 GetLODsCount ()","basic_table_core<0,classsol::basic_reference<0> > GetLayerStats (this_state, string)","basic_table_core<0,classsol::basic_reference<0> > GetUsedLayers (this_state)","tuple<classTVector3<float>,classTVector3<float> > GetAABounds ()"},Properties={"bool autoLightingUpdate","int32 voxelDim","bool BlendEnabled","BlendMode BlendMode","float BlendOpacity","float BlendRadiusRatio"}},Transform={Methods={"bool __eq (Transform, Transform)","Vec3f LocalToWorld (Vec3f)","Vec3f WorldToLocal (Vec3f)","Vec3f LocalToWorldVec (Vec3f)","Vec3f WorldToLocalVec (Vec3f)","void LookAt (Vec3f)","void LookAt (Vec3f, Vec3f)"},Properties={"shared_ptr<classae::scene::Object> object","bool isDestroyed","const char type","bool Active","bool ActiveInHierarchy","shared_ptr<classae::scene::Object> Object","bool IsDestroyed","const char Type","Vec3f localPos","float localScale","Quatf localRot","Vec3f localEulerRot","Vec3f pos","Quatf rot","Vec3f eulerRot","float scale","Vec3f right","Vec3f up","Vec3f forward"}},Effect={Methods={"Effect (string, FilePath)"}},CommandLine={Methods={"bool HasOption (string)","float GetOptionFloat (string, float)","int64 GetOptionInt (string, int64)","string GetOption (string, string)","Vec2f GetOptionVec2 (string, Vec2f)","Vec3f GetOptionVec3 (string, Vec3f)","Vec4f GetOptionVec4 (string, Vec4f)","basic_table_core<0,classsol::basic_reference<0> > GetAll (CommandLine, this_state)"}},UIItem={Methods={"string GetID ()","string GetType ()","string GetLabel ()"}},EntityPath={Methods={"EntityPath (string)","void AddPointPath (double, Transformation)","void AddPointPathCurrent (Transformation)","void Start (double)","void Clear ()"},Properties={"vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> > path","int32 interpolation"}},LightingUpdate={Properties={"RealtimeLightingInfo realtimeLighting"}},Mat3f={Methods={"Mat3f ()","Mat3f (float)","Mat3f (float, float, float, float, float, float, float, float, float)","Mat3f (Vec3f, Vec3f, Vec3f)","Mat3f (Vec3f, Vec3f, Vec3i)","Mat3f (Vec3f, Vec3i, Vec3f)","Mat3f (Vec3f, Vec3i, Vec3i)","Mat3f (Vec3i, Vec3f, Vec3f)","Mat3f (Vec3i, Vec3f, Vec3i)","Mat3f (Vec3i, Vec3i, Vec3f)","Mat3f (Vec3i, Vec3i, Vec3i)","Mat3f (Mat3f)","Mat3f (Mat4f)","Mat3f (Quatf)","Vec3f __index (Mat3f, uint32)","void __newindex (Mat3f, uint32, Vec3f)","Mat3f __add (Mat3f, Mat3f)","Mat3f __add (Mat3f, float)","Mat3f __add (float, Mat3f)","Mat3f __sub (Mat3f, Mat3f)","Mat3f __sub (Mat3f, float)","Mat3f __sub (float, Mat3f)","Mat3f __mul (Mat3f, Mat3f)","Mat3f __mul (Mat3f, float)","Mat3f __mul (float, Mat3f)","Vec3f __mul (Vec3f, Mat3f)","Mat3f __div (Mat3f, Mat3f)","Mat3f __div (Mat3f, float)","Mat3f __div (float, Mat3f)","Vec3f __div (Vec3f, Mat3f)","Mat3f __unm (Mat3f)","bool __eq (Mat3f, Mat3f)","float GetDeterminant ()","Mat3f Transpose ()","Mat3f GetTransposed ()","Mat3f Invert ()","Mat3f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f row1","Vec3f row2","Vec3f row3"}},HUNormalsTexture={Methods={"HUNormalsTexture (string, FilePath)"}},Material={Methods={"Material (string)","bool HasProperty (Material, string)","Vec3f GetPropertyVec3 (Material, string)","Vec4f GetPropertyVec4 (Material, string)","void SetProperty (Material, string, Vec3f)","void SetProperty (Material, string, Vec4f)"}},Scene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","int64 GetCurrentFrame ()","string GetProcessState ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (string)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectToRoot (shared_ptr<classae::scene::Object>)","bool CanMoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","void SetActiveCamera (shared_ptr<classae::scene::Camera>)","string AddNewScriptFile (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","Vec3f ConvertWcToDc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertWcToDc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","Vec3f ConvertDcToWc (VoxelRenderer, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > ConvertDcToWc (this_state, VoxelRenderer, basic_table_core<0,classsol::basic_reference<0> >)","bool IsNameValid (string)","string MakeNameValid (string)","bool UpdatePrefab (shared_ptr<classae::scene::Object>)","bool ResetPrefab (shared_ptr<classae::scene::Object>)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}}},Namespaces={structsol={"this_state","variadic_args"},["ae::core"]={"Guid"},["classae::core"]={"Res<classae::renderer::Material>"},["ae::graphics"]={"Options"},classstd={"shared_ptr<classae::core::Image>","shared_ptr<classae::lighting::LightingUpdate>","shared_ptr<classae::scene::Camera>","shared_ptr<classae::scene::Filter>","shared_ptr<classae::scene::LuaShape>","shared_ptr<classae::scene::MeshData>","shared_ptr<classae::scene::Object>","shared_ptr<classae::scene::Script>","shared_ptr<classae::scene::Sky>","shared_ptr<classae::scene::StaticVoxelData>","shared_ptr<classae::scene::Transform>","shared_ptr<classae::scene::VoxelDB>","shared_ptr<classae::scene::VoxelData>","shared_ptr<classae::scene::VoxelDataResource>","shared_ptr<classae::scene::VoxelRenderer>","shared_ptr<classae::studio::FileLua>","tuple<bool,classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>> >","tuple<classTVector3<float>,classTVector3<float> >","tuple<classTVector3<float>,classae::core::TQuaternion<float> >","tuple<classTVector3<float>,classae::core::TQuaternion<float>,classTVector3<float> >","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> >","vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> >"},classsol={"basic_object<classsol::basic_reference<0> >","basic_table_core<0,classsol::basic_reference<0> >"}},["Global Functions"]={"void EnableRenderingWithFadeEffect (int32, float)","void DisableRenderingWithFadeEffect (int32, float)","void ToggleRenderingWithFadeEffect (int32, float)"}};return _;end