do local _={Pointers={"AssetManager","CommandLine","ComputeDesc","GraphicsDesc","Image","RayTracingDesc","UIItem","const IRenderTarget","const IShader","const char","const uint8_t","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >"},Namespaces={IPipeline={"Desc"},["ae::graphics"]={"Options"},["const IPipeline"]={"ComputeDesc","GraphicsDesc","RayTracingDesc"},classsol={"basic_object<classsol::basic_reference<0> >","basic_table_core<0,classsol::basic_reference<0> >"},["classae::core"]={"Res<classae::renderer::Material>"},rttr={"type"},IRenderTarget={"Desc"},["ae::core"]={"Guid"},classstd={"shared_ptr<classae::lighting::LightingUpdate>","shared_ptr<classae::scene::Camera>","shared_ptr<classae::scene::Filter>","shared_ptr<classae::scene::LuaShape>","shared_ptr<classae::scene::MeshData>","shared_ptr<classae::scene::Object>","shared_ptr<classae::scene::Script>","shared_ptr<classae::scene::Sky>","shared_ptr<classae::scene::StaticVoxelData>","shared_ptr<classae::scene::Transform>","shared_ptr<classae::scene::VoxelDB>","shared_ptr<classae::scene::VoxelData>","shared_ptr<classae::scene::VoxelDataResource>","shared_ptr<classae::scene::VoxelRenderer>","tuple<classTVector3<float>,classTVector3<float> >","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> >","vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> >","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> >"},IBuffer={"Desc"},ITexture={"Desc"},["structae::graphics"]={"InputLayout"},["structae::core"]={"Rect"},Vector_std={"string"},IShader={"Desc"},std={"string"},structsol={"this_state","variadic_args"},IAccelerationStructure={"Desc"},IAdapter={"Caps","Features","Limits","ResourceStats"}},Enums={BlendOp={[1]="Subtract",[2]="ReverseSubtract",[3]="Min",[4]="Max",[0]="Add"},VSyncMode={[1]="Enabled",[2]="Disabled",[3]="Adaptive",[0]="Default"},LuaErrorType={[1]="DoFile",[2]="Runtime",[3]="UIAction",[0]="None"},VRControllerButton={[1]="A",[2]="B",[4]="Menu",[8]="Thumb",[16]="Shoulder"},VertexComponentFormat={[1]="Int8",[2]="Int8Vec2",[3]="Int8Vec3",[4]="Int8Vec4",[5]="Int16",[6]="Int16Vec2",[7]="Int16Vec3",[8]="Int16Vec4",[9]="Int32",[10]="Int32Vec2",[11]="Int32Vec3",[12]="Int32Vec4",[13]="UInt8",[14]="UInt8Vec2",[15]="UInt8Vec3",[16]="UInt8Vec4",[17]="UInt16",[18]="UInt16Vec2",[19]="UInt16Vec3",[20]="UInt16Vec4",[21]="UInt32",[22]="UInt32Vec2",[23]="UInt32Vec3",[24]="UInt32Vec4",[25]="Float",[26]="FloatVec2",[27]="FloatVec3",[28]="FloatVec4",[29]="FloatMat2x2",[30]="FloatMat2x3",[31]="FloatMat2x4",[32]="FloatMat3x2",[33]="FloatMat3x3",[34]="FloatMat3x4",[35]="FloatMat4x2",[36]="FloatMat4x3",[37]="FloatMat4x4",[38]="Double",[39]="DoubleVec2",[40]="DoubleVec3",[41]="DoubleVec4",[42]="DoubleMat2x2",[43]="DoubleMat2x3",[44]="DoubleMat2x4",[45]="DoubleMat3x2",[46]="DoubleMat3x3",[47]="DoubleMat3x4",[48]="DoubleMat4x2",[49]="DoubleMat4x3",[50]="DoubleMat4x4",[0]="Unknown"},ShaderPrecisionType={[1]="MediumFloat",[2]="HighFloat",[3]="LowInt",[4]="MediumInt",[5]="HighInt",[0]="LowFloat"},PrimitiveTopology={[1]="LineStrip",[2]="Lines",[3]="TriangleStrip",[4]="TriangleFan",[5]="Triangles",[0]="Points"},FrontFaceWinding={[1]="CounterClockwise",[0]="Clockwise"},UpdateFrequency={[1]="Frame",[2]="ObjectFrame",[3]="ObjectDraw",[0]="Once"},System={[1]="Windows",[2]="Linux",[3]="WebBrowser",[4]="MacOS",[5]="iOS",[6]="Android",[0]="Unknown"},UIActionsPlace={[1]="Server",[2]="Inherited",[0]="Client"},VertexComponent={[1]="Index",[2]="Position0",[3]="Position1",[4]="Position2",[5]="Position3",[6]="TexCoord0",[7]="TexCoord1",[8]="TexCoord2",[9]="TexCoord3",[10]="TexCoord4",[11]="Color0",[12]="Color1",[13]="Index0",[14]="Index1",[15]="Normal0",[16]="Normal1",[17]="Tangent",[18]="Bitangent",[19]="Data0",[20]="Data1",[21]="Data2",[22]="Data3",[23]="Data4",[0]="Unknown"},PixelFormat={[1]="RGB888",[2]="RGBA8888",[3]="RGB565",[4]="RGBA5551",[5]="RGBA4444",[6]="BGR888",[7]="BGRA8888",[8]="Depth16",[9]="Depth24",[10]="Depth32",[11]="Depth24Stencil8",[12]="Depth32Stencil8X24",[13]="A8",[14]="LA88",[15]="RGB16U",[16]="RGBA16U",[17]="R32f",[18]="RGB32f",[19]="RGBA32f",[20]="R16f",[21]="RGB16f",[22]="RGBA16f",[23]="DXT1",[24]="DXT1_with_ALPHA",[25]="DXT3",[26]="DXT5",[27]="ATC_RGB",[28]="ATC_RGBEA",[29]="ATC_RGBIA",[30]="ETC_RGB",[31]="ETC2_RGB",[32]="ETC2_RGBA_PUNCHTHROUGH_ALPHA",[33]="ETC2_RGBA",[34]="PVRTC4_RGB",[35]="PVRTC2_RGB",[36]="PVRTC4_RGBA",[37]="PVRTC2_RGBA",[38]="Int8",[39]="Int16",[40]="Int32",[41]="UInt8",[42]="UInt16",[43]="UInt32",[0]="Unknown"},RendererStateFlags={[1]="Shadows",[2]="Fog",[4]="MultiView",[8]="Lighting",[131072]="DepthPass"},AttachmentFlags={[8]="Color0",[2]="Depth",[4]="DepthAndStencil",[64]="Color3",[32]="Color2",[16]="Color1"},PolygonMode={[1]="Line",[2]="Point",[0]="Fill"},BlendFactor={[1]="One",[2]="SrcColor",[3]="OneMinusSrcColor",[4]="DstColor",[5]="OneMinusDstColor",[6]="SrcAlpha",[7]="OneMinusSrcAlpha",[8]="DstAlpha",[9]="OneMinusDstAlpha",[10]="ConstantColor",[11]="OneMinusConstantColor",[12]="ConstantAlpha",[13]="OneMinusConstantAlpha",[14]="SrcAlphaSaturate",[15]="Src1Color",[16]="OneMinusSrc1Color",[17]="Src1Alpha",[18]="OneMinusSrc1Alpha",[0]="Zero"},UsageFlagBits={[1]="UsageTransferSrcBIT",[2]="UsageTransferDstBIT",[4]="UsageSampledBIT",[8]="UsageStorageBIT",[512]="UsageFragmentDensityMapBIT",[256]="UsageShadingRateImageBIT",[128]="UsageInputAttachmentBIT",[16]="UsageColorAttachmentBIT",[64]="UsageTransientAttachmentBIT",[32]="UsageDepthStencilAttachmentBIT"},DrawingCommandsFlags={[1]="BaseVertex",[2]="BaseInstance",[4]="BaseVertexBaseInstance",[16]="MultiBaseInstance",[32]="MultiBaseVertexBaseInstance",[8]="MultiBaseVertex"},DepthBufferMode={[1]="DepthOnly",[2]="DepthAndStencil",[0]="None"},Type={[1]="Texture1D",[2]="Texture1DArray",[3]="Texture2D",[4]="Texture2DArray",[5]="Texture3D",[6]="TextureCube",[7]="TextureCubeArray",[0]="Unknown"},Operation={[1]="Zero",[2]="Replace",[3]="Increment",[4]="IncrementWrap",[5]="Decrement",[6]="DecrementWrap",[7]="Invert",[0]="Keep"},ShaderResourceType={[1]="Bool",[2]="BoolVec2",[3]="BoolVec3",[4]="BoolVec4",[5]="Int",[6]="IntVec2",[7]="IntVec3",[8]="IntVec4",[9]="UInt",[10]="UIntVec2",[11]="UIntVec3",[12]="UIntVec4",[13]="Float",[14]="FloatVec2",[15]="FloatVec3",[16]="FloatVec4",[17]="FloatMat2x2",[18]="FloatMat2x3",[19]="FloatMat2x4",[20]="FloatMat3x2",[21]="FloatMat3x3",[22]="FloatMat3x4",[23]="FloatMat4x2",[24]="FloatMat4x3",[25]="FloatMat4x4",[26]="Double",[27]="DoubleVec2",[28]="DoubleVec3",[29]="DoubleVec4",[30]="DoubleMat2x2",[31]="DoubleMat2x3",[32]="DoubleMat2x4",[33]="DoubleMat3x2",[34]="DoubleMat3x3",[35]="DoubleMat3x4",[36]="DoubleMat4x2",[37]="DoubleMat4x3",[38]="DoubleMat4x4",[39]="Image",[40]="Texture",[41]="Buffer",[42]="AccelerationStructure",[0]="Unknown"},CullMode={[1]="Front",[2]="Back",[3]="FrontAndBack",[0]="None"},ClientMode={[1]="Edit",[0]="View"},HitType={[1]="StaticCommon",[2]="StaticTmp",[3]="ObjectVoxel",[0]="Invalid"},TextureWrappingMode={[1]="Repeat",[2]="MirroredRepeat",[0]="ClampToEdge"},UIItemType={[1]="Window",[2]="Header",[3]="Panel",[4]="Grid",[5]="Tab",[6]="Separator",[7]="Button",[8]="Number",[9]="Wheel",[10]="TextInput",[11]="ListBox",[12]="ListBoxSimple",[13]="ListBoxEnum",[14]="CheckBox",[15]="Radio",[16]="Label",[17]="Color",[18]="Vector",[19]="Matrix",[20]="Transformation",[21]="Plot",[22]="Count",[0]="Undefined"},TextureFiltering={[1]="Linear",[2]="Bilinear",[3]="Trilinear",[4]="Anisotropic",[0]="None"},Function={[1]="Less",[2]="Equal",[3]="Lequal",[4]="Greater",[5]="Notequal",[6]="Gequal",[7]="Always",[0]="Never"},BlendMode={[1]="Darken",[2]="Multiply",[3]="ColorBurn",[4]="LinearBurn",[5]="DarkenColor",[6]="Lighten",[7]="Screen",[8]="ColorDodge",[9]="LinearDodge",[10]="LightenColor",[11]="Overlay",[12]="SoftLight",[13]="HardLight",[14]="VividLight",[15]="LinearLight",[16]="PinLight",[17]="HardMix",[18]="Difference",[19]="Exclusion",[20]="Subtract",[21]="Divide",[22]="Hue",[23]="Color",[24]="Saturation",[25]="Luminosity",[0]="Normal"},ResourceUsage={[1]="Dynamic",[2]="Stream",[0]="Static"},CpuArch={[1]="X86",[2]="X86_64",[3]="Arm",[4]="Arm64",[5]="Wasm",[0]="Unknown"},TmpLayerFlags={[1]="Common",[2]="Atlas",[0]="None"}},Classes={Object={Methods={"shared_ptr<classae::scene::Object> GetChild (string)","bool RemoveParent ()","shared_ptr<classae::scene::Script> AddScript (string, bool)","shared_ptr<classae::scene::MeshData> AddMeshData (string)","shared_ptr<classae::scene::VoxelData> AddVoxelData (string)","shared_ptr<classae::scene::StaticVoxelData> AddStaticVoxelData (string)","shared_ptr<classae::scene::VoxelRenderer> AddVoxelRenderer ()","shared_ptr<classae::scene::Camera> AddCamera ()","shared_ptr<classae::scene::Sky> AddSkybox ()","basic_object<classsol::basic_reference<0> > AddComponent (string, this_state)","bool RemoveComponent (string, this_state)","bool RemoveComponent (basic_object<classsol::basic_reference<0> >, this_state)","basic_object<classsol::basic_reference<0> > GetComponentByType (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetComponentsByType (string, this_state)","basic_object<classsol::basic_reference<0> > FindScript (string, this_state)","shared_ptr<classae::scene::Camera> GetCamera ()","string GetNetworkFlow ()","string GetScriptUpdateTime ()","uint32_t GetRefCount ()"},Properties={"shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string name","bool active","bool activeInHierarchy","bool save","string tag","shared_ptr<classae::scene::Object> parent","basic_table_core<0,classsol::basic_reference<0> > children","uint64_t childCount","int32_t siblingIndex","basic_table_core<0,classsol::basic_reference<0> > components","uint64_t componentsCount"}},Gamepad={Methods={"bool ButtonDown (uint16_t)","bool Button (uint16_t)","bool ButtonUp (uint16_t)","float Axis (uint16_t)","int32_t Rumble (uint16_t, uint16_t, uint32_t)","int32_t RumbleTriggers (uint16_t, uint16_t, uint32_t)"}},BaseLightingParams={Properties={"Vec3f diffuseColor","bool directionalLight","Vec3f direction","float diffuseRayLen","float diffuseDirSpread","int32_t diffuseSamples","float shadowsIntensity","bool shadows","bool ambientOcclusion","Vec3f ambientColor","float ambientRayLen","int32_t ambientSamples","float skyAmbientIntensity","float ambientOcclusionFactor"}},Sky={Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","float cloudScale","float cloudOffset","float cloudSlope","float sunAzimuth","float sunAltitude","Vec3f rayleighCoeff","float mieCoeff","bool render","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform"}},["IPipeline::ComputeDesc"]={Methods={"IPipeline::ComputeDesc ()"},Properties={"const IShader pShader"}},VoxelDataResource={Methods={"shared_ptr<classae::scene::VoxelDataResource> new (string, bool, this_state)","shared_ptr<classae::scene::VoxelDataResource> new (string, this_state)","string Save (string, bool)","tuple<classTVector3<float>,classTVector3<float> > GetBounds ()","basic_object<classsol::basic_reference<0> > Duplicate (this_state)","void RebuildLighting ()"},Properties={"bool isEditable","bool isSaved","bool hasAnyVoxels","float volumePerc"}},ClientContext={Methods={"string UIItemUpdate (uint32_t, UIItem, basic_object<classsol::basic_reference<0> >)","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64_t)","string GetUIActionType (uint64_t)","string GetUIActionScript (uint64_t)","uint32_t GetCurrentUIActionID ()","void OnLuaLog ()","bool IsServer ()","bool IsClient ()","void OpenScriptFile (string, int64_t)","string GetScript (string)","void ClearLuaLogClient ()","void ScrollToLastestLuaLog ()","CommandLine GetCommandLine ()","basic_table_core<0,classsol::basic_reference<0> > GetVersion (this_state)","System GetSystem ()","double GetFPS ()","uint32_t GetScriptsVersion ()","float GetLogValue (string)","void SetLogValue (string, float)","Vector_float GetLogValueForPlot (string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","double GetLogTime (string)","basic_table_core<0,classsol::basic_reference<0> > GetLogTimers (string, this_state)","string GetSystemConsole ()","string GetSystemOutput ()","Vec2i GetVideoRange ()","int32_t GetCurrentFrame ()","void SetCurrentFrame (int32_t)","bool IsContainerEnabledAndVisible (UIItem)","void LuaStartDebugger ()","void LuaEnableDebugging (bool)"},Properties={"uint64_t clientID","ClientMode mode"}},FileTexture={Methods={"FileTexture (string, FilePath)","bool IsValid ()","bool IsManaged ()","string GetPath ()","ResourceUsage GetUsage ()","void SetUsage (ResourceUsage)","Image GetImage ()"}},EntityPath={Methods={"EntityPath (string)","bool IsValid ()","bool IsManaged ()","void AddPointPath (double, Transformation)","void AddPointPathCurrent (Transformation)","void Start (double)","void Clear ()"},Properties={"vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> > path","int32_t interpolation"}},EntityPathWaypoint={Methods={"EntityPathWaypoint ()"},Properties={"double time","Vec3f pos","Quatf rot"}},MeshRenderer={Methods={"bool __eq (MeshRenderer, MeshRenderer)"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","Res<classae::renderer::Material> material","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform"}},["IBuffer::Desc"]={Methods={"IBuffer::Desc ()"},Properties={"Type type","ResourceUsage usage","uint32_t usageFlags","uint64_t size"}},["IAdapter::Limits"]={Methods={"IAdapter::Limits ()"},Properties={"uint32_t constantBufferOffsetAlignment","uint32_t maxConstantBlockSize","uint32_t maxVertexConstantBlocks","uint32_t maxPixelConstantBlocks","uint32_t maxGeometryConstantBlocks","uint32_t maxComputeConstantBlocks"}},ClientScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","string AddNewScriptFile (string)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","bool IsNameValid (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}},Vec4f={Methods={"Vec4f ()","Vec4f (float)","Vec4f (int32_t)","Vec4f (float, float, float, float)","Vec4f (float, float, float, int32_t)","Vec4f (float, float, int32_t, float)","Vec4f (float, float, int32_t, int32_t)","Vec4f (float, int32_t, float, float)","Vec4f (float, int32_t, float, int32_t)","Vec4f (float, int32_t, int32_t, float)","Vec4f (float, int32_t, int32_t, int32_t)","Vec4f (int32_t, float, float, float)","Vec4f (int32_t, float, float, int32_t)","Vec4f (int32_t, float, int32_t, float)","Vec4f (int32_t, float, int32_t, int32_t)","Vec4f (int32_t, int32_t, float, float)","Vec4f (int32_t, int32_t, float, int32_t)","Vec4f (int32_t, int32_t, int32_t, float)","Vec4f (int32_t, int32_t, int32_t, int32_t)","Vec4f (Vec2f, float, float)","Vec4f (Vec2f, float, int32_t)","Vec4f (Vec2f, int32_t, float)","Vec4f (Vec2f, int32_t, int32_t)","Vec4f (Vec2i, float, float)","Vec4f (Vec2i, float, int32_t)","Vec4f (Vec2i, int32_t, float)","Vec4f (Vec2i, int32_t, int32_t)","Vec4f (float, Vec2f, float)","Vec4f (float, Vec2f, int32_t)","Vec4f (float, Vec2i, float)","Vec4f (float, Vec2i, int32_t)","Vec4f (int32_t, Vec2f, float)","Vec4f (int32_t, Vec2f, int32_t)","Vec4f (int32_t, Vec2i, float)","Vec4f (int32_t, Vec2i, int32_t)","Vec4f (float, float, Vec2f)","Vec4f (float, float, Vec2i)","Vec4f (float, int32_t, Vec2f)","Vec4f (float, int32_t, Vec2i)","Vec4f (int32_t, float, Vec2f)","Vec4f (int32_t, float, Vec2i)","Vec4f (int32_t, int32_t, Vec2f)","Vec4f (int32_t, int32_t, Vec2i)","Vec4f (Vec2f, Vec2f)","Vec4f (Vec2f, Vec2i)","Vec4f (Vec2i, Vec2f)","Vec4f (Vec2i, Vec2i)","Vec4f (Vec3f, float)","Vec4f (Vec3f, int32_t)","Vec4f (Vec3i, float)","Vec4f (Vec3i, int32_t)","Vec4f (float, Vec3f)","Vec4f (float, Vec3i)","Vec4f (int32_t, Vec3f)","Vec4f (int32_t, Vec3i)","Vec4f (Vec4f)","Vec4f (Vec4i)","float __index (Vec4f, uint32_t)","void __newindex (Vec4f, uint32_t, float)","Vec4f __add (Vec4f, Vec4f)","Vec4f __add (Vec4f, Vec4i)","Vec4f __add (Vec4f, float)","Vec4f __add (float, Vec4f)","Vec4f __sub (Vec4f, Vec4f)","Vec4f __sub (Vec4f, Vec4i)","Vec4f __sub (Vec4f, float)","Vec4f __sub (float, Vec4f)","Vec4f __mul (Vec4f, Vec4f)","Vec4f __mul (Vec4f, Vec4i)","Vec4f __mul (Vec4f, float)","Vec4f __mul (float, Vec4f)","Vec4f __div (Vec4f, Vec4f)","Vec4f __div (Vec4f, Vec4i)","Vec4f __div (Vec4f, float)","Vec4f __div (float, Vec4f)","Vec4f __mod (Vec4f, Vec4f)","Vec4f __mod (Vec4f, Vec4i)","Vec4f __mod (Vec4f, float)","Vec4f __mod (float, Vec4f)","Vec4f __pow (Vec4f, Vec4f)","Vec4f __pow (Vec4f, Vec4i)","Vec4f __pow (Vec4f, float)","Vec4f __pow (float, Vec4f)","Vec4f __unm (Vec4f)","bool __eq (Vec4f, Vec4f)","bool __eq (Vec4f, Vec4i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec4f GetAbs ()","void Clamp (Vec4f, float, float)","void Clamp (Vec4f, Vec4f, Vec4f)","Vec4f GetClamped (Vec4f, float, float)","Vec4f GetClamped (Vec4f, Vec4f, Vec4f)","float Dot (Vec4f, Vec4f)","float Dot (Vec4f, Vec4i)","bool IsAnyNaN ()","Vec4f Lerp (Vec4f, Vec4f, float)","Vec4f Normalize ()","Vec4f GetNormalized ()","void Ceil (Vec4f)","Vec4f GetCeiled (Vec4f)","void Floor (Vec4f)","Vec4f GetFloored (Vec4f)","void Round (Vec4f)","Vec4f GetRounded (Vec4f)","float DistanceTo (Vec4f)","string __tostring (Vec4f)"},Properties={"float x","float y","float z","float w","Vec4f zero","Vec4f up","Vec4f right","Vec4f forward","Vec4f down","Vec4f left","Vec4f back"}},["IPipeline::Desc"]={Methods={"IPipeline::Desc ()","IPipeline::Desc (GraphicsDesc)","IPipeline::Desc (ComputeDesc)","IPipeline::Desc (RayTracingDesc)"},Properties={"Type type","GraphicsDesc pGraphicsDesc","ComputeDesc pComputeDesc","RayTracingDesc pRayTracingDesc"}},["IPipeline::GraphicsDesc"]={Methods={"IPipeline::GraphicsDesc ()"},Properties={"const IShader pShaderVertex","const IShader pShaderFragment","const IShader pShaderGeometry","const IShader pShaderTesselationControl","const IShader pShaderTesselationEvaluation","const IRenderTarget pRenderTarget","InputLayout inputLayout","RasterizerParams rasterizerParams","BlendParams blendParams","DepthStencilParams depthStencilParams","PrimitiveTopology topology","bool primitiveRestartEnable"}},ViewPortParams={Methods={"ViewPortParams ()"},Properties={"Rect viewport","bool scissorEnable","Rect scissor"}},Hit={Properties={"Vec3f pos","Vec3f normal","Vec3f color","shared_ptr<classae::scene::Object> object","float distance","HitType type"}},Vec2i={Methods={"Vec2i ()","Vec2i (int32_t)","Vec2i (float)","Vec2i (int32_t, int32_t)","Vec2i (int32_t, float)","Vec2i (float, int32_t)","Vec2i (float, float)","Vec2i (Vec2i)","Vec2i (Vec2f)","Vec2i (Vec3i)","Vec2i (Vec3f)","Vec2i (Vec4i)","Vec2i (Vec4f)","int32_t __index (Vec2i, uint32_t)","void __newindex (Vec2i, uint32_t, int32_t)","Vec2i __add (Vec2i, Vec2i)","Vec2f __add (Vec2i, Vec2f)","Vec2i __add (Vec2i, int32_t)","Vec2i __add (int32_t, Vec2i)","Vec2i __sub (Vec2i, Vec2i)","Vec2f __sub (Vec2i, Vec2f)","Vec2i __sub (Vec2i, int32_t)","Vec2i __sub (int32_t, Vec2i)","Vec2i __mul (Vec2i, Vec2i)","Vec2f __mul (Vec2i, Vec2f)","Vec2i __mul (Vec2i, int32_t)","Vec2i __mul (int32_t, Vec2i)","Vec2i __div (Vec2i, Vec2i)","Vec2f __div (Vec2i, Vec2f)","Vec2i __div (Vec2i, int32_t)","Vec2i __div (int32_t, Vec2i)","Vec2i __mod (Vec2i, Vec2i)","Vec2f __mod (Vec2i, Vec2f)","Vec2i __mod (Vec2i, int32_t)","Vec2i __mod (int32_t, Vec2i)","Vec2i __pow (Vec2i, Vec2i)","Vec2f __pow (Vec2i, Vec2f)","Vec2i __pow (Vec2i, int32_t)","Vec2i __pow (int32_t, Vec2i)","Vec2i __unm (Vec2i)","bool __eq (Vec2i, Vec2i)","bool __eq (Vec2i, Vec2f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec2i GetAbs ()","void Clamp (Vec2i, int32_t, int32_t)","void Clamp (Vec2i, Vec2i, Vec2i)","Vec2i GetClamped (Vec2i, int32_t, int32_t)","Vec2i GetClamped (Vec2i, Vec2i, Vec2i)","int32_t Dot (Vec2i, Vec2i)","float Dot (Vec2i, Vec2f)","Vec2i __band (Vec2i, Vec2i)","Vec2i __band (int32_t, Vec2i)","Vec2i __band (Vec2i, int32_t)","Vec2i __bor (Vec2i, Vec2i)","Vec2i __bor (int32_t, Vec2i)","Vec2i __bor (Vec2i, int32_t)","Vec2i __bxor (Vec2i, Vec2i)","Vec2i __bxor (int32_t, Vec2i)","Vec2i __bxor (Vec2i, int32_t)","Vec2i __bnot (Vec2i)","Vec2i __shl (Vec2i, Vec2i)","Vec2i __shl (int32_t, Vec2i)","Vec2i __shl (Vec2i, int32_t)","Vec2i __shr (Vec2i, Vec2i)","Vec2i __shr (int32_t, Vec2i)","Vec2i __shr (Vec2i, int32_t)","string __tostring (Vec2i)"},Properties={"int32_t x","int32_t y","Vec2i zero"}},CommandLine={Methods={"bool HasOption (string)","float GetOptionFloat (string, float)","int64_t GetOptionInt (string, int64_t)","string GetOption (string, string)","Vec3f GetOptionVec3 (string, Vec3f)","basic_table_core<0,classsol::basic_reference<0> > GetAll (CommandLine, this_state)"}},Box={Methods={"shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, this_state)"}},["ae::renderer::RenderTarget"]={Methods={"bool IsValid ()","bool IsManaged ()","uint32_t GetWidth ()","uint32_t GetHeight ()","uint64_t GetLayerCount ()"}},Image={Methods={"bool IsValid ()","bool IsManaged ()"},Properties={"PixelFormat pixelFormat","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> > mipMaps","bool isCubeMap"}},["IAdapter::Caps"]={Methods={"IAdapter::Caps ()"},Properties={"uint32_t drawingCommandsFlags","bool[44] supportedTextureFormats","bool supportsExtendedLineDirective","Limits limits"}},StencilParams={Methods={"StencilParams ()"},Properties={"Operation failOp","Operation passOp","Operation depthFailOp","Function compareOp","uint32_t compareMask","uint32_t writeMask","uint32_t reference"}},VoxelDB={Methods={"void Clear ()","void SetSerialOpId (int32_t)","void Flush ()","Vec3i FromWorld (Vec3f)","int32_t FromWorld (float)","Vec3f ToWorld (Vec3i)","float ToWorld (float)","bool SetUnitVoxelDim (bool)","void SetMask_deprecated (Vec3i, bool)","bool GetMask (Vec3i)","bool GetMask (double, double, double)","int32_t GetMaskNeighbours (Vec3i, int32_t)","int32_t GetMaskNeighbours (double, double, double, int32_t)","int32_t GetMaskNeighboursVN (Vec3i, int32_t)","int32_t GetMaskNeighboursVN (double, double, double, int32_t)","void ClearVoxel (Vec3i)","void ClearVoxel (double, double, double)","void SetColor (Vec3i, Vec3f)","void SetColor (double, double, double, Vec3f)","basic_object<classsol::basic_reference<0> > GetColor (Vec3i, this_state)","Vec3f GetNormalV (Vec3i)","Vec3f GetFilteredNormalV (Vec3i)","void PaintSphereV (Vec3i, int32_t, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32_t, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32_t, int32_t, Vec3f)","void ClearSphereV (Vec3i, int32_t)","void ClearBoxV (Vec3i, Vec3i)","void ClearBoxV (Vec3i, Vec3i, Quatf)","void ClearCapsuleV (Vec3i, Vec3i, int32_t)","void ClearCapsuleV (Vec3i, Vec3i, int32_t, int32_t)","void MakeSphereV (Vec3i, int32_t, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32_t, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32_t, int32_t, Vec3f)","void PaintSphereBlendV (Vec3i, int32_t, Vec3f, float, float, float)","Vec3f GetNormal (Vec3f)","Vec3f GetFilteredNormal (Vec3f)","basic_object<classsol::basic_reference<0> > TraceRay (Vec3f, Vec3f, float, this_state)","bool CheckSphere (Vec3f, float)","bool CheckBox (Vec3f, Vec3f, Quatf)","bool CheckBox (Vec3f, Vec3f)","bool CheckCapsule (Vec3f, Vec3f, float, float)","bool CheckCapsule (Vec3f, Vec3f, float)","void PaintSphere (Vec3f, float)","void PaintBox (Vec3f, Vec3f, Quatf)","void PaintBox (Vec3f, Vec3f)","void PaintCapsule (Vec3f, Vec3f, float, float)","void PaintCapsule (Vec3f, Vec3f, float)","void ClearSphere (Vec3f, float)","void ClearBox (Vec3f, Vec3f, Quatf)","void ClearBox (Vec3f, Vec3f)","void ClearCapsule (Vec3f, Vec3f, float, float)","void ClearCapsule (Vec3f, Vec3f, float)","void MakeSphere (Vec3f, float)","void MakeBox (Vec3f, Vec3f, Quatf)","void MakeBox (Vec3f, Vec3f)","void MakeCapsule (Vec3f, Vec3f, float, float)","void MakeCapsule (Vec3f, Vec3f, float)","void SetMaterial (Vec3f)","void InstantiateIE (Vec3f, Quatf, float)","void ClearContent ()","void RebuildLods (bool)","bool CopyLayer (string, string)","bool ClearLayer (string)","void RemoveHiddenVoxelsC32 ()","void RemoveHiddenVoxelsN16 ()","basic_table_core<0,classsol::basic_reference<0> > GetInfo (this_state)","void CopyTo (shared_ptr<classae::scene::VoxelDB>)","bool Save (string, string, int32_t)","basic_object<classsol::basic_reference<0> > InspectNormals (this_state, Vec3f, Vec3f, float, uint32_t, uint32_t)","VoxelInspectData Inspect (Vec3f, Vec3f, float, int32_t, int32_t, basic_table_core<0,classsol::basic_reference<0> >, int32_t)","basic_table_core<0,classsol::basic_reference<0> > GetUsedLayers (this_state)","tuple<classTVector3<float>,classTVector3<float> > GetBounds ()"},Properties={"bool autoLightingUpdate","int32_t voxelDim","bool BlendEnabled","BlendMode BlendMode","float BlendOpacity","float BlendRadiusRatio"}},["IShader::Desc"]={Methods={"IShader::Desc ()"},Properties={"Type type"}},ITexture={Methods={"Desc GetDesc ()"}},BlendParams={Methods={"BlendParams ()"},Properties={"bool blendEnable","ColorWriteMask colorWriteMask","BlendFactor srcColorBlendFactor","BlendFactor dstColorBlendFactor","BlendOp colorBlendOp","BlendFactor srcAlphaBlendFactor","BlendFactor dstAlphaBlendFactor","BlendOp alphaBlendOp","float[4] blendConstants"}},["ITexture::Desc"]={Methods={"ITexture::Desc ()"},Properties={"Type type","PixelFormat format","ResourceUsage usage","uint32_t usageFlags","uint32_t width","uint32_t height","uint32_t depth","uint32_t layerCount","uint32_t mipMapCount","uint32_t sampleCount","bool optimalTiling"}},DepthStencilParams={Methods={"DepthStencilParams ()"},Properties={"bool stencilTestEnable","StencilParams frontBufferStencilParams","StencilParams backBufferStencilParams","bool depthTestEnable","bool depthWriteEnable","bool depthBoundsTestEnable","Function depthCompareOp","float minDepthBounds","float maxDepthBounds"}},["IRenderTarget::Desc"]={Methods={"IRenderTarget::Desc ()"},Properties={"uint32_t width","uint32_t height","uint32_t layers","uint64_t attachmentMask"}},Mat4f={Methods={"Mat4f ()","Mat4f (float)","Mat4f (float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4i)","Mat4f (Mat3f)","Mat4f (Mat4f)","Mat4f (Quatf)","Vec4f __index (Mat4f, uint32_t)","void __newindex (Mat4f, uint32_t, Vec4f)","Mat4f __add (Mat4f, Mat4f)","Mat4f __add (Mat4f, float)","Mat4f __add (float, Mat4f)","Mat4f __sub (Mat4f, Mat4f)","Mat4f __sub (Mat4f, float)","Mat4f __sub (float, Mat4f)","Mat4f __mul (Mat4f, Mat4f)","Mat4f __mul (Mat4f, float)","Mat4f __mul (float, Mat4f)","Vec4f __mul (Vec4f, Mat4f)","Mat4f __div (Mat4f, Mat4f)","Mat4f __div (Mat4f, float)","Mat4f __div (float, Mat4f)","Vec4f __div (Vec4f, Mat4f)","Mat4f __unm (Mat4f)","bool __eq (Mat4f, Mat4f)","float GetDeterminant ()","Mat4f Transpose ()","Mat4f GetTransposed ()","Mat4f Invert ()","Mat4f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()","Mat4f Translation (float, float, float)","Mat4f Translation (Vec3f)","Mat4f RotationXYZ (float, float, float)","Mat4f RotationXYZ (Vec3f)","Mat4f RotationYawPitchRoll (float, float, float)","Mat4f RotationYawPitchRoll (Vec3f)","Mat4f Scaling (float, float, float)","Mat4f Scaling (Vec3f)","Mat4f LookAt (Vec3f, Vec3f, Vec3f)","Mat4f Perspective (float, float, float, float)","Mat4f Ortho (float, float, float, float, float, float)"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f translation","Vec3f row1","Vec3f row2","Vec3f row3","Vec3f row4"}},Polygon={Methods={"shared_ptr<classae::scene::LuaShape> new (this_state)"}},RttrStringView={Methods={"const char data ()"}},["IPipeline::RayTracingDesc"]={Methods={"IPipeline::RayTracingDesc ()"},Properties={"uint64_t shaderCount","uint32_t maxRecursionDepth"}},IRenderTarget={Methods={"Desc GetDesc ()"}},VoxelInspectData={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetTexts (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetPositions (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetColors (this_state)"},Properties={"float voxelSize","string header","Vec3f headerPos"}},IBuffer={Methods={"Desc GetDesc ()"}},IAccelerationStructure={Methods={"Desc GetDesc ()"}},["IAccelerationStructure::Desc"]={Methods={"IAccelerationStructure::Desc ()"},Properties={"Type type","uint32_t usageFlags","uint64_t size"}},IAdapter={Methods={"Type GetType ()","Caps GetCaps ()","Features GetFeatures ()","ResourceStats GetResourceStats ()"}},["IAdapter::ResourceStats"]={Methods={"IAdapter::ResourceStats ()"},Properties={"uint32_t[8] textureCount","uint64_t[8] textureSize","uint32_t[7] bufferCount","uint64_t[7] bufferSize","uint32_t[3] asCount","uint64_t[3] asSize","uint32_t[13] shaderCount","uint32_t[4] pipelineCount","uint32_t renderTargetCount"}},UIItem={Methods={"string GetID ()","string GetType ()","string GetLabel ()"}},Vec3i={Methods={"Vec3i ()","Vec3i (int32_t)","Vec3i (float)","Vec3i (int32_t, int32_t, int32_t)","Vec3i (int32_t, int32_t, float)","Vec3i (int32_t, float, int32_t)","Vec3i (int32_t, float, float)","Vec3i (float, int32_t, int32_t)","Vec3i (float, int32_t, float)","Vec3i (float, float, int32_t)","Vec3i (float, float, float)","Vec3i (Vec2i, int32_t)","Vec3i (Vec2i, float)","Vec3i (Vec2f, int32_t)","Vec3i (Vec2f, float)","Vec3i (int32_t, Vec2i)","Vec3i (int32_t, Vec2f)","Vec3i (float, Vec2i)","Vec3i (float, Vec2f)","Vec3i (Vec3i)","Vec3i (Vec3f)","Vec3i (Vec4i)","Vec3i (Vec4f)","int32_t __index (Vec3i, uint32_t)","void __newindex (Vec3i, uint32_t, int32_t)","Vec3i __add (Vec3i, Vec3i)","Vec3f __add (Vec3i, Vec3f)","Vec3i __add (Vec3i, int32_t)","Vec3i __add (int32_t, Vec3i)","Vec3i __sub (Vec3i, Vec3i)","Vec3f __sub (Vec3i, Vec3f)","Vec3i __sub (Vec3i, int32_t)","Vec3i __sub (int32_t, Vec3i)","Vec3i __mul (Vec3i, Vec3i)","Vec3f __mul (Vec3i, Vec3f)","Vec3i __mul (Vec3i, int32_t)","Vec3i __mul (int32_t, Vec3i)","Vec3i __div (Vec3i, Vec3i)","Vec3f __div (Vec3i, Vec3f)","Vec3i __div (Vec3i, int32_t)","Vec3i __div (int32_t, Vec3i)","Vec3i __mod (Vec3i, Vec3i)","Vec3f __mod (Vec3i, Vec3f)","Vec3i __mod (Vec3i, int32_t)","Vec3i __mod (int32_t, Vec3i)","Vec3i __pow (Vec3i, Vec3i)","Vec3f __pow (Vec3i, Vec3f)","Vec3i __pow (Vec3i, int32_t)","Vec3i __pow (int32_t, Vec3i)","Vec3i __unm (Vec3i)","bool __eq (Vec3i, Vec3i)","bool __eq (Vec3i, Vec3f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec3i GetAbs ()","void Clamp (Vec3i, int32_t, int32_t)","void Clamp (Vec3i, Vec3i, Vec3i)","Vec3i GetClamped (Vec3i, int32_t, int32_t)","Vec3i GetClamped (Vec3i, Vec3i, Vec3i)","int32_t Dot (Vec3i, Vec3i)","float Dot (Vec3i, Vec3f)","Vec3i __band (Vec3i, Vec3i)","Vec3i __band (int32_t, Vec3i)","Vec3i __band (Vec3i, int32_t)","Vec3i __bor (Vec3i, Vec3i)","Vec3i __bor (int32_t, Vec3i)","Vec3i __bor (Vec3i, int32_t)","Vec3i __bxor (Vec3i, Vec3i)","Vec3i __bxor (int32_t, Vec3i)","Vec3i __bxor (Vec3i, int32_t)","Vec3i __bnot (Vec3i)","Vec3i __shl (Vec3i, Vec3i)","Vec3i __shl (int32_t, Vec3i)","Vec3i __shl (Vec3i, int32_t)","Vec3i __shr (Vec3i, Vec3i)","Vec3i __shr (int32_t, Vec3i)","Vec3i __shr (Vec3i, int32_t)","string __tostring (Vec3i)"},Properties={"int32_t x","int32_t y","int32_t z","Vec3i zero","Vec3i up","Vec3i right","Vec3i forward","Vec3i down","Vec3i left","Vec3i back"}},StreamComponent={Methods={"StreamComponent ()"},Properties={"VertexComponent usage","VertexComponentFormat format","uint32_t offset","bool normalizeIntegerTypes"}},DrawInfo={Methods={"DrawInfo ()"},Properties={"uint32_t first","uint32_t count","uint32_t firstInstance","uint32_t instanceCount","uint32_t baseVertex"}},Server={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetClients (this_state)","void DisconnectClient (uint64_t, string)","uint32_t GetScriptsVersion ()","string GetScript (string)","void LuaReset ()","void ResendScripts ()","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetLuaFilesList (this_state)","tuple<classsol::basic_table_core<0,classsol::basic_reference<0>>,classsol::basic_table_core<0,classsol::basic_reference<0>> > GetVoxelFilesList (this_state)","void SaveScene ()","void ReloadScene ()","void OnLuaLog ()","bool IsClient ()","bool IsServer ()","bool DevMode ()","string GetSystemConsole ()","string GetSystemOutput ()","uint32_t GetCurrentUIActionID ()","void ScrollToLastestLuaLog ()","CommandLine GetCommandLine ()","basic_table_core<0,classsol::basic_reference<0> > GetVersion (this_state)","System GetSystem ()","AssetManager GetResourceManScene ()","AssetManager GetResourceManUI ()","AssetManager GetResourceManSettings ()","double GetLogTime (string)","basic_table_core<0,classsol::basic_reference<0> > GetLogTimers (string)","basic_table_core<0,classsol::basic_reference<0> > GetStreamingStats (this_state)","void TriggerCrash ()","void TriggerException ()","void TriggerCriticalError ()","void AnalyticsServer (string, basic_table_core<0,classsol::basic_reference<0> >)","void AnalyticsClient (uint64_t, string, basic_table_core<0,classsol::basic_reference<0> >)","void GenTestVoxelScene ()","void GenTestVoxelScene2 ()","void MakeVoxelScene (int32_t, int32_t, int32_t, int32_t)","void RebuildLODsBrightnessMethod ()","void RebuildLODsBrightnessMethod (Vec3i, Vec3i)","bool RebuildLODsGradientMethod ()","bool RebuildLODsGradientMethod (Vec3i, Vec3i)","bool ShowAllNormalsPerVoxel (uint32_t)","bool ShowAllNormalsPerBT (uint32_t)"},Properties={"uint64_t clientID"}},GraphicsOptions={Methods={"GraphicsOptions ()"},Properties={"Options globalOptions","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> > platformOptions"}},Quatf={Methods={"Quatf ()","Quatf (Quatf)","Quatf (float, float, float, float)","Quatf (float, Vec3f)","Quatf (Mat3f)","Quatf (Mat4f)","float __index (Quatf, int32_t)","void __newindex (Quatf, int32_t, float)","Quatf __add (Quatf, Quatf)","Quatf __sub (Quatf, Quatf)","Quatf __mul (Quatf, Quatf)","Vec4f __mul (Quatf, Vec4f)","Vec3f __mul (Quatf, Vec3f)","Quatf __mul (float, Quatf)","Quatf __mul (Quatf, float)","Quatf __div (Quatf, float)","Quatf __pow (Quatf, float)","Quatf __unm (Quatf)","bool __eq (Quatf, Quatf)","float Len ()","float SqrLength ()","bool IsZero ()","float Dot (Quatf)","Quatf Lerp (Quatf, Quatf, float)","Quatf Slerp (Quatf, Quatf, float)","Quatf Sterp (Quatf, Quatf, float)","Quatf Sterp (Quatf, Quatf, float, Vec3f)","void Normalize ()","Quatf GetNormalized ()","void Invert ()","Quatf GetInversed ()","void Rotate (Quatf, float, Vec3f)","Quatf GetRotated (Quatf, float, Vec3f)","Quatf GetConjugate ()","float GetPitch (Quatf)","float GetYaw (Quatf)","float GetRoll (Quatf)","Vec3f GetEuler (Quatf)","float GetAngle (Quatf)","Vec3f GetAxis ()","Quatf Euler (float, float, float)","Quatf Euler (Vec3f)","Quatf Axes (Vec3f, Vec3f)","Quatf AngleAxis (float, Vec3f)","Quatf LookAt (Vec3f)","Quatf LookAt (Vec3f, Vec3f)","string __tostring (Quatf)"},Properties={"float x","float y","float z","float w","Quatf identity"}},["IAdapter::Features"]={Methods={"IAdapter::Features ()"},Properties={"bool hasDeferredContextSupport","bool hasRTXSupport","uint8_t debugLevel"}},SamplerParams={Methods={"SamplerParams ()"},Properties={"TextureWrappingMode wrappingModeS","TextureWrappingMode wrappingModeT","TextureWrappingMode wrappingModeR","TextureFiltering filtering","float maxAnisotropy","bool compareEnable","Function compareOp"}},VoxelRenderer={Methods={"bool __eq (VoxelRenderer, VoxelRenderer)","tuple<classTVector3<float>,classTVector3<float> > GetBounds ()"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool syncToClients","bool enabled","bool prioritizeLod","bool outline"}},RealtimeLightingInfo={Properties={"Vec3f diffuseColor","bool directionalLight","Vec3f direction","float diffuseRayLen","float diffuseDirSpread","int32_t diffuseSamples","float shadowsIntensity","bool shadows","bool ambientOcclusion","Vec3f ambientColor","float ambientRayLen","int32_t ambientSamples","float skyAmbientIntensity","float ambientOcclusionFactor","int32_t taskBoxScale"}},["ae::graphics::Options"]={Methods={"ae::graphics::Options ()"},Properties={"uint8_t debugLevel","bool enableRTX","bool stateCache","bool forceGLStateRefresh","bool preferAsyncBufferTransfers","DepthBufferMode depthBufferMode","VSyncMode vsyncMode","uint32_t refreshRateHint","string preferredDeviceHint"}},Camera={Methods={"Vec3f ScreenToWorldRay (Vec2f)","Vec2f WorldToScreen (Vec3f)","Vec3f WorldToScreen3f (Vec3f)"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","float fovY"}},RasterizerParams={Methods={"RasterizerParams ()"},Properties={"bool rasterizerDiscardEnable","bool depthClampEnable","bool depthBiasEnable","PolygonMode polygonMode","CullMode cullMode","FrontFaceWinding winding","float lineWidth","float depthBiasConstantFactor","float depthBiasClamp","float depthBiasSlopeFactor"}},ColorWriteMask={Methods={"ColorWriteMask ()"},Properties={"bool r","bool g","bool b","bool a"}},LightingUpdate={Properties={"RealtimeLightingInfo realtimeLighting"}},Effect={Methods={"Effect (string, FilePath)","bool IsValid ()","bool IsManaged ()"}},Material={Methods={"Material (string)","bool IsValid ()","bool IsManaged ()","bool HasProperty (string)","Vec3f GetPropertyVec3 (Material, string)","Vec4f GetPropertyVec4 (Material, string)","void SetProperty (Material, string, Vec3f)","void SetProperty (Material, string, Vec4f)"}},Transform={Methods={"bool __eq (Transform, Transform)","Vec3f LocalToWorld (Vec3f)","Vec3f WorldToLocal (Vec3f)","Vec3f LocalToWorldVec (Vec3f)","Vec3f WorldToLocalVec (Vec3f)","void LookAt (Vec3f)","void LookAt (Vec3f, Vec3f)"},Properties={"shared_ptr<classae::scene::Object> object","Vec3f pos","float scale","Quatf rot","Vec3f globalPos","Quatf globalRot","Vec3f eulerRot","Vec3f right","Vec3f up","Vec3f forward","string type"}},Input={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetEvents (this_state)","bool KeyDown (string)","bool Key (string)","bool KeyUp (string)","basic_table_core<0,classsol::basic_reference<0> > KeyCombosDown (this_state)","bool KeyComboDown (string)","bool KeyComboDown (string, string, string)","bool KeyComboDown (string, string)","bool KeyCombo (string)","bool KeyCombo (string, string, string)","bool KeyCombo (string, string)","bool ShiftKey ()","bool CtrlKey ()","bool AltKey ()","bool MouseButtonDown (uint16_t)","bool MouseButton (uint16_t)","bool MouseButtonUp (uint16_t)","int32_t MouseWheel ()","Vec2f MousePos ()","Vec2f MousePosLast ()","Vec2f MouseMove ()","Vec2f MousePosPerc ()","Vec2f MousePosPercLast ()","Vec2f MouseMovePerc ()","bool GetRelativeMouseMode ()","void SetRelativeMouseMode (bool)","float GesturePinch ()","float GestureRotate ()","Vec2f GestureMove ()","int16_t NumFingers ()","bool FingerDown (int64_t)","basic_object<classsol::basic_reference<0> > Fingers (this_state)","bool FingerUp (int64_t)","Vec2f FingerPos (int16_t)","bool VRButton (uint64_t, VRControllerButton)","float VRHandTrigger (uint64_t)","float VRIndexTrigger (uint64_t)","Vec2f VRThumbStick (uint64_t)","basic_object<classsol::basic_reference<0> > Gamepads (this_state)","basic_object<classsol::basic_reference<0> > GetActiveGamepad (this_state)"}},["rttr::type"]={Methods={"RttrStringView GetName ()"}},Filter={Methods={"Filter (this_state)"},Properties={"bool useCommon","bool useAtlas","bool useTmp","bool useTmpAtlas","basic_table_core<0,classsol::basic_reference<0> > ignoreList","basic_table_core<0,classsol::basic_reference<0> > forceList"}},IPipeline={Methods={"Desc GetDesc ()"}},Vec3f={Methods={"Vec3f ()","Vec3f (float)","Vec3f (int32_t)","Vec3f (float, float, float)","Vec3f (float, float, int32_t)","Vec3f (float, int32_t, float)","Vec3f (float, int32_t, int32_t)","Vec3f (int32_t, float, float)","Vec3f (int32_t, float, int32_t)","Vec3f (int32_t, int32_t, float)","Vec3f (int32_t, int32_t, int32_t)","Vec3f (Vec2f, float)","Vec3f (Vec2f, int32_t)","Vec3f (Vec2i, float)","Vec3f (Vec2i, int32_t)","Vec3f (float, Vec2f)","Vec3f (float, Vec2i)","Vec3f (int32_t, Vec2f)","Vec3f (int32_t, Vec2i)","Vec3f (Vec3f)","Vec3f (Vec3i)","Vec3f (Vec4f)","Vec3f (Vec4i)","float __index (Vec3f, uint32_t)","void __newindex (Vec3f, uint32_t, float)","Vec3f __add (Vec3f, Vec3f)","Vec3f __add (Vec3f, Vec3i)","Vec3f __add (Vec3f, float)","Vec3f __add (float, Vec3f)","Vec3f __sub (Vec3f, Vec3f)","Vec3f __sub (Vec3f, Vec3i)","Vec3f __sub (Vec3f, float)","Vec3f __sub (float, Vec3f)","Vec3f __mul (Vec3f, Vec3f)","Vec3f __mul (Vec3f, Vec3i)","Vec3f __mul (Vec3f, float)","Vec3f __mul (float, Vec3f)","Vec3f __div (Vec3f, Vec3f)","Vec3f __div (Vec3f, Vec3i)","Vec3f __div (Vec3f, float)","Vec3f __div (float, Vec3f)","Vec3f __mod (Vec3f, Vec3f)","Vec3f __mod (Vec3f, Vec3i)","Vec3f __mod (Vec3f, float)","Vec3f __mod (float, Vec3f)","Vec3f __pow (Vec3f, Vec3f)","Vec3f __pow (Vec3f, Vec3i)","Vec3f __pow (Vec3f, float)","Vec3f __pow (float, Vec3f)","Vec3f __unm (Vec3f)","bool __eq (Vec3f, Vec3f)","bool __eq (Vec3f, Vec3i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec3f GetAbs ()","void Clamp (Vec3f, float, float)","void Clamp (Vec3f, Vec3f, Vec3f)","Vec3f GetClamped (Vec3f, float, float)","Vec3f GetClamped (Vec3f, Vec3f, Vec3f)","float Dot (Vec3f, Vec3f)","float Dot (Vec3f, Vec3i)","bool IsAnyNaN ()","Vec3f Lerp (Vec3f, Vec3f, float)","Vec3f Normalize ()","Vec3f GetNormalized ()","void Ceil (Vec3f)","Vec3f GetCeiled (Vec3f)","void Floor (Vec3f)","Vec3f GetFloored (Vec3f)","void Round (Vec3f)","Vec3f GetRounded (Vec3f)","float DistanceTo (Vec3f)","Vec3f Cross (Vec3f, Vec3f)","Vec3f Cross (Vec3f, Vec3i)","string __tostring (Vec3f)"},Properties={"float x","float y","float z","Vec3f zero","Vec3f up","Vec3f right","Vec3f forward","Vec3f down","Vec3f left","Vec3f back"}},StaticVoxelData={Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string path","bool isLoaded","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform"}},Cylinder={Methods={"shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, this_state)","shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, float, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, this_state)","shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, float, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, this_state)"}},Capsule={Methods={"shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, this_state)","shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, float, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, Vec3f, this_state)"}},RendererContext={Properties={"uint64_t currentFrame","double deltaTime","double totalTime","Vec4f viewPort","string type","string capsDrawingCommandsFlags","string capsSupportedTextureFormats","bool capsSupportsExtendedLineDirective","uint32_t capsLimitConstantBufferOffsetAlignment","uint32_t capsLimitMaxConstantBlockSize","uint32_t capsLimitMaxVertexConstantBlocks","uint32_t capsLimitMaxPixelConstantBlocks","uint32_t capsLimitMaxGeometryConstantBlocks","uint32_t capsLimitMaxComputeConstantBlocks","bool capsFeatureHasDeferredContextSupport","bool capsFeatureHasRTXSupport","uint8_t capsFeatureDebugLevel","string statsTextureCount","string statsTextureSize","string statsBufferCount","string statsBufferSize","string statsAsCount","string statsAsSize","string statsShaderCount","string statsPipelineCount","uint32_t statsRenderTargetCount","uint64_t renderContextCount"}},MeshDataBuilder={Methods={"MeshDataBuilder ()","void Clear ()","uint32_t AddVertex (Vec3f)","uint32_t AddVertex (Vec3f, Vec4f)","uint32_t AddVertex (Vec3f, Vec2f, Vec4f)","uint32_t AddVertex (Vec3f, Vec2f)","void AddIndex (uint32_t)","void AddIndex (uint32_t, uint32_t, uint32_t)","void AddIndex (uint32_t, uint32_t)","void AddShape (shared_ptr<classae::scene::LuaShape>, Vec4f)"},Properties={"bool static","bool dynamic","bool streamed","PrimitiveTopology topology"}},Sphere={Methods={"shared_ptr<classae::scene::LuaShape> new (this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, float, this_state)","shared_ptr<classae::scene::LuaShape> new (Vec3f, this_state)"}},Scene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","string AddNewScriptFile (string)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","bool IsNameValid (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}},ConfigMap={Methods={"void SetInt (string, int64_t)","void SetFloat (string, double)","void SetBool (string, bool)","void SetString (string, string)","void SetVec2 (string, Vec2f)","void SetVec3 (string, Vec3f)","void SetVec4 (string, Vec4f)","void Del (string)","bool Exists (string)","int64_t GetInt (string)","int64_t GetInt (string, int64_t)","double GetFloat (string)","double GetFloat (string, double)","bool GetBool (string)","bool GetBool (string, bool)","string GetString (string)","string GetString (string, string)","Vec2f GetVec2 (string)","Vec2f GetVec2 (string, Vec2f)","Vec3f GetVec3 (string)","Vec3f GetVec3 (string, Vec3f)","Vec4f GetVec4 (string)","Vec4f GetVec4 (string, Vec4f)","basic_table_core<0,classsol::basic_reference<0> > GetAllValuesStringified (ConfigMap, this_state)"}},Vec2f={Methods={"Vec2f ()","Vec2f (float)","Vec2f (int32_t)","Vec2f (float, float)","Vec2f (float, int32_t)","Vec2f (int32_t, float)","Vec2f (int32_t, int32_t)","Vec2f (Vec2f)","Vec2f (Vec2i)","Vec2f (Vec3f)","Vec2f (Vec3i)","Vec2f (Vec4f)","Vec2f (Vec4i)","float __index (Vec2f, uint32_t)","void __newindex (Vec2f, uint32_t, float)","Vec2f __add (Vec2f, Vec2f)","Vec2f __add (Vec2f, Vec2i)","Vec2f __add (Vec2f, float)","Vec2f __add (float, Vec2f)","Vec2f __sub (Vec2f, Vec2f)","Vec2f __sub (Vec2f, Vec2i)","Vec2f __sub (Vec2f, float)","Vec2f __sub (float, Vec2f)","Vec2f __mul (Vec2f, Vec2f)","Vec2f __mul (Vec2f, Vec2i)","Vec2f __mul (Vec2f, float)","Vec2f __mul (float, Vec2f)","Vec2f __div (Vec2f, Vec2f)","Vec2f __div (Vec2f, Vec2i)","Vec2f __div (Vec2f, float)","Vec2f __div (float, Vec2f)","Vec2f __mod (Vec2f, Vec2f)","Vec2f __mod (Vec2f, Vec2i)","Vec2f __mod (Vec2f, float)","Vec2f __mod (float, Vec2f)","Vec2f __pow (Vec2f, Vec2f)","Vec2f __pow (Vec2f, Vec2i)","Vec2f __pow (Vec2f, float)","Vec2f __pow (float, Vec2f)","Vec2f __unm (Vec2f)","bool __eq (Vec2f, Vec2f)","bool __eq (Vec2f, Vec2i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec2f GetAbs ()","void Clamp (Vec2f, float, float)","void Clamp (Vec2f, Vec2f, Vec2f)","Vec2f GetClamped (Vec2f, float, float)","Vec2f GetClamped (Vec2f, Vec2f, Vec2f)","float Dot (Vec2f, Vec2f)","float Dot (Vec2f, Vec2i)","bool IsAnyNaN ()","Vec2f Lerp (Vec2f, Vec2f, float)","Vec2f Normalize ()","Vec2f GetNormalized ()","void Ceil (Vec2f)","Vec2f GetCeiled (Vec2f)","void Floor (Vec2f)","Vec2f GetFloored (Vec2f)","void Round (Vec2f)","Vec2f GetRounded (Vec2f)","float DistanceTo (Vec2f)","float GetAngle (Vec2f)","void Rotate (Vec2f, float)","Vec2f GetRotated (Vec2f, float)","string __tostring (Vec2f)"},Properties={"float x","float y","Vec2f zero"}},VoxelEdit={Methods={"VoxelEdit (this_state)","void Paint ()","void Add ()","void Erase ()","void FreeTmpLayers (int32_t, this_state)","void FillTmpLayers (int32_t, Vec3f, Vec3f, float, int32_t, this_state)"},Properties={"bool blendEnable","BlendMode blendMode","float blendOpacity","float blendRadiusRatio","Vec3f color","shared_ptr<classae::scene::Filter> filter","shared_ptr<classae::scene::LuaShape> shape","bool clampToMinVoxelSize"}},Component={Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed"}},MipMapImage={Properties={"int32_t width","int32_t height","int32_t depth","uint32_t size"}},ServerScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CreateObject (string, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>, bool, bool)","shared_ptr<classae::scene::Object> CreateObject (string, shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CreateObject (string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","shared_ptr<classae::scene::Object> GetObjectByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, bool)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","bool MoveObject (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectAfter (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","bool MoveObjectBefore (shared_ptr<classae::scene::Object>, shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","shared_ptr<classae::scene::Camera> GetActiveCamera ()","string AddNewScriptFile (string)","shared_ptr<classae::scene::VoxelDB> GetVoxelDB (string)","basic_table_core<0,classsol::basic_reference<0> > TraceRay (basic_table_core<0,classsol::basic_reference<0> >, this_state)","bool IsNameValid (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","bool GetProfileScriptsUpdate ()","void SetProfileScriptsUpdate (bool)","basic_table_core<0,classsol::basic_reference<0> > GetSimpleStats (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVDRStats (this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting","shared_ptr<classae::lighting::LightingUpdate> objectLighting"}},["ae::core::Guid"]={Methods={"ae::core::Guid ()","ae::core::Guid (uint64_t, uint64_t)","ae::core::Guid (uint32_t, uint16_t, uint16_t, const uint8_t)","ae::core::Guid (uint32_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t)","ae::core::Guid ()","ae::core::Guid (const char)","ae::core::Guid (string)","string ToString (bool)","bool __eq (Guid)","bool __lt (Guid)","bool __le (Guid)"},Properties={"bool isNull"}},IShader={Methods={"Desc GetDesc ()"}},LuaSystem={Methods={"string GetEnumValues (string)","string GetAllEnumTypes ()","string GetAllRttrTypes ()","type GetRttrType (string)"}},Texture={Methods={"bool IsValid ()","bool IsManaged ()"}},ResResource={},Resource={Methods={"bool IsValid ()","bool IsManaged ()"}},MeshData={Methods={"bool __eq (MeshData, MeshData)"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string file","MeshDataBuilder data","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform"}},Mat3f={Methods={"Mat3f ()","Mat3f (float)","Mat3f (float, float, float, float, float, float, float, float, float)","Mat3f (Vec3f, Vec3f, Vec3f)","Mat3f (Vec3f, Vec3f, Vec3i)","Mat3f (Vec3f, Vec3i, Vec3f)","Mat3f (Vec3f, Vec3i, Vec3i)","Mat3f (Vec3i, Vec3f, Vec3f)","Mat3f (Vec3i, Vec3f, Vec3i)","Mat3f (Vec3i, Vec3i, Vec3f)","Mat3f (Vec3i, Vec3i, Vec3i)","Mat3f (Mat3f)","Mat3f (Mat4f)","Mat3f (Quatf)","Vec3f __index (Mat3f, uint32_t)","void __newindex (Mat3f, uint32_t, Vec3f)","Mat3f __add (Mat3f, Mat3f)","Mat3f __add (Mat3f, float)","Mat3f __add (float, Mat3f)","Mat3f __sub (Mat3f, Mat3f)","Mat3f __sub (Mat3f, float)","Mat3f __sub (float, Mat3f)","Mat3f __mul (Mat3f, Mat3f)","Mat3f __mul (Mat3f, float)","Mat3f __mul (float, Mat3f)","Vec3f __mul (Vec3f, Mat3f)","Mat3f __div (Mat3f, Mat3f)","Mat3f __div (Mat3f, float)","Mat3f __div (float, Mat3f)","Vec3f __div (Vec3f, Mat3f)","Mat3f __unm (Mat3f)","bool __eq (Mat3f, Mat3f)","float GetDeterminant ()","Mat3f Transpose ()","Mat3f GetTransposed ()","Mat3f Invert ()","Mat3f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f row1","Vec3f row2","Vec3f row3"}},ScriptInstance={Methods={"void Start ()","void Update (float deltaTime)","void Attach ()","void Detach ()","void RPC (string, variadic_args)","void RPC (int64_t, string, variadic_args)"},Properties={"shared_ptr<classae::scene::Script> component","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool onServer","bool onClient"}},Script={Methods={"uint64_t RPC (variadic_args)","string GetNetworkFlow ()","string GetScriptUpdateTime ()"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","string type","basic_table_core<0,classsol::basic_reference<0> > instance","string name","string file","bool syncToClients"}},Vec4i={Methods={"Vec4i ()","Vec4i (int32_t)","Vec4i (float)","Vec4i (int32_t, int32_t, int32_t, int32_t)","Vec4i (int32_t, int32_t, int32_t, float)","Vec4i (int32_t, int32_t, float, int32_t)","Vec4i (int32_t, int32_t, float, float)","Vec4i (int32_t, float, int32_t, int32_t)","Vec4i (int32_t, float, int32_t, float)","Vec4i (int32_t, float, float, int32_t)","Vec4i (int32_t, float, float, float)","Vec4i (float, int32_t, int32_t, int32_t)","Vec4i (float, int32_t, int32_t, float)","Vec4i (float, int32_t, float, int32_t)","Vec4i (float, int32_t, float, float)","Vec4i (float, float, int32_t, int32_t)","Vec4i (float, float, int32_t, float)","Vec4i (float, float, float, int32_t)","Vec4i (float, float, float, float)","Vec4i (Vec2i, int32_t, int32_t)","Vec4i (Vec2i, int32_t, float)","Vec4i (Vec2i, float, int32_t)","Vec4i (Vec2i, float, float)","Vec4i (Vec2f, int32_t, int32_t)","Vec4i (Vec2f, int32_t, float)","Vec4i (Vec2f, float, int32_t)","Vec4i (Vec2f, float, float)","Vec4i (int32_t, Vec2i, int32_t)","Vec4i (int32_t, Vec2i, float)","Vec4i (int32_t, Vec2f, int32_t)","Vec4i (int32_t, Vec2f, float)","Vec4i (float, Vec2i, int32_t)","Vec4i (float, Vec2i, float)","Vec4i (float, Vec2f, int32_t)","Vec4i (float, Vec2f, float)","Vec4i (int32_t, int32_t, Vec2i)","Vec4i (int32_t, int32_t, Vec2f)","Vec4i (int32_t, float, Vec2i)","Vec4i (int32_t, float, Vec2f)","Vec4i (float, int32_t, Vec2i)","Vec4i (float, int32_t, Vec2f)","Vec4i (float, float, Vec2i)","Vec4i (float, float, Vec2f)","Vec4i (Vec2i, Vec2i)","Vec4i (Vec2i, Vec2f)","Vec4i (Vec2f, Vec2i)","Vec4i (Vec2f, Vec2f)","Vec4i (Vec3i, int32_t)","Vec4i (Vec3i, float)","Vec4i (Vec3f, int32_t)","Vec4i (Vec3f, float)","Vec4i (int32_t, Vec3i)","Vec4i (int32_t, Vec3f)","Vec4i (float, Vec3i)","Vec4i (float, Vec3f)","Vec4i (Vec4i)","Vec4i (Vec4f)","int32_t __index (Vec4i, uint32_t)","void __newindex (Vec4i, uint32_t, int32_t)","Vec4i __add (Vec4i, Vec4i)","Vec4f __add (Vec4i, Vec4f)","Vec4i __add (Vec4i, int32_t)","Vec4i __add (int32_t, Vec4i)","Vec4i __sub (Vec4i, Vec4i)","Vec4f __sub (Vec4i, Vec4f)","Vec4i __sub (Vec4i, int32_t)","Vec4i __sub (int32_t, Vec4i)","Vec4i __mul (Vec4i, Vec4i)","Vec4f __mul (Vec4i, Vec4f)","Vec4i __mul (Vec4i, int32_t)","Vec4i __mul (int32_t, Vec4i)","Vec4i __div (Vec4i, Vec4i)","Vec4f __div (Vec4i, Vec4f)","Vec4i __div (Vec4i, int32_t)","Vec4i __div (int32_t, Vec4i)","Vec4i __mod (Vec4i, Vec4i)","Vec4f __mod (Vec4i, Vec4f)","Vec4i __mod (Vec4i, int32_t)","Vec4i __mod (int32_t, Vec4i)","Vec4i __pow (Vec4i, Vec4i)","Vec4f __pow (Vec4i, Vec4f)","Vec4i __pow (Vec4i, int32_t)","Vec4i __pow (int32_t, Vec4i)","Vec4i __unm (Vec4i)","bool __eq (Vec4i, Vec4i)","bool __eq (Vec4i, Vec4f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec4i GetAbs ()","void Clamp (Vec4i, int32_t, int32_t)","void Clamp (Vec4i, Vec4i, Vec4i)","Vec4i GetClamped (Vec4i, int32_t, int32_t)","Vec4i GetClamped (Vec4i, Vec4i, Vec4i)","int32_t Dot (Vec4i, Vec4i)","float Dot (Vec4i, Vec4f)","Vec4i __band (Vec4i, Vec4i)","Vec4i __band (int32_t, Vec4i)","Vec4i __band (Vec4i, int32_t)","Vec4i __bor (Vec4i, Vec4i)","Vec4i __bor (int32_t, Vec4i)","Vec4i __bor (Vec4i, int32_t)","Vec4i __bxor (Vec4i, Vec4i)","Vec4i __bxor (int32_t, Vec4i)","Vec4i __bxor (Vec4i, int32_t)","Vec4i __bnot (Vec4i)","Vec4i __shl (Vec4i, Vec4i)","Vec4i __shl (int32_t, Vec4i)","Vec4i __shl (Vec4i, int32_t)","Vec4i __shr (Vec4i, Vec4i)","Vec4i __shr (int32_t, Vec4i)","Vec4i __shr (Vec4i, int32_t)"},Properties={"int32_t x","int32_t y","int32_t z","int32_t w","Vec4i zero","Vec4i up","Vec4i right","Vec4i forward","Vec4i down","Vec4i left","Vec4i back"}},UILayout={},Collision={Methods={"Collision (this_state)","Collision (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (this_state)","basic_table_core<0,classsol::basic_reference<0> > Raycast (Vec3f, Vec3f, this_state)","bool Check ()"},Properties={"shared_ptr<classae::scene::Filter> filter","int32_t maxHitCount","shared_ptr<classae::scene::LuaShape> shape","Vec3f rayPos","Vec3f rayDir"}},UILayouts={},AssetManager={Methods={"unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> > GetAssets (AssetManager)","ResResource Get (string)","bool AddAsset (type, string)","bool AddAsset (string, string)","type GetResourceType (ResResource)","bool IsAssetType (type)","basic_table_core<0,classsol::basic_reference<0> > GetAssetTypes (AssetManager, this_state)","string GetAssetsPath (AssetManager)","string GetFilePath (AssetManager)"}},Shape={Properties={"Vec3f pos","Quatf rot","Vec3f size","float radius","float diameter","Vec3f pos2","float radius2","float diameter2","basic_table_core<0,classsol::basic_reference<0> > points","bool useShellPositions"}},VoxelData={Methods={"bool __eq (VoxelData, VoxelData)"},Properties={"shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform","bool isDestroyed","string path","shared_ptr<classae::scene::VoxelDataResource> data","bool copyOnWrite","bool save","string type","shared_ptr<classae::scene::Object> object","shared_ptr<classae::scene::Transform> transform"}}}};return _;end