do local _={Pointers={"AssetManager","CommandLine","ComputeDesc","GraphicsDesc","Image","RayTracingDesc","UIItem","const IRenderTarget","const IShader","const char","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >"},Classes={VoxelDB={Methods={"void Clear ()","void UseTemporaryLayers ()","void SetSerialOpId (int32_t)","void Flush ()","Vec3i FromWorld (Vec3f)","int32_t FromWorld (float)","Vec3f ToWorld (Vec3i)","float ToWorld (float)","bool SetUnitVoxelDim (bool)","void SetMask_deprecated (Vec3i, bool)","bool GetMask (Vec3i)","bool GetMask (double, double, double)","int32_t GetMaskNeighbours (Vec3i, int32_t)","int32_t GetMaskNeighbours (double, double, double, int32_t)","int32_t GetMaskNeighboursVN (Vec3i, int32_t)","int32_t GetMaskNeighboursVN (double, double, double, int32_t)","void ClearVoxel (Vec3i)","void ClearVoxel (double, double, double)","void SetColor (Vec3i, Vec3f)","void SetColor (double, double, double, Vec3f)","basic_object<classsol::basic_reference<0> > GetColor (Vec3i, this_state)","Vec3f GetNormalV (Vec3i)","Vec3f GetFilteredNormalV (Vec3i)","basic_object<classsol::basic_reference<0> > TraceRayV (Vec3i, Vec3f, float, this_state)","void PaintSphereV (Vec3i, int32_t, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Vec3f)","void PaintBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32_t, Vec3f)","void PaintCapsuleV (Vec3i, Vec3i, int32_t, int32_t, Vec3f)","void ClearSphereV (Vec3i, int32_t)","void ClearBoxV (Vec3i, Vec3i)","void ClearBoxV (Vec3i, Vec3i, Quatf)","void ClearCapsuleV (Vec3i, Vec3i, int32_t)","void ClearCapsuleV (Vec3i, Vec3i, int32_t, int32_t)","void MakeSphereV (Vec3i, int32_t, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Vec3f)","void MakeBoxV (Vec3i, Vec3i, Quatf, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32_t, Vec3f)","void MakeCapsuleV (Vec3i, Vec3i, int32_t, int32_t, Vec3f)","void FillTmpLayersV (Vec3i, Vec3i, int32_t, int32_t)","basic_object<classsol::basic_reference<0> > TraceRayTmpV (Vec3i, Vec3f, float, this_state)","void PaintSphereBlendV (Vec3i, int32_t, Vec3f, float, float, float)","Vec3f GetNormal (Vec3f)","Vec3f GetFilteredNormal (Vec3f)","basic_object<classsol::basic_reference<0> > TraceRay (Vec3f, Vec3f, float, this_state)","bool CheckSphere (Vec3f, float)","bool CheckBox (Vec3f, Vec3f, Quatf)","bool CheckBox (Vec3f, Vec3f)","bool CheckCapsule (Vec3f, Vec3f, float, float)","bool CheckCapsule (Vec3f, Vec3f, float)","void PaintSphere (Vec3f, float)","void PaintBox (Vec3f, Vec3f, Quatf)","void PaintBox (Vec3f, Vec3f)","void PaintCapsule (Vec3f, Vec3f, float, float)","void PaintCapsule (Vec3f, Vec3f, float)","void ClearSphere (Vec3f, float)","void ClearBox (Vec3f, Vec3f, Quatf)","void ClearBox (Vec3f, Vec3f)","void ClearCapsule (Vec3f, Vec3f, float, float)","void ClearCapsule (Vec3f, Vec3f, float)","void MakeSphere (Vec3f, float)","void MakeBox (Vec3f, Vec3f, Quatf)","void MakeBox (Vec3f, Vec3f)","void MakeCapsule (Vec3f, Vec3f, float, float)","void MakeCapsule (Vec3f, Vec3f, float)","void SetMaterial (Vec3f)","void FillTmpLayers (Vec3f, Vec3f, float, int32_t)","basic_object<classsol::basic_reference<0> > TraceRayTmp (Vec3f, Vec3f, float, this_state)","void InstantiateIE (Vec3f, Quatf, float)","void FreeTmpLayers (int32_t)","void ClearContent ()","void RebuildLods (bool)","bool CopyLayer (string, string)","bool ClearLayer (string)","void RemoveHiddenVoxelsC32 ()","void RemoveHiddenVoxelsN16 ()","basic_table_core<0,classsol::basic_reference<0> > GetInfo (this_state)","void CopyTo (shared_ptr<classae::scene::LuaVoxelDB>)","bool Save (string, string, int32_t)","VoxelInspectData Inspect (Vec3i, int32_t, int32_t, Vector_int32_t, int32_t)","VoxelInspectData Inspect2 (Vec3f, Vec3f, float, int32_t, int32_t, Vector_int32_t, int32_t)","string GetLayers ()","Vec3f GetCenter ()"},Properties={"bool autoLightingUpdate","int32_t voxelDim","bool BlendEnabled","BlendMode BlendMode","float BlendOpacity","float BlendSharpness","float BlendRadiusRatio"}},Object3D={Methods={"Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (Vec3f)","Vec3f GetForward (Object3D)","Vec3f GetRight (Object3D)","Vec3f GetUp (Object3D)","Mat4f GetLtw (Object3D)","Vec3f GetPosition (Object3D)","void SetPosition (Vec3f)"},Properties={"Transformation transformation"}},Transformation={Methods={"Transformation ()","Transformation (Rotation, Vec3f)"},Properties={"Vec3f position","Rotation rotation"}},LuaSystem={Methods={"string GetEnumValues (string)","string GetAllEnumTypes ()","string GetAllRttrTypes ()","type GetRttrType (string)"}},Mat3f={Methods={"Mat3f ()","Mat3f (float)","Mat3f (float, float, float, float, float, float, float, float, float)","Mat3f (Vec3f, Vec3f, Vec3f)","Mat3f (Vec3f, Vec3f, Vec3i)","Mat3f (Vec3f, Vec3i, Vec3f)","Mat3f (Vec3f, Vec3i, Vec3i)","Mat3f (Vec3i, Vec3f, Vec3f)","Mat3f (Vec3i, Vec3f, Vec3i)","Mat3f (Vec3i, Vec3i, Vec3f)","Mat3f (Vec3i, Vec3i, Vec3i)","Mat3f (Mat3f)","Mat3f (Mat4f)","Vec3f __index (Mat3f, uint32_t)","void __newindex (Mat3f, uint32_t, Vec3f)","Mat3f __add (Mat3f, Mat3f)","Mat3f __add (Mat3f, float)","Mat3f __add (float, Mat3f)","Mat3f __sub (Mat3f, Mat3f)","Mat3f __sub (Mat3f, float)","Mat3f __sub (float, Mat3f)","Mat3f __mul (Mat3f, Mat3f)","Mat3f __mul (Mat3f, float)","Mat3f __mul (float, Mat3f)","Vec3f __mul (Vec3f, Mat3f)","Mat3f __div (Mat3f, Mat3f)","Mat3f __div (Mat3f, float)","Mat3f __div (float, Mat3f)","Vec3f __div (Vec3f, Mat3f)","Mat3f __unm (Mat3f)","bool __eq (Mat3f, Mat3f)","float GetDeterminant ()","Mat3f Transpose ()","Mat3f GetTransposed ()","Mat3f Invert ()","Mat3f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f row1","Vec3f row2","Vec3f row3"}},Quatf={Methods={"Quatf ()","Quatf (float, float, float, float)","Quatf (Vec3f)","Quatf (Quatf)","Quatf (float, Vec3f)","Quatf (Vec3f, Vec3f)","float __index (Quatf, int32_t)","void __newindex (Quatf, int32_t, float)","Quatf __add (Quatf, Quatf)","Quatf __sub (Quatf, Quatf)","Quatf __mul (Quatf, Quatf)","Quatf __mul (float, Quatf)","Quatf __mul (Quatf, float)","Vec4f __mul (Quatf, Vec4f)","Vec3f __mul (Quatf, Vec3f)","Quatf __div (Quatf, float)","Quatf __unm (Quatf)","bool __eq (Quatf, Quatf)","Quatf Euler (Vec3f)","Quatf AngleAxis (float, Vec3f)","float Dot (Quatf)","Quatf Lerp (Quatf, Quatf, float)","Quatf Mix (Quatf, Quatf, float)","void Normalize ()","Quatf Slerp (Quatf, Quatf, float)","void Rotate (float, Vec3f)","Quatf GetRotated (float, Vec3f)","Quatf LookAt (Vec3f)","Quatf LookAt (Vec3f, Vec3f)","void Invert ()","Quatf GetInversed ()","float DotProd (Quatf)"},Properties={"float x","float y","float z","float w","Quatf identity","Vec3f euler","Mat3f mat3","Mat4f mat4","float angle","Vec3f axis","Quatf conjugate","Quatf inverse","float length","Quatf normalized","float pitch","float yaw","float roll"}},["IAccelerationStructure::Desc"]={Methods={"IAccelerationStructure::Desc ()"},Properties={"Type type","uint32_t usageFlags","uint64_t size"}},Vec2f={Methods={"Vec2f ()","Vec2f (float)","Vec2f (int32_t)","Vec2f (float, float)","Vec2f (float, int32_t)","Vec2f (int32_t, float)","Vec2f (int32_t, int32_t)","Vec2f (Vec2f)","Vec2f (Vec2i)","Vec2f (Vec3f)","Vec2f (Vec3i)","Vec2f (Vec4f)","Vec2f (Vec4i)","float __index (Vec2f, uint32_t)","void __newindex (Vec2f, uint32_t, float)","Vec2f __add (Vec2f, Vec2f)","Vec2f __add (Vec2f, Vec2i)","Vec2f __add (Vec2f, float)","Vec2f __add (float, Vec2f)","Vec2f __sub (Vec2f, Vec2f)","Vec2f __sub (Vec2f, Vec2i)","Vec2f __sub (Vec2f, float)","Vec2f __sub (float, Vec2f)","Vec2f __mul (Vec2f, Vec2f)","Vec2f __mul (Vec2f, Vec2i)","Vec2f __mul (Vec2f, float)","Vec2f __mul (float, Vec2f)","Vec2f __div (Vec2f, Vec2f)","Vec2f __div (Vec2f, Vec2i)","Vec2f __div (Vec2f, float)","Vec2f __div (float, Vec2f)","Vec2f __mod (Vec2f, Vec2f)","Vec2f __mod (Vec2f, Vec2i)","Vec2f __mod (Vec2f, float)","Vec2f __mod (float, Vec2f)","Vec2f __pow (Vec2f, Vec2f)","Vec2f __pow (Vec2f, Vec2i)","Vec2f __pow (Vec2f, float)","Vec2f __pow (float, Vec2f)","Vec2f __unm (Vec2f)","bool __eq (Vec2f, Vec2f)","bool __eq (Vec2f, Vec2i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec2f GetAbs ()","void Clamp (Vec2f, float, float)","void Clamp (Vec2f, Vec2f, Vec2f)","Vec2f GetClamped (Vec2f, float, float)","Vec2f GetClamped (Vec2f, Vec2f, Vec2f)","float Dot (Vec2f, Vec2f)","float Dot (Vec2f, Vec2i)","bool IsAnyNaN ()","Vec2f Lerp (Vec2f, Vec2f, float)","Vec2f Normalize ()","Vec2f NormalizeSafe ()","Vec2f GetNormalized ()","Vec2f GetNormalizedSafe ()","void Ceil (Vec2f)","Vec2f GetCeiled (Vec2f)","void Floor (Vec2f)","Vec2f GetFloored (Vec2f)","void Round ()","Vec2f GetRounded (Vec2f)","float DistanceTo (Vec2f)","Angle GetAngle ()","float GetAngleRad ()","void Rotate (float)","void Rotate (Angle)","Vec2f GetRotated (float)","Vec2f GetRotated (Angle)"},Properties={"float x","float y","Vec2f zero"}},BlendParams={Methods={"BlendParams ()"},Properties={"bool blendEnable","ColorWriteMask colorWriteMask","BlendFactor srcColorBlendFactor","BlendFactor dstColorBlendFactor","BlendOp colorBlendOp","BlendFactor srcAlphaBlendFactor","BlendFactor dstAlphaBlendFactor","BlendOp alphaBlendOp","float[4] blendConstants"}},Resource={Methods={"bool IsValid ()","bool IsManaged ()"}},["IAdapter::Features"]={Methods={"IAdapter::Features ()"},Properties={"bool hasDeferredContextSupport","bool hasRTXSupport","uint8_t debugLevel"}},RendererContext={Properties={"uint64_t currentFrame","double deltaTime","double totalTime","Vec4f viewPort","string type","string capsDrawingCommandsFlags","string capsSupportedTextureFormats","bool capsSupportsExtendedLineDirective","uint32_t capsLimitConstantBufferOffsetAlignment","uint32_t capsLimitMaxConstantBlockSize","uint32_t capsLimitMaxVertexConstantBlocks","uint32_t capsLimitMaxPixelConstantBlocks","uint32_t capsLimitMaxGeometryConstantBlocks","uint32_t capsLimitMaxComputeConstantBlocks","bool capsFeatureHasDeferredContextSupport","bool capsFeatureHasRTXSupport","uint8_t capsFeatureDebugLevel","string statsTextureCount","string statsTextureSize","string statsBufferCount","string statsBufferSize","string statsAsCount","string statsAsSize","string statsShaderCount","string statsPipelineCount","uint32_t statsRenderTargetCount","uint64_t renderContextCount","bool renderDebugObjects"}},["IPipeline::ComputeDesc"]={Methods={"IPipeline::ComputeDesc ()"},Properties={"const IShader pShader"}},["IAdapter::Limits"]={Methods={"IAdapter::Limits ()"},Properties={"uint32_t constantBufferOffsetAlignment","uint32_t maxConstantBlockSize","uint32_t maxVertexConstantBlocks","uint32_t maxPixelConstantBlocks","uint32_t maxGeometryConstantBlocks","uint32_t maxComputeConstantBlocks"}},ClientScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (uint32_t)","shared_ptr<classae::scene::Component> GetComponentById (uint32_t)","bool IsNameValid (string)","bool Save ()","bool SaveAs (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},RttrStringView={Methods={"const char data ()"}},Montage={},EntityPathWaypoint={Methods={"EntityPathWaypoint ()"},Properties={"double time","Vec3f pos","Quatf rot"}},SystemMeshData={},Scene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (uint32_t)","shared_ptr<classae::scene::Component> GetComponentById (uint32_t)","bool IsNameValid (string)","bool Save ()","bool SaveAs (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},Gamepad={Methods={"bool ButtonDown (uint16_t)","bool Button (uint16_t)","bool ButtonUp (uint16_t)","float Axis (uint16_t)","int32_t Rumble (uint16_t, uint16_t, uint32_t)","int32_t RumbleTriggers (uint16_t, uint16_t, uint32_t)"}},IPipeline={Methods={"Desc GetDesc ()"}},ColorWriteMask={Methods={"ColorWriteMask ()"},Properties={"bool r","bool g","bool b","bool a"}},StreamComponent={Methods={"StreamComponent ()"},Properties={"VertexComponent usage","VertexComponentFormat format","uint32_t offset","bool normalizeIntegerTypes"}},UILayout={},UILayouts={},Server={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetClients (this_state)","uint32_t GetScriptsVersion ()","void LuaReset ()","void ResendScripts ()","basic_table_core<0,classsol::basic_reference<0> > GetLuaFilesList (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetVoxelFilesList (this_state)","void SaveVoxelData ()","void OnLuaLog ()","bool IsClient ()","bool IsServer ()","bool DevMode ()","uint32_t GetCurrentUIActionID ()","void ScrollToLastestLuaLog ()","CommandLine GetCommandLine ()","AssetManager GetResourceManScene ()","AssetManager GetResourceManUI ()","AssetManager GetResourceManSettings ()"}},IRenderTarget={Methods={"Desc GetDesc ()"}},ClientContext={Methods={"string UIItemUpdate (uint32_t, UIItem, basic_object<classsol::basic_reference<0> >)","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64_t)","string GetUIActionType (uint64_t)","string GetUIActionScript (uint64_t)","uint32_t GetCurrentUIActionID ()","void OnLuaLog ()","bool IsServer ()","bool IsClient ()","void OpenScriptFile (string, int64_t)","void ClearLuaLogClient ()","void ScrollToLastestLuaLog ()","double GetFPS ()","uint32_t GetScriptsVersion ()","float GetLogValue (string)","void SetLogValue (string, float)","Vector_float GetLogValueForPlot (string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","Vec2i GetVideoRange ()","int32_t GetCurrentFrame ()","void SetCurrentFrame (int32_t)","bool IsContainerEnabledAndVisible (UIItem)","void LuaStartDebugger ()","void LuaEnableDebugging (bool)"}},Box={Methods={"Box ()","Box (uint32_t, uint32_t, uint32_t)","Box (int32_t, int32_t, int32_t, int32_t, int32_t, int32_t)"},Properties={"int32_t minX","int32_t maxX","int32_t minY","int32_t maxY","int32_t minZ","int32_t maxZ"}},StaticVoxelDataComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","string resource","bool isLoaded"}},Vec3f={Methods={"Vec3f ()","Vec3f (float)","Vec3f (int32_t)","Vec3f (float, float, float)","Vec3f (float, float, int32_t)","Vec3f (float, int32_t, float)","Vec3f (float, int32_t, int32_t)","Vec3f (int32_t, float, float)","Vec3f (int32_t, float, int32_t)","Vec3f (int32_t, int32_t, float)","Vec3f (int32_t, int32_t, int32_t)","Vec3f (Vec2f, float)","Vec3f (Vec2f, int32_t)","Vec3f (Vec2i, float)","Vec3f (Vec2i, int32_t)","Vec3f (float, Vec2f)","Vec3f (float, Vec2i)","Vec3f (int32_t, Vec2f)","Vec3f (int32_t, Vec2i)","Vec3f (Vec3f)","Vec3f (Vec3i)","Vec3f (Vec4f)","Vec3f (Vec4i)","float __index (Vec3f, uint32_t)","void __newindex (Vec3f, uint32_t, float)","Vec3f __add (Vec3f, Vec3f)","Vec3f __add (Vec3f, Vec3i)","Vec3f __add (Vec3f, float)","Vec3f __add (float, Vec3f)","Vec3f __sub (Vec3f, Vec3f)","Vec3f __sub (Vec3f, Vec3i)","Vec3f __sub (Vec3f, float)","Vec3f __sub (float, Vec3f)","Vec3f __mul (Vec3f, Vec3f)","Vec3f __mul (Vec3f, Vec3i)","Vec3f __mul (Vec3f, float)","Vec3f __mul (float, Vec3f)","Vec3f __div (Vec3f, Vec3f)","Vec3f __div (Vec3f, Vec3i)","Vec3f __div (Vec3f, float)","Vec3f __div (float, Vec3f)","Vec3f __mod (Vec3f, Vec3f)","Vec3f __mod (Vec3f, Vec3i)","Vec3f __mod (Vec3f, float)","Vec3f __mod (float, Vec3f)","Vec3f __pow (Vec3f, Vec3f)","Vec3f __pow (Vec3f, Vec3i)","Vec3f __pow (Vec3f, float)","Vec3f __pow (float, Vec3f)","Vec3f __unm (Vec3f)","bool __eq (Vec3f, Vec3f)","bool __eq (Vec3f, Vec3i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec3f GetAbs ()","void Clamp (Vec3f, float, float)","void Clamp (Vec3f, Vec3f, Vec3f)","Vec3f GetClamped (Vec3f, float, float)","Vec3f GetClamped (Vec3f, Vec3f, Vec3f)","float Dot (Vec3f, Vec3f)","float Dot (Vec3f, Vec3i)","bool IsAnyNaN ()","Vec3f Lerp (Vec3f, Vec3f, float)","Vec3f Normalize ()","Vec3f NormalizeSafe ()","Vec3f GetNormalized ()","Vec3f GetNormalizedSafe ()","void Ceil (Vec3f)","Vec3f GetCeiled (Vec3f)","void Floor (Vec3f)","Vec3f GetFloored (Vec3f)","void Round (Vec3f)","Vec3f GetRounded (Vec3f)","float DistanceTo (Vec3f)","Vec3f Cross (Vec3f, Vec3f)","Vec3f Cross (Vec3f, Vec3i)"},Properties={"float x","float y","float z","Vec3f zero","Vec3f up","Vec3f right","Vec3f forward","Vec3f down","Vec3f left","Vec3f back"}},VoxelRender={Methods={"bool __eq (VoxelRender, VoxelRender)"},Properties={"string type","shared_ptr<classae::scene::Object> object","bool sync","bool enabled","bool selected"}},ScriptComponent={Methods={"bool GetSyncToClient ()","void SetSyncToClient (bool)","bool AssignScript (string)","void RPC (variadic_args)"},Properties={"string type","shared_ptr<classae::scene::Object> object","string name","string file","bool syncToClient","bool sync","basic_table_core<0,classsol::basic_reference<0> > instance","bool isValid"}},Texture={Methods={"bool IsValid ()","bool IsManaged ()"}},Transform={Methods={"basic_object<classsol::basic_reference<0> > GetChild (int32_t, this_state)","basic_object<classsol::basic_reference<0> > GetChild (string, this_state)","basic_object<classsol::basic_reference<0> > Get (int32_t, this_state)","basic_object<classsol::basic_reference<0> > Get (string, this_state)","bool SetParent (basic_object<classsol::basic_reference<0> >)","Vec3f LocalToWorld (Vec3f)","Vec3f WorldToLocal (Vec3f)","Vec3f LocalToWorldVec (Vec3f)","Vec3f WorldToLocalVec (Vec3f)","bool __eq (Transform, Transform)"},Properties={"uint64_t childCount","Vec3f pos","Quatf rot","Vec3f localPos","float localScale","Quatf localRot","basic_object<classsol::basic_reference<0> > parent","Vec3f right","Vec3f up","Vec3f forward","string type","shared_ptr<classae::scene::Object> object"}},["IShader::Desc"]={Methods={"IShader::Desc ()"},Properties={"Type type"}},UIItem={Methods={"string GetID ()","string GetType ()","string GetLabel ()"}},SystemMeshRender={},Vec4i={Methods={"Vec4i ()","Vec4i (int32_t)","Vec4i (float)","Vec4i (int32_t, int32_t, int32_t, int32_t)","Vec4i (int32_t, int32_t, int32_t, float)","Vec4i (int32_t, int32_t, float, int32_t)","Vec4i (int32_t, int32_t, float, float)","Vec4i (int32_t, float, int32_t, int32_t)","Vec4i (int32_t, float, int32_t, float)","Vec4i (int32_t, float, float, int32_t)","Vec4i (int32_t, float, float, float)","Vec4i (float, int32_t, int32_t, int32_t)","Vec4i (float, int32_t, int32_t, float)","Vec4i (float, int32_t, float, int32_t)","Vec4i (float, int32_t, float, float)","Vec4i (float, float, int32_t, int32_t)","Vec4i (float, float, int32_t, float)","Vec4i (float, float, float, int32_t)","Vec4i (float, float, float, float)","Vec4i (Vec2i, int32_t, int32_t)","Vec4i (Vec2i, int32_t, float)","Vec4i (Vec2i, float, int32_t)","Vec4i (Vec2i, float, float)","Vec4i (Vec2f, int32_t, int32_t)","Vec4i (Vec2f, int32_t, float)","Vec4i (Vec2f, float, int32_t)","Vec4i (Vec2f, float, float)","Vec4i (int32_t, Vec2i, int32_t)","Vec4i (int32_t, Vec2i, float)","Vec4i (int32_t, Vec2f, int32_t)","Vec4i (int32_t, Vec2f, float)","Vec4i (float, Vec2i, int32_t)","Vec4i (float, Vec2i, float)","Vec4i (float, Vec2f, int32_t)","Vec4i (float, Vec2f, float)","Vec4i (int32_t, int32_t, Vec2i)","Vec4i (int32_t, int32_t, Vec2f)","Vec4i (int32_t, float, Vec2i)","Vec4i (int32_t, float, Vec2f)","Vec4i (float, int32_t, Vec2i)","Vec4i (float, int32_t, Vec2f)","Vec4i (float, float, Vec2i)","Vec4i (float, float, Vec2f)","Vec4i (Vec2i, Vec2i)","Vec4i (Vec2i, Vec2f)","Vec4i (Vec2f, Vec2i)","Vec4i (Vec2f, Vec2f)","Vec4i (Vec3i, int32_t)","Vec4i (Vec3i, float)","Vec4i (Vec3f, int32_t)","Vec4i (Vec3f, float)","Vec4i (int32_t, Vec3i)","Vec4i (int32_t, Vec3f)","Vec4i (float, Vec3i)","Vec4i (float, Vec3f)","Vec4i (Vec4i)","Vec4i (Vec4f)","int32_t __index (Vec4i, uint32_t)","void __newindex (Vec4i, uint32_t, int32_t)","Vec4i __add (Vec4i, Vec4i)","Vec4f __add (Vec4i, Vec4f)","Vec4i __add (Vec4i, int32_t)","Vec4i __add (int32_t, Vec4i)","Vec4i __sub (Vec4i, Vec4i)","Vec4f __sub (Vec4i, Vec4f)","Vec4i __sub (Vec4i, int32_t)","Vec4i __sub (int32_t, Vec4i)","Vec4i __mul (Vec4i, Vec4i)","Vec4f __mul (Vec4i, Vec4f)","Vec4i __mul (Vec4i, int32_t)","Vec4i __mul (int32_t, Vec4i)","Vec4i __div (Vec4i, Vec4i)","Vec4f __div (Vec4i, Vec4f)","Vec4i __div (Vec4i, int32_t)","Vec4i __div (int32_t, Vec4i)","Vec4i __mod (Vec4i, Vec4i)","Vec4f __mod (Vec4i, Vec4f)","Vec4i __mod (Vec4i, int32_t)","Vec4i __mod (int32_t, Vec4i)","Vec4i __pow (Vec4i, Vec4i)","Vec4f __pow (Vec4i, Vec4f)","Vec4i __pow (Vec4i, int32_t)","Vec4i __pow (int32_t, Vec4i)","Vec4i __unm (Vec4i)","bool __eq (Vec4i, Vec4i)","bool __eq (Vec4i, Vec4f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec4i GetAbs ()","void Clamp (Vec4i, int32_t, int32_t)","void Clamp (Vec4i, Vec4i, Vec4i)","Vec4i GetClamped (Vec4i, int32_t, int32_t)","Vec4i GetClamped (Vec4i, Vec4i, Vec4i)","int32_t Dot (Vec4i, Vec4i)","float Dot (Vec4i, Vec4f)","Vec4i __band (Vec4i, Vec4i)","Vec4i __band (int32_t, Vec4i)","Vec4i __band (Vec4i, int32_t)","Vec4i __bor (Vec4i, Vec4i)","Vec4i __bor (int32_t, Vec4i)","Vec4i __bor (Vec4i, int32_t)","Vec4i __bxor (Vec4i, Vec4i)","Vec4i __bxor (int32_t, Vec4i)","Vec4i __bxor (Vec4i, int32_t)","Vec4i __bnot (Vec4i)","Vec4i __shl (Vec4i, Vec4i)","Vec4i __shl (int32_t, Vec4i)","Vec4i __shl (Vec4i, int32_t)","Vec4i __shr (Vec4i, Vec4i)","Vec4i __shr (int32_t, Vec4i)","Vec4i __shr (Vec4i, int32_t)"},Properties={"int32_t x","int32_t y","int32_t z","int32_t w","Vec4i zero","Vec4i up","Vec4i right","Vec4i forward","Vec4i down","Vec4i left","Vec4i back"}},ResResource={},["IAdapter::Caps"]={Methods={"IAdapter::Caps ()"},Properties={"uint32_t drawingCommandsFlags","bool[41] supportedTextureFormats","bool supportsExtendedLineDirective","Limits limits"}},CameraComponent={Methods={"Vec3f ScreenToWorldRay (Vec2f)","Vec2f WorldToScreen (Vec3f)","Vec3f WorldToScreen3f (Vec3f)"},Properties={"string type","shared_ptr<classae::scene::Object> object","Frustum frustum","float fovY","string type","shared_ptr<classae::scene::Object> object"}},MontageComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","string montageId"}},MeshRender={Methods={"bool __eq (MeshRender, MeshRender)"},Properties={"Res<classae::renderer::Material2> material","string type","shared_ptr<classae::scene::Object> object"}},Frustum={Methods={"Frustum ()"},Properties={"float nearPlane","float farPlane","float fovY","float aspectRatio"}},Vec2i={Methods={"Vec2i ()","Vec2i (int32_t)","Vec2i (float)","Vec2i (int32_t, int32_t)","Vec2i (int32_t, float)","Vec2i (float, int32_t)","Vec2i (float, float)","Vec2i (Vec2i)","Vec2i (Vec2f)","Vec2i (Vec3i)","Vec2i (Vec3f)","Vec2i (Vec4i)","Vec2i (Vec4f)","int32_t __index (Vec2i, uint32_t)","void __newindex (Vec2i, uint32_t, int32_t)","Vec2i __add (Vec2i, Vec2i)","Vec2f __add (Vec2i, Vec2f)","Vec2i __add (Vec2i, int32_t)","Vec2i __add (int32_t, Vec2i)","Vec2i __sub (Vec2i, Vec2i)","Vec2f __sub (Vec2i, Vec2f)","Vec2i __sub (Vec2i, int32_t)","Vec2i __sub (int32_t, Vec2i)","Vec2i __mul (Vec2i, Vec2i)","Vec2f __mul (Vec2i, Vec2f)","Vec2i __mul (Vec2i, int32_t)","Vec2i __mul (int32_t, Vec2i)","Vec2i __div (Vec2i, Vec2i)","Vec2f __div (Vec2i, Vec2f)","Vec2i __div (Vec2i, int32_t)","Vec2i __div (int32_t, Vec2i)","Vec2i __mod (Vec2i, Vec2i)","Vec2f __mod (Vec2i, Vec2f)","Vec2i __mod (Vec2i, int32_t)","Vec2i __mod (int32_t, Vec2i)","Vec2i __pow (Vec2i, Vec2i)","Vec2f __pow (Vec2i, Vec2f)","Vec2i __pow (Vec2i, int32_t)","Vec2i __pow (int32_t, Vec2i)","Vec2i __unm (Vec2i)","bool __eq (Vec2i, Vec2i)","bool __eq (Vec2i, Vec2f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec2i GetAbs ()","void Clamp (Vec2i, int32_t, int32_t)","void Clamp (Vec2i, Vec2i, Vec2i)","Vec2i GetClamped (Vec2i, int32_t, int32_t)","Vec2i GetClamped (Vec2i, Vec2i, Vec2i)","int32_t Dot (Vec2i, Vec2i)","float Dot (Vec2i, Vec2f)","Vec2i __band (Vec2i, Vec2i)","Vec2i __band (int32_t, Vec2i)","Vec2i __band (Vec2i, int32_t)","Vec2i __bor (Vec2i, Vec2i)","Vec2i __bor (int32_t, Vec2i)","Vec2i __bor (Vec2i, int32_t)","Vec2i __bxor (Vec2i, Vec2i)","Vec2i __bxor (int32_t, Vec2i)","Vec2i __bxor (Vec2i, int32_t)","Vec2i __bnot (Vec2i)","Vec2i __shl (Vec2i, Vec2i)","Vec2i __shl (int32_t, Vec2i)","Vec2i __shl (Vec2i, int32_t)","Vec2i __shr (Vec2i, Vec2i)","Vec2i __shr (int32_t, Vec2i)","Vec2i __shr (Vec2i, int32_t)"},Properties={"int32_t x","int32_t y","Vec2i zero"}},RasterizerParams={Methods={"RasterizerParams ()"},Properties={"bool rasterizerDiscardEnable","bool depthClampEnable","bool depthBiasEnable","PolygonMode polygonMode","CullMode cullMode","FrontFaceWinding winding","float lineWidth","float depthBiasConstantFactor","float depthBiasClamp","float depthBiasSlopeFactor"}},MipMapImage={Properties={"int32_t width","int32_t height","int32_t depth","uint32_t size"}},VoxelData={Methods={"bool __eq (VoxelData, VoxelData)"},Properties={"string resource","string type","shared_ptr<classae::scene::Object> object"}},SkyboxComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","float cloudScale","float cloudOffset","float cloudSlope","float sunAzimuth","float sunAltitude","Vec3f rayleighCoeff","float mieCoeff","bool render"}},["IPipeline::Desc"]={Methods={"IPipeline::Desc ()","IPipeline::Desc (GraphicsDesc)","IPipeline::Desc (ComputeDesc)","IPipeline::Desc (RayTracingDesc)"},Properties={"Type type","GraphicsDesc pGraphicsDesc","ComputeDesc pComputeDesc","RayTracingDesc pRayTracingDesc"}},MeshDataBuilder={Methods={"MeshDataBuilder ()","void Clear ()","uint32_t AddVertex (Vec3f)","uint32_t AddVertex (Vec3f, Vec4f)","uint32_t AddVertex (Vec3f, Vec2f, Vec4f)","uint32_t AddVertex (Vec3f, Vec2f)","void AddIndex (uint32_t)","void AddIndex (uint32_t, uint32_t, uint32_t)","void AddIndex (uint32_t, uint32_t)"},Properties={"bool static","bool dynamic","bool streamed","PrimitiveTopology topology"}},Mat4f={Methods={"Mat4f ()","Mat4f (float)","Mat4f (float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4f, Vec4i, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4f, Vec4i, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4f, Vec4i)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4f)","Mat4f (Vec4i, Vec4i, Vec4i, Vec4i)","Mat4f (Mat3f)","Mat4f (Mat4f)","Vec4f __index (Mat4f, uint32_t)","void __newindex (Mat4f, uint32_t, Vec4f)","Mat4f __add (Mat4f, Mat4f)","Mat4f __add (Mat4f, float)","Mat4f __add (float, Mat4f)","Mat4f __sub (Mat4f, Mat4f)","Mat4f __sub (Mat4f, float)","Mat4f __sub (float, Mat4f)","Mat4f __mul (Mat4f, Mat4f)","Mat4f __mul (Mat4f, float)","Mat4f __mul (float, Mat4f)","Vec4f __mul (Vec4f, Mat4f)","Mat4f __div (Mat4f, Mat4f)","Mat4f __div (Mat4f, float)","Mat4f __div (float, Mat4f)","Vec4f __div (Vec4f, Mat4f)","Mat4f __unm (Mat4f)","bool __eq (Mat4f, Mat4f)","float GetDeterminant ()","Mat4f Transpose ()","Mat4f GetTransposed ()","Mat4f Invert ()","Mat4f GetInverted ()","bool IsIdentity (float)","bool IsZero ()","bool IsSingular ()","bool IsAnyNaN ()"},Properties={"Vec3f xaxis","Vec3f yaxis","Vec3f zaxis","Vec3f translation","Vec3f row1","Vec3f row2","Vec3f row3","Vec3f row4"}},Component={Properties={"string type","shared_ptr<classae::scene::Object> object"}},ServerScene={Methods={"double GetTime ()","double GetDeltaTime ()","double GetDebugTime ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>, string)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","shared_ptr<classae::scene::Object> GetObjectById (uint32_t)","shared_ptr<classae::scene::Component> GetComponentById (uint32_t)","bool IsNameValid (string)","bool Save ()","bool SaveAs (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string)","int32_t MontageCreate (shared_ptr<classae::scene::Object>)","int32_t MontageUnlink (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> MontageInstantiate (string)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},VoxelInspectData={Properties={"float voxelSize","string texts","Vector_Vec3f positions","Vector_Vec3f colors","Mat4f mat"}},SamplerParams={Methods={"SamplerParams ()"},Properties={"TextureWrappingMode wrappingModeS","TextureWrappingMode wrappingModeT","TextureWrappingMode wrappingModeR","TextureFiltering filtering","float maxAnisotropy","bool compareEnable","Function compareOp"}},Input={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetEvents (this_state)","bool KeyDown (string)","bool Key (string)","bool KeyUp (string)","basic_table_core<0,classsol::basic_reference<0> > KeyCombosDown (this_state)","bool KeyComboDown (string)","bool KeyComboDown (string, string, string)","bool KeyComboDown (string, string)","bool KeyCombo (string)","bool KeyCombo (string, string, string)","bool KeyCombo (string, string)","bool ShiftKey ()","bool CtrlKey ()","bool AltKey ()","bool MouseButtonDown (uint16_t)","bool MouseButton (uint16_t)","bool MouseButtonUp (uint16_t)","int32_t MouseWheel ()","Vec2f MousePos ()","Vec2f MousePosLast ()","Vec2f MouseMove ()","Vec2f MousePosPerc ()","Vec2f MousePosPercLast ()","Vec2f MouseMovePerc ()","bool GetRelativeMouseMode ()","void SetRelativeMouseMode (bool)","float GesturePinch ()","float GestureRotate ()","Vec2f GestureMove ()","int16_t NumFingers ()","bool FingerDown (int64_t)","basic_object<classsol::basic_reference<0> > Fingers (this_state)","bool FingerUp (int64_t)","Vec2f FingerPos (int16_t)","bool VRButton (uint64_t, VRControllerButton)","float VRHandTrigger (uint64_t)","float VRIndexTrigger (uint64_t)","Vec2f VRThumbStick (uint64_t)","basic_object<classsol::basic_reference<0> > Gamepads (this_state)","basic_object<classsol::basic_reference<0> > GetActiveGamepad (this_state)"}},Vec4f={Methods={"Vec4f ()","Vec4f (float)","Vec4f (int32_t)","Vec4f (float, float, float, float)","Vec4f (float, float, float, int32_t)","Vec4f (float, float, int32_t, float)","Vec4f (float, float, int32_t, int32_t)","Vec4f (float, int32_t, float, float)","Vec4f (float, int32_t, float, int32_t)","Vec4f (float, int32_t, int32_t, float)","Vec4f (float, int32_t, int32_t, int32_t)","Vec4f (int32_t, float, float, float)","Vec4f (int32_t, float, float, int32_t)","Vec4f (int32_t, float, int32_t, float)","Vec4f (int32_t, float, int32_t, int32_t)","Vec4f (int32_t, int32_t, float, float)","Vec4f (int32_t, int32_t, float, int32_t)","Vec4f (int32_t, int32_t, int32_t, float)","Vec4f (int32_t, int32_t, int32_t, int32_t)","Vec4f (Vec2f, float, float)","Vec4f (Vec2f, float, int32_t)","Vec4f (Vec2f, int32_t, float)","Vec4f (Vec2f, int32_t, int32_t)","Vec4f (Vec2i, float, float)","Vec4f (Vec2i, float, int32_t)","Vec4f (Vec2i, int32_t, float)","Vec4f (Vec2i, int32_t, int32_t)","Vec4f (float, Vec2f, float)","Vec4f (float, Vec2f, int32_t)","Vec4f (float, Vec2i, float)","Vec4f (float, Vec2i, int32_t)","Vec4f (int32_t, Vec2f, float)","Vec4f (int32_t, Vec2f, int32_t)","Vec4f (int32_t, Vec2i, float)","Vec4f (int32_t, Vec2i, int32_t)","Vec4f (float, float, Vec2f)","Vec4f (float, float, Vec2i)","Vec4f (float, int32_t, Vec2f)","Vec4f (float, int32_t, Vec2i)","Vec4f (int32_t, float, Vec2f)","Vec4f (int32_t, float, Vec2i)","Vec4f (int32_t, int32_t, Vec2f)","Vec4f (int32_t, int32_t, Vec2i)","Vec4f (Vec2f, Vec2f)","Vec4f (Vec2f, Vec2i)","Vec4f (Vec2i, Vec2f)","Vec4f (Vec2i, Vec2i)","Vec4f (Vec3f, float)","Vec4f (Vec3f, int32_t)","Vec4f (Vec3i, float)","Vec4f (Vec3i, int32_t)","Vec4f (float, Vec3f)","Vec4f (float, Vec3i)","Vec4f (int32_t, Vec3f)","Vec4f (int32_t, Vec3i)","Vec4f (Vec4f)","Vec4f (Vec4i)","float __index (Vec4f, uint32_t)","void __newindex (Vec4f, uint32_t, float)","Vec4f __add (Vec4f, Vec4f)","Vec4f __add (Vec4f, Vec4i)","Vec4f __add (Vec4f, float)","Vec4f __add (float, Vec4f)","Vec4f __sub (Vec4f, Vec4f)","Vec4f __sub (Vec4f, Vec4i)","Vec4f __sub (Vec4f, float)","Vec4f __sub (float, Vec4f)","Vec4f __mul (Vec4f, Vec4f)","Vec4f __mul (Vec4f, Vec4i)","Vec4f __mul (Vec4f, float)","Vec4f __mul (float, Vec4f)","Vec4f __div (Vec4f, Vec4f)","Vec4f __div (Vec4f, Vec4i)","Vec4f __div (Vec4f, float)","Vec4f __div (float, Vec4f)","Vec4f __mod (Vec4f, Vec4f)","Vec4f __mod (Vec4f, Vec4i)","Vec4f __mod (Vec4f, float)","Vec4f __mod (float, Vec4f)","Vec4f __pow (Vec4f, Vec4f)","Vec4f __pow (Vec4f, Vec4i)","Vec4f __pow (Vec4f, float)","Vec4f __pow (float, Vec4f)","Vec4f __unm (Vec4f)","bool __eq (Vec4f, Vec4f)","bool __eq (Vec4f, Vec4i)","float Len ()","float SqrLength ()","bool IsZero ()","Vec4f GetAbs ()","void Clamp (Vec4f, float, float)","void Clamp (Vec4f, Vec4f, Vec4f)","Vec4f GetClamped (Vec4f, float, float)","Vec4f GetClamped (Vec4f, Vec4f, Vec4f)","float Dot (Vec4f, Vec4f)","float Dot (Vec4f, Vec4i)","bool IsAnyNaN ()","Vec4f Lerp (Vec4f, Vec4f, float)","Vec4f Normalize ()","Vec4f NormalizeSafe ()","Vec4f GetNormalized ()","Vec4f GetNormalizedSafe ()","void Ceil (Vec4f)","Vec4f GetCeiled (Vec4f)","void Floor (Vec4f)","Vec4f GetFloored (Vec4f)","void Round (Vec4f)","Vec4f GetRounded (Vec4f)","float DistanceTo (Vec4f)"},Properties={"float x","float y","float z","float w","Vec4f zero","Vec4f up","Vec4f right","Vec4f forward","Vec4f down","Vec4f left","Vec4f back"}},NativeComponent={},RealtimeLightingInfo={Properties={"bool directional","bool shadows","float shadowsIntensity","float diffuseDirSpread","bool ambientOcclusion","int32_t diffuseSamples","Vec3f ambientColor","Vec3f diffuseColor","Vec3f lightDir","int32_t ambientSamples","float diffuseRayLength","float ambientRayLength","int32_t taskBoxScale"}},IShader={Methods={"Desc GetDesc ()"}},["IBuffer::Desc"]={Methods={"IBuffer::Desc ()"},Properties={"Type type","ResourceUsage usage","uint32_t usageFlags","uint64_t size"}},["ITexture::Desc"]={Methods={"ITexture::Desc ()"},Properties={"Type type","PixelFormat format","ResourceUsage usage","uint32_t usageFlags","uint32_t width","uint32_t height","uint32_t depth","uint32_t layerCount","uint32_t mipMapCount","uint32_t sampleCount","bool optimalTiling"}},MeshData={Methods={"bool __eq (MeshData, MeshData)"},Properties={"string file","MeshDataBuilder data","string type","shared_ptr<classae::scene::Object> object"}},SystemVoxelRender={},ShaderFiles={Methods={"ShaderFiles (string, FilePath)","bool IsValid ()","bool IsManaged ()","string GetFiles ()","string GetFile (string)","string GetAssetsPath ()"}},SystemTransform={},Object={Methods={"void RemoveAllNonNativeComponents ()","basic_object<classsol::basic_reference<0> > AddComponent (string, this_state)","basic_object<classsol::basic_reference<0> > GetComponent (uint64_t)","basic_table_core<0,classsol::basic_reference<0> > GetComponents ()","bool RemoveComponent (string, this_state)","bool RemoveComponent (basic_object<classsol::basic_reference<0> >, this_state)","basic_object<classsol::basic_reference<0> > GetComponentByType (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetComponentsByType (string, this_state)","shared_ptr<classae::scene::ScriptComponent> FindScriptComponentByName (string)"},Properties={"string name","string tag","Transform transform","basic_object<classsol::basic_reference<0> > parent","basic_table_core<0,classsol::basic_reference<0> > components","basic_table_core<0,classsol::basic_reference<0> > children","uint32_t id","bool isDestroyed","uint64_t componentsCount","bool update","bool active","bool dontSave"}},["ae::graphics::Options"]={Methods={"ae::graphics::Options ()"},Properties={"uint8_t debugLevel","bool enableRTX","bool stateCache","bool forceGLStateRefresh","bool preferAsyncBufferTransfers","DepthBufferMode depthBufferMode","VSyncMode vsyncMode","uint32_t refreshRateHint"}},ScriptInstance={Methods={"void Start ()","void Update (float deltaTime)","void Attach ()","void Detach ()","void RPC (string, variadic_args)","void RPC (int64_t, string, variadic_args)"},Properties={"shared_ptr<classae::scene::ScriptComponent> component","shared_ptr<classae::scene::Object> object","Transform transform","bool onServer","bool onClient"}},["IAdapter::ResourceStats"]={Methods={"IAdapter::ResourceStats ()"},Properties={"uint32_t[8] textureCount","uint64_t[8] textureSize","uint32_t[7] bufferCount","uint64_t[7] bufferSize","uint32_t[3] asCount","uint64_t[3] asSize","uint32_t[13] shaderCount","uint32_t[4] pipelineCount","uint32_t renderTargetCount"}},LightingUpdate={Properties={"RealtimeLightingInfo realtimeLighting"}},Rotation={Methods={"Rotation ()","Rotation (Vec3f)"},Properties={"Vec3f angles"}},FileTexture={Methods={"FileTexture (string, FilePath)","bool IsValid ()","bool IsManaged ()","string GetPath ()","ResourceUsage GetUsage ()","void SetUsage (ResourceUsage)","Image GetImage ()"}},SystemVoxelData={},ITexture={Methods={"Desc GetDesc ()"}},EntityPath={Methods={"EntityPath (string)","bool IsValid ()","bool IsManaged ()","void AddPointPath (double, Transformation)","void AddPointPathCurrent (Transformation)","void Start (double)","void Clear ()"},Properties={"vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> > path","int32_t interpolation"}},Vec3i={Methods={"Vec3i ()","Vec3i (int32_t)","Vec3i (float)","Vec3i (int32_t, int32_t, int32_t)","Vec3i (int32_t, int32_t, float)","Vec3i (int32_t, float, int32_t)","Vec3i (int32_t, float, float)","Vec3i (float, int32_t, int32_t)","Vec3i (float, int32_t, float)","Vec3i (float, float, int32_t)","Vec3i (float, float, float)","Vec3i (Vec2i, int32_t)","Vec3i (Vec2i, float)","Vec3i (Vec2f, int32_t)","Vec3i (Vec2f, float)","Vec3i (int32_t, Vec2i)","Vec3i (int32_t, Vec2f)","Vec3i (float, Vec2i)","Vec3i (float, Vec2f)","Vec3i (Vec3i)","Vec3i (Vec3f)","Vec3i (Vec4i)","Vec3i (Vec4f)","int32_t __index (Vec3i, uint32_t)","void __newindex (Vec3i, uint32_t, int32_t)","Vec3i __add (Vec3i, Vec3i)","Vec3f __add (Vec3i, Vec3f)","Vec3i __add (Vec3i, int32_t)","Vec3i __add (int32_t, Vec3i)","Vec3i __sub (Vec3i, Vec3i)","Vec3f __sub (Vec3i, Vec3f)","Vec3i __sub (Vec3i, int32_t)","Vec3i __sub (int32_t, Vec3i)","Vec3i __mul (Vec3i, Vec3i)","Vec3f __mul (Vec3i, Vec3f)","Vec3i __mul (Vec3i, int32_t)","Vec3i __mul (int32_t, Vec3i)","Vec3i __div (Vec3i, Vec3i)","Vec3f __div (Vec3i, Vec3f)","Vec3i __div (Vec3i, int32_t)","Vec3i __div (int32_t, Vec3i)","Vec3i __mod (Vec3i, Vec3i)","Vec3f __mod (Vec3i, Vec3f)","Vec3i __mod (Vec3i, int32_t)","Vec3i __mod (int32_t, Vec3i)","Vec3i __pow (Vec3i, Vec3i)","Vec3f __pow (Vec3i, Vec3f)","Vec3i __pow (Vec3i, int32_t)","Vec3i __pow (int32_t, Vec3i)","Vec3i __unm (Vec3i)","bool __eq (Vec3i, Vec3i)","bool __eq (Vec3i, Vec3f)","int32_t Len ()","int32_t SqrLength ()","bool IsZero ()","Vec3i GetAbs ()","void Clamp (Vec3i, int32_t, int32_t)","void Clamp (Vec3i, Vec3i, Vec3i)","Vec3i GetClamped (Vec3i, int32_t, int32_t)","Vec3i GetClamped (Vec3i, Vec3i, Vec3i)","int32_t Dot (Vec3i, Vec3i)","float Dot (Vec3i, Vec3f)","Vec3i __band (Vec3i, Vec3i)","Vec3i __band (int32_t, Vec3i)","Vec3i __band (Vec3i, int32_t)","Vec3i __bor (Vec3i, Vec3i)","Vec3i __bor (int32_t, Vec3i)","Vec3i __bor (Vec3i, int32_t)","Vec3i __bxor (Vec3i, Vec3i)","Vec3i __bxor (int32_t, Vec3i)","Vec3i __bxor (Vec3i, int32_t)","Vec3i __bnot (Vec3i)","Vec3i __shl (Vec3i, Vec3i)","Vec3i __shl (int32_t, Vec3i)","Vec3i __shl (Vec3i, int32_t)","Vec3i __shr (Vec3i, Vec3i)","Vec3i __shr (int32_t, Vec3i)","Vec3i __shr (Vec3i, int32_t)"},Properties={"int32_t x","int32_t y","int32_t z","Vec3i zero","Vec3i up","Vec3i right","Vec3i forward","Vec3i down","Vec3i left","Vec3i back"}},["IRenderTarget::Desc"]={Methods={"IRenderTarget::Desc ()"},Properties={"uint32_t width","uint32_t height","uint32_t layers","uint64_t attachmentMask"}},VoxelInspectComponent={Methods={"void AddVoxelInfo (float, Vector_Vec3f, string, Vector_Vec3f, Mat4f, bool, int32_t)","void Clear ()","void SetLineColor (Vec4f)"},Properties={"string type","shared_ptr<classae::scene::Object> object"}},AssetManager={Methods={"unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> > GetAssets (AssetManager)","ResResource Get (string)","bool AddAsset (type, string)","bool AddAsset (string, string)","type GetResourceType (ResResource)","bool IsAssetType (type)","basic_table_core<0,classsol::basic_reference<0> > GetAssetTypes (AssetManager, this_state)","string GetAssetsPath (AssetManager)","string GetFilePath (AssetManager)"}},Material={Methods={"Material (string, FilePath)","bool IsValid ()","bool IsManaged ()","bool HasProperty (string)","Vec3f GetPropertyVec3 (string)","Vec4f GetPropertyVec4 (string)","void SetProperty (string, Vec3f)","void SetProperty (string, Vec4f)"}},CommandLine={Methods={"bool HasOption (string)","float GetOptionFloat (string, float)","int64_t GetOptionInt (string, int64_t)","string GetOption (string, string)","Vec3f GetOptionVec3 (string, Vec3f)"}},GraphicsOptions={Methods={"GraphicsOptions ()"},Properties={"Options globalOptions","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> > platformOptions"}},DepthStencilParams={Methods={"DepthStencilParams ()"},Properties={"bool stencilTestEnable","StencilParams frontBufferStencilParams","StencilParams backBufferStencilParams","bool depthTestEnable","bool depthWriteEnable","bool depthBoundsTestEnable","Function depthCompareOp","float minDepthBounds","float maxDepthBounds"}},IAccelerationStructure={Methods={"Desc GetDesc ()"}},Angle={Methods={"Angle ()","Angle (float, float)","Angle (float)","bool __eq (Angle, Angle)","void Set (float)","float Get ()"},Properties={"float sine","float cosine"}},ViewPortParams={Methods={"ViewPortParams ()"},Properties={"Rect viewport","bool scissorEnable","Rect scissor"}},["IPipeline::GraphicsDesc"]={Methods={"IPipeline::GraphicsDesc ()"},Properties={"const IShader pShaderVertex","const IShader pShaderFragment","const IShader pShaderGeometry","const IShader pShaderTesselationControl","const IShader pShaderTesselationEvaluation","const IRenderTarget pRenderTarget","InputLayout inputLayout","RasterizerParams rasterizerParams","BlendParams blendParams","DepthStencilParams depthStencilParams","PrimitiveTopology topology","bool primitiveRestartEnable"}},IBuffer={Methods={"Desc GetDesc ()"}},Camera={Methods={"Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (Vec3f)","Vec3f GetForward (Object3D)","Vec3f GetRight (Object3D)","Vec3f GetUp (Object3D)","Mat4f GetLtw (Object3D)","Vec3f GetPosition (Object3D)","void SetPosition (Vec3f)","Transformation GetTransformation ()","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (Vec3f)","Vec3f GetForward ()","Vec3f GetRight ()","Vec3f GetUp ()","Mat4f GetLtw ()","Vec3f GetPosition ()","void SetPosition (Vec3f)","Frustum GetFrustum ()","void SetFrustum (Frustum)","Mat4f GetProjection ()","Vec3f GetRay (Vec2f)","void SetFovY (float)","float GetFovY ()"},Properties={"Transformation transformation","Transformation transform"}},["IPipeline::RayTracingDesc"]={Methods={"IPipeline::RayTracingDesc ()"},Properties={"uint64_t shaderCount","uint32_t maxRecursionDepth"}},ConfigMap={Methods={"void SetInt (string, int64_t)","void SetFloat (string, double)","void SetBool (string, bool)","void SetString (string, string)","void SetVec2 (string, Vec2f)","void SetVec3 (string, Vec3f)","void SetVec4 (string, Vec4f)","void Del (string)","bool Exists (string)","int64_t GetInt (string)","int64_t GetInt (string, int64_t)","double GetFloat (string)","double GetFloat (string, double)","bool GetBool (string)","bool GetBool (string, bool)","string GetString (string)","string GetString (string, string)","Vec2f GetVec2 (string)","Vec2f GetVec2 (string, Vec2f)","Vec3f GetVec3 (string)","Vec3f GetVec3 (string, Vec3f)","Vec4f GetVec4 (string)","Vec4f GetVec4 (string, Vec4f)","basic_table_core<0,classsol::basic_reference<0> > GetAllValuesStringified (ConfigMap, this_state)"}},Rect={Methods={"Rect ()","Rect (int32_t, int32_t, int32_t, int32_t)"},Properties={"int32_t x","int32_t y","int32_t width","int32_t height"}},Image={Methods={"bool IsValid ()","bool IsManaged ()"},Properties={"PixelFormat pixelFormat","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> > mipMaps","bool isCubeMap"}},DrawInfo={Methods={"DrawInfo ()"},Properties={"uint32_t first","uint32_t count","uint32_t firstInstance","uint32_t instanceCount","uint32_t baseVertex"}},["rttr::type"]={Methods={"RttrStringView GetName ()"}},StencilParams={Methods={"StencilParams ()"},Properties={"Operation failOp","Operation passOp","Operation depthFailOp","Function compareOp","uint32_t compareMask","uint32_t writeMask","uint32_t reference"}},IAdapter={Methods={"Type GetType ()","Caps GetCaps ()","Features GetFeatures ()","ResourceStats GetResourceStats ()"}}},Enums={CpuArch={[1]="X86",[2]="X86_64",[3]="Arm",[4]="Arm64",[5]="Wasm",[0]="Unknown"},DepthBufferMode={[1]="DepthOnly",[2]="DepthAndStencil",[0]="None"},ResourceUsage={[1]="Dynamic",[2]="Stream",[0]="Static"},System={[1]="Windows",[2]="Linux",[3]="WebBrowser",[4]="MacOS",[5]="iOS",[6]="Android",[0]="Unknown"},BlendMode={[1]="Darken",[2]="Multiply",[3]="ColorBurn",[4]="LinearBurn",[5]="DarkenColor",[6]="Lighten",[7]="Screen",[8]="ColorDodge",[9]="LinearDodge",[10]="LightenColor",[11]="Overlay",[12]="SoftLight",[13]="HardLight",[14]="VividLight",[15]="LinearLight",[16]="PinLight",[17]="HardMix",[18]="Difference",[19]="Exclusion",[20]="Subtract",[21]="Divide",[22]="Hue",[23]="Color",[24]="Saturation",[25]="Luminosity",[0]="Normal"},BlendOp={[1]="Subtract",[2]="ReverseSubtract",[3]="Min",[4]="Max",[0]="Add"},RendererState={[1]="Shadows",[2]="Fog",[4]="MultiView",[8]="Lighting",[131072]="DepthPass"},AttachmentFlags={[8]="Color0",[2]="Depth",[4]="DepthAndStencil",[64]="Color3",[32]="Color2",[16]="Color1"},PrimitiveTopology={[1]="LineStrip",[2]="Lines",[3]="TriangleStrip",[4]="TriangleFan",[5]="Triangles",[0]="Points"},UsageFlagBits={[1]="UsageTransferSrcBIT",[2]="UsageTransferDstBIT",[4]="UsageSampledBIT",[8]="UsageStorageBIT",[512]="UsageFragmentDensityMapBIT",[256]="UsageShadingRateImageBIT",[128]="UsageInputAttachmentBIT",[16]="UsageColorAttachmentBIT",[64]="UsageTransientAttachmentBIT",[32]="UsageDepthStencilAttachmentBIT"},FrontFaceWinding={[1]="CounterClockwise",[0]="Clockwise"},Type={[1]="Texture1D",[2]="Texture1DArray",[3]="Texture2D",[4]="Texture2DArray",[5]="Texture3D",[6]="TextureCube",[7]="TextureCubeArray",[0]="Unknown"},UIActionsPlace={[1]="Server",[2]="Inherited",[0]="Client"},PolygonMode={[1]="Line",[2]="Point",[0]="Fill"},PixelFormat={[1]="RGB888",[2]="RGBA8888",[3]="RGB565",[4]="RGBA5551",[5]="RGBA4444",[6]="BGR888",[7]="BGRA8888",[8]="Depth16",[9]="Depth24",[10]="Depth32",[11]="Depth24Stencil8",[12]="A8",[13]="LA88",[14]="R32f",[15]="RGB32f",[16]="RGBA32f",[17]="R16f",[18]="RGB16f",[19]="RGBA16f",[20]="DXT1",[21]="DXT1_with_ALPHA",[22]="DXT3",[23]="DXT5",[24]="ATC_RGB",[25]="ATC_RGBEA",[26]="ATC_RGBIA",[27]="ETC_RGB",[28]="ETC2_RGB",[29]="ETC2_RGBA_PUNCHTHROUGH_ALPHA",[30]="ETC2_RGBA",[31]="PVRTC4_RGB",[32]="PVRTC2_RGB",[33]="PVRTC4_RGBA",[34]="PVRTC2_RGBA",[35]="Int8",[36]="Int16",[37]="Int32",[38]="UInt8",[39]="UInt16",[40]="UInt32",[0]="Unknown"},DrawingCommandsFlags={[1]="BaseVertex",[2]="BaseInstance",[4]="BaseVertexBaseInstance",[16]="MultiBaseInstance",[32]="MultiBaseVertexBaseInstance",[8]="MultiBaseVertex"},SharePermission={"View"},ShaderResourceType={[1]="Bool",[2]="BoolVec2",[3]="BoolVec3",[4]="BoolVec4",[5]="Int",[6]="IntVec2",[7]="IntVec3",[8]="IntVec4",[9]="UInt",[10]="UIntVec2",[11]="UIntVec3",[12]="UIntVec4",[13]="Float",[14]="FloatVec2",[15]="FloatVec3",[16]="FloatVec4",[17]="FloatMat2x2",[18]="FloatMat2x3",[19]="FloatMat2x4",[20]="FloatMat3x2",[21]="FloatMat3x3",[22]="FloatMat3x4",[23]="FloatMat4x2",[24]="FloatMat4x3",[25]="FloatMat4x4",[26]="Double",[27]="DoubleVec2",[28]="DoubleVec3",[29]="DoubleVec4",[30]="DoubleMat2x2",[31]="DoubleMat2x3",[32]="DoubleMat2x4",[33]="DoubleMat3x2",[34]="DoubleMat3x3",[35]="DoubleMat3x4",[36]="DoubleMat4x2",[37]="DoubleMat4x3",[38]="DoubleMat4x4",[39]="Image",[40]="Texture",[41]="Buffer",[42]="AccelerationStructure",[0]="Unknown"},VRControllerButton={[1]="A",[2]="B",[4]="Menu",[8]="Thumb",[16]="Shoulder"},VSyncMode={[1]="Enabled",[2]="Disabled",[3]="Adaptive",[0]="Default"},VertexComponentFormat={[1]="Int8",[2]="Int8Vec2",[3]="Int8Vec3",[4]="Int8Vec4",[5]="Int16",[6]="Int16Vec2",[7]="Int16Vec3",[8]="Int16Vec4",[9]="Int32",[10]="Int32Vec2",[11]="Int32Vec3",[12]="Int32Vec4",[13]="UInt8",[14]="UInt8Vec2",[15]="UInt8Vec3",[16]="UInt8Vec4",[17]="UInt16",[18]="UInt16Vec2",[19]="UInt16Vec3",[20]="UInt16Vec4",[21]="UInt32",[22]="UInt32Vec2",[23]="UInt32Vec3",[24]="UInt32Vec4",[25]="Float",[26]="FloatVec2",[27]="FloatVec3",[28]="FloatVec4",[29]="FloatMat2x2",[30]="FloatMat2x3",[31]="FloatMat2x4",[32]="FloatMat3x2",[33]="FloatMat3x3",[34]="FloatMat3x4",[35]="FloatMat4x2",[36]="FloatMat4x3",[37]="FloatMat4x4",[38]="Double",[39]="DoubleVec2",[40]="DoubleVec3",[41]="DoubleVec4",[42]="DoubleMat2x2",[43]="DoubleMat2x3",[44]="DoubleMat2x4",[45]="DoubleMat3x2",[46]="DoubleMat3x3",[47]="DoubleMat3x4",[48]="DoubleMat4x2",[49]="DoubleMat4x3",[50]="DoubleMat4x4",[0]="Unknown"},LuaErrorType={[1]="DoFile",[2]="Runtime",[3]="UIAction",[0]="None"},TextureWrappingMode={[1]="Repeat",[2]="MirroredRepeat",[0]="ClampToEdge"},Operation={[1]="Zero",[2]="Replace",[3]="Increment",[4]="IncrementWrap",[5]="Decrement",[6]="DecrementWrap",[7]="Invert",[0]="Keep"},UIItemType={[1]="Window",[2]="Header",[3]="Panel",[4]="Grid",[5]="Tab",[6]="Separator",[7]="Button",[8]="Number",[9]="Wheel",[10]="TextInput",[11]="ListBox",[12]="ListBoxSimple",[13]="ListBoxEnum",[14]="CheckBox",[15]="Radio",[16]="Label",[17]="Color",[18]="Vector",[19]="Matrix",[20]="Transformation",[21]="Plot",[22]="Count",[0]="Undefined"},VertexComponent={[1]="Index",[2]="Position0",[3]="Position1",[4]="Position2",[5]="Position3",[6]="TexCoord0",[7]="TexCoord1",[8]="TexCoord2",[9]="TexCoord3",[10]="TexCoord4",[11]="Color0",[12]="Color1",[13]="Index0",[14]="Index1",[15]="Normal0",[16]="Normal1",[17]="Tangent",[18]="Bitangent",[19]="Data0",[20]="Data1",[21]="Data2",[22]="Data3",[23]="Data4",[0]="Unknown"},BlendFactor={[1]="One",[2]="SrcColor",[3]="OneMinusSrcColor",[4]="DstColor",[5]="OneMinusDstColor",[6]="SrcAlpha",[7]="OneMinusSrcAlpha",[8]="DstAlpha",[9]="OneMinusDstAlpha",[10]="ConstantColor",[11]="OneMinusConstantColor",[12]="ConstantAlpha",[13]="OneMinusConstantAlpha",[14]="SrcAlphaSaturate",[15]="Src1Color",[16]="OneMinusSrc1Color",[17]="Src1Alpha",[18]="OneMinusSrc1Alpha",[0]="Zero"},Function={[1]="Less",[2]="Equal",[3]="Lequl",[4]="Greater",[5]="Notequal",[6]="Gequal",[7]="Always",[0]="Never"},UpdateFrequency={[1]="Frame",[2]="ObjectFrame",[3]="ObjectDraw",[0]="Once"},TextureFiltering={[1]="Linear",[2]="Bilinear",[3]="Trilinear",[4]="Anisotropic",[0]="None"},CullMode={[1]="Front",[2]="Back",[3]="FrontAndBack",[0]="None"}},Namespaces={["structae::graphics"]={"InputLayout"},ITexture={"Desc"},std={"string"},IRenderTarget={"Desc"},IAccelerationStructure={"Desc"},Vector_std={"string"},classsol={"basic_object<classsol::basic_reference<0> >","basic_table_core<0,classsol::basic_reference<0> >"},["ae::graphics"]={"Options"},structsol={"this_state","variadic_args"},classstd={"shared_ptr<classae::lighting::LightingUpdate>","shared_ptr<classae::scene::Component>","shared_ptr<classae::scene::LuaVoxelDB>","shared_ptr<classae::scene::Object>","shared_ptr<classae::scene::ScriptComponent>","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> >","vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> >","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> >"},IShader={"Desc"},rttr={"type"},["classae::core"]={"Res<classae::renderer::Material2>"},["const IPipeline"]={"ComputeDesc","GraphicsDesc","RayTracingDesc"},IBuffer={"Desc"},IPipeline={"Desc"},IAdapter={"Caps","Features","Limits","ResourceStats"}}};return _;end