do local _={Namespaces={["enumae::core::Input"]={"ControllerButtons"},std={"string"},IRenderTarget={"Desc"},ITexture={"Desc"},IPipeline={"Desc"},IAccelerationStructure={"Desc"},classstd={"shared_ptr<classae::lighting::LightingUpdate>","shared_ptr<classae::scene::LuaVoxelDB>","shared_ptr<classae::scene::Object>","shared_ptr<classae::scene::ScriptComponent>","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> >","unordered_set<classrttr::type,structstd::hash<classrttr::type>,structstd::equal_to<classrttr::type>,classstd::allocator<classrttr::type> >","vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> >","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> >","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> >"},IAdapter={"Caps","Features","Limits","ResourceStats"},IBuffer={"Desc"},rttr={"type"},structsol={"this_state"},["structae::graphics"]={"InputLayout"},IShader={"Desc"},["classae::core"]={"Res<classae::renderer::Material2>"},["ae::graphics"]={"Options"},Vector_std={"string"},["const IPipeline"]={"ComputeDesc","GraphicsDesc","RayTracingDesc"},classsol={"basic_object<classsol::basic_reference<0> >","basic_table_core<0,classsol::basic_reference<0> >"}},Classes={Client={Methods={"void SendMessage (basic_table_core<0,classsol::basic_reference<0> > message)","void SendMessages (basic_table_core<0,classsol::basic_reference<0> > tableOfMessages)","basic_table_core<0,classsol::basic_reference<0> > ReceiveMessages (this_state)","string UIItemUpdate (uint32_t actionID, UIItem item, basic_object<classsol::basic_reference<0> > value)","void OpenKeyboardShortcutInput (string keyActionID)","void ToggleUICreatorWindow ()","void ToggleUIStudioSDK ()","void ToggleUIVisibility ()","void ToggleMainMenuVisibility ()","void SetToClientUI ()","bool GetUICapturesMouseOrKeyboard ()","bool GetUICapturesMouse ()","bool GetUICapturesKeyboard ()","bool GetUICapturesTextInput ()","bool GetUIIsInEditMode ()","void LoadDefaultLayout ()","void OpenUIWindow (string windowID)","void CloseUIWindow (string windowID)","void ToggleUIWindow (string windowID)","bool IsWindowOpen (string windowID)","void OpenScriptFile (string filename, int64_t line)","void OpenServerScriptFile (string filename, int64_t line)","void OpenZeroBraneStudio (string parameters)","void OpenZeroBraneStudioActions ()","void SetUIScale (float scale)","float GetUIScale ()","bool GetUIScaleAuto ()","void SetUIScaleAuto (bool autoScale)","string GetMontageURL ()","void SetMontageURL (string url)","void LoadMontageByURL ()","void CancelLoadMontageByURL ()","string GetConnectionStatus ()","void DisconnectFromMontageServer ()","float GetLogValue (string)","void SetLogValue (string, float)","void SetStrLogValue (string, string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","Vector_float GetLogValueForPlot (string)","string GetLogStrValue (string)","string GetLogStrIValue (uint64_t)","string GetLogStrIValueName (uint64_t)","string GetLogStrIValueOutputName (uint64_t)","bool GetLogStrIsValue (uint64_t)","uint64_t GetLogStrValuesCount ()","double GetTime ()","double GetLogTime (string)","float GetFPS ()","ConfigMap GetConfigInputActions ()","void ConnectToServer (Client)","bool OpenFolder (string folder)","uint32_t GetScriptsVersion ()","uint32_t GetClientScriptsVersion ()","void ResendServerLua ()","void ReloadLua ()","void LuaOpenDebugger ()","void LuaEnableDebugging (bool enable)","void OnLuaLog ()","void ScrollToLastestLuaLog ()","Camera GetCamera ()","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> > GetVisibleWindows ()","bool IsContainerEnabledAndVisible (UIItem uiItem)","basic_table_core<0,classsol::basic_reference<0> > GetConnectionInfo ()","basic_table_core<0,classsol::basic_reference<0> > GetNetworkStat ()","void Log (string)","basic_table_core<0,classsol::basic_reference<0> > GetVoxelStreamStats ()","bool IsClient ()","bool IsServer ()","void SelectItemInUICreator (UIItem uiItem)","UIItem GetUIItemByUIActionID (uint64_t uiActionID)","string GetUIActionType (uint64_t uiActionID)","string GetUIActionScript (uint64_t uiActionID)","uint32_t GetCurrentUIActionID ()","void WriteToScreen (string, V2f, V2f, V4f, uint32_t, float)","void WriteToScreen (string, V2f)","void WriteToScreen (string, V2f, V2f)","void WriteToScreen (string, V2f, V2f, V4f)","void WriteToScreen (string, V2f, V2f, V4f, uint32_t)","void CloseApp ()","float GetDeltaTime ()","float GetTotalTime ()","Camera GetMainCamera ()","string GetEULA ()","V2f GetViewportSize ()","CommandLine GetCommandLine ()","V4f GetBGColor ()","void SetBGColor (V4f)","bool GetVREnabled ()","void SetVREnabled (bool, string)","void ToggleVREnabled (string)","void TriggerCrash ()","void TriggerException ()","void TriggerCriticalError ()","AssetManager GetResourceManScene ()","AssetManager GetResourceManUI ()","AssetManager GetResourceManSettings ()","void ToggleChannelRendering ()","void SaveEntityPath ()"},Properties={"string platform","string sysInfo"}},VoxelInspectComponent={Methods={"void AddVoxelInfo (float, Vector_V3f, string, Vector_V3f, bool, int32_t)","void Clear ()","void SetLineColor (V4f)"},Properties={"string type","shared_ptr<classae::scene::Object> object"}},ColorWriteMask={Methods={"ColorWriteMask ()"},Properties={"bool r","bool g","bool b","bool a"}},Matrix4f={Methods={"Matrix4f ()","Matrix4f (Matrix4f)"}},ViewPortParams={Methods={"ViewPortParams ()"},Properties={"Rect viewport","bool scissorEnable","Rect scissor"}},quat={Methods={"quat ()","quat (float, float, float, float)","quat (V3f)","quat (quat)","quat (float, V3f)","quat (V3f, V3f)","float __index (V3f, uint32_t)","void __newindex (V3f, uint32_t, float)","quat __add (quat, quat)","quat __sub (quat, quat)","quat __mul (quat, quat)","quat __mul (float, quat)","quat __mul (quat, float)","V4f __mul (quat, V4f)","V3f __mul (quat, V3f)","quat __div (quat, float)","quat __unm (quat, quat)","bool __eq (quat, quat)","quat Euler (V3f)","quat AngleAxis (float, V3f)","float Dot (quat)","quat Lerp (quat, quat, float)","quat Mix (quat, quat, float)","void Normalize ()","quat Slerp (quat, quat, float)","void Rotate (float, V3f)","quat GetRotated (float, V3f)","quat LookAt (V3f)","quat LookAt (V3f, V3f)","void Invert ()","quat GetInversed ()","float DotProd (quat)"},Properties={"float x","float y","float z","float w","quat identity","V3f euler","Matrix3f mat3","Matrix4f mat4","float angle","V3f axis","quat conjugate","quat inverse","float length","quat normalized","float pitch","float yaw","float roll"}},RealtimeLightingInfo={Properties={"bool directional","bool shadows","bool ambientOcclusion","int32_t diffuseSamples","V3f ambientColor","V3f diffuseColor","V3f lightDir","int32_t ambientSamples","float diffuseRayLength","float ambientRayLength","int32_t taskBoxScale"}},LuaSystem={Methods={"string GetEnumValues (string)","string GetAllEnumTypes ()","string GetAllRttrTypes ()","type GetRttrType (string)","string NewStringVector ()"}},MeshDataBuilder={Methods={"MeshDataBuilder ()","void Clear ()","uint32_t AddVertex (V3f)","uint32_t AddVertex (V3f, V4f)","uint32_t AddVertex (V3f, V2f, V4f)","uint32_t AddVertex (V3f, V2f)","void AddIndex (uint32_t)","void AddIndex (uint32_t, uint32_t, uint32_t)","void AddIndex (uint32_t, uint32_t)"},Properties={"bool static","bool dynamic","bool streamed","PrimitiveTopology topology"}},IBuffer={Methods={"Desc GetDesc ()"}},ClientContext={Methods={"string UIItemUpdate (uint32_t, UIItem, basic_object<classsol::basic_reference<0> >)","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64_t)","string GetUIActionType (uint64_t)","string GetUIActionScript (uint64_t)","uint32_t GetCurrentUIActionID ()","void OnLuaLog ()","bool IsServer ()","bool IsClient ()","void OpenScriptFile (string, int64_t)","void ClearLuaLogClient ()","void ScrollToLastestLuaLog ()","float GetFPS ()","uint32_t GetScriptsVersion ()","float GetLogValue (string)","void SetLogValue (string, float)","Vector_float GetLogValueForPlot (string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","V2i GetVideoRange ()","int32_t GetCurrentFrame ()","void SetCurrentFrame (int32_t)","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> > GetVisibleWindows ()","bool IsContainerEnabledAndVisible (UIItem)","void LuaStartDebugger ()","void LuaEnableDebugging (bool)"}},AssetManager={Methods={"unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> > GetAssets (AssetManager)","ResResource Get (string)","bool AddAsset (type, string)","bool AddAsset (string, string)","type GetResourceType (ResResource)","bool IsAssetType (type)","unordered_set<classrttr::type,structstd::hash<classrttr::type>,structstd::equal_to<classrttr::type>,classstd::allocator<classrttr::type> > GetAssetTypes ()","string GetAssetsPath (AssetManager)","string GetFilePath (AssetManager)"}},ConfigMap={Methods={"void SetInt (string, int64_t)","void SetFloat (string, double)","void SetBool (string, bool)","void SetString (string, string)","void SetVec2 (string, V2f)","void SetVec3 (string, V3f)","void SetVec4 (string, V4f)","void Del (string)","bool Exists (string)","int64_t GetInt (string)","int64_t GetInt (string, int64_t)","double GetFloat (string)","double GetFloat (string, double)","bool GetBool (string)","bool GetBool (string, bool)","string GetString (string)","string GetString (string, string)","V2f GetVec2 (string)","V2f GetVec2 (string, V2f)","V3f GetVec3 (string)","V3f GetVec3 (string, V3f)","V4f GetVec4 (string)","V4f GetVec4 (string, V4f)","basic_table_core<0,classsol::basic_reference<0> > GetAllValuesStringified (ConfigMap, this_state)"}},DrawInfo={Methods={"DrawInfo ()"},Properties={"uint32_t first","uint32_t count","uint32_t firstInstance","uint32_t instanceCount","uint32_t baseVertex"}},SystemVoxelRender={},["IAdapter::Features"]={Methods={"IAdapter::Features ()"},Properties={"bool hasDeferredContextSupport","bool hasRTXSupport","uint8_t debugLevel"}},["IPipeline::Desc"]={Methods={"IPipeline::Desc ()","IPipeline::Desc (GraphicsDesc)","IPipeline::Desc (ComputeDesc)","IPipeline::Desc (RayTracingDesc)"},Properties={"Type type","GraphicsDesc pGraphicsDesc","ComputeDesc pComputeDesc","RayTracingDesc pRayTracingDesc"}},Material={Methods={"Material (string, FilePath)","bool IsValid ()","bool IsManaged ()","bool HasProperty (string)","V3f GetPropertyVec3 (string)","V4f GetPropertyVec4 (string)","void SetProperty (string, V3f)","void SetProperty (string, V4f)"}},["rttr::type"]={Methods={"RttrStringView GetName ()"}},ITexture={Methods={"Desc GetDesc ()"}},MeshData={Properties={"string file","MeshDataBuilder data","string type","shared_ptr<classae::scene::Object> object"}},DepthStencilParams={Methods={"DepthStencilParams ()"},Properties={"bool stencilTestEnable","StencilParams frontBufferStencilParams","StencilParams backBufferStencilParams","bool depthTestEnable","bool depthWriteEnable","bool depthBoundsTestEnable","Function depthCompareOp","float minDepthBounds","float maxDepthBounds"}},Resource={Methods={"bool IsValid ()","bool IsManaged ()"}},["IBuffer::Desc"]={Methods={"IBuffer::Desc ()"},Properties={"Type type","ResourceUsage usage","uint32_t usageFlags","uint64_t size"}},["IPipeline::GraphicsDesc"]={Methods={"IPipeline::GraphicsDesc ()"},Properties={"const IShader pShaderVertex","const IShader pShaderFragment","const IShader pShaderGeometry","const IShader pShaderTesselationControl","const IShader pShaderTesselationEvaluation","const IRenderTarget pRenderTarget","InputLayout inputLayout","RasterizerParams rasterizerParams","BlendParams blendParams","DepthStencilParams depthStencilParams","PrimitiveTopology topology","bool primitiveRestartEnable"}},Image={Methods={"bool IsValid ()","bool IsManaged ()"},Properties={"PixelFormat pixelFormat","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> > mipMaps","bool isCubeMap"}},ClientScene={Methods={"double GetTime ()","double GetTimeDelta ()","double GetDebugTime ()","bool Test ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","bool IsServerReady ()","bool GetAmFileLoaded ()","void SetAmFileLoaded ()","bool Save (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string, this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},Box={Methods={"Box ()","Box (uint32_t, uint32_t, uint32_t)","Box (int32_t, int32_t, int32_t, int32_t, int32_t, int32_t)"},Properties={"int32_t minX","int32_t maxX","int32_t minY","int32_t maxY","int32_t minZ","int32_t maxZ"}},StencilParams={Methods={"StencilParams ()"},Properties={"Operation failOp","Operation passOp","Operation depthFailOp","Function compareOp","uint32_t compareMask","uint32_t writeMask","uint32_t reference"}},["IPipeline::RayTracingDesc"]={Methods={"IPipeline::RayTracingDesc ()"},Properties={"uint64_t shaderCount","uint32_t maxRecursionDepth"}},Montage={},UIItem={Methods={"string GetID ()","string GetType ()","string GetLabel ()"}},RttrStringView={Methods={"const char data ()"}},Scene={Methods={"double GetTime ()","double GetTimeDelta ()","double GetDebugTime ()","bool Test ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","bool IsServerReady ()","bool GetAmFileLoaded ()","void SetAmFileLoaded ()","bool Save (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string, this_state)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},Object={Methods={"void RemoveAllNonNativeComponents (Object)","basic_object<classsol::basic_reference<0> > AddComponent (string, this_state)","basic_object<classsol::basic_reference<0> > GetComponent (uint64_t, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetComponents (this_state)","basic_object<classsol::basic_reference<0> > RemoveComponent (string, this_state)","basic_object<classsol::basic_reference<0> > GetComponentByType (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetComponentsByType (string, this_state)","shared_ptr<classae::scene::ScriptComponent> FindScriptComponentByName (string)"},Properties={"string name","string tag","uint32_t id","bool isDestroyed","uint64_t componentsCount","bool update","bool active","Transform transform","bool dontSave"}},Frustum={Methods={"Frustum ()"},Properties={"float nearPlane","float farPlane","float fovY","float aspectRatio"}},V3f={Methods={"V3f ()","V3f (float, float, float)","V3f (int32_t, int32_t, int32_t)","V3f (float)","V3f (V3f)","V3f (V3i)","V3f (V2f, float)","float __index (V3f, uint32_t)","void __newindex (V3f, uint32_t, float)","V3f __mul (V3f, V3f)","V3f __mul (V3f, quat)","V3f __mul (V3f, V3i)","V4f __mul (V3f, Matrix4f)","V3f __mul (V3f, float)","V3f __mul (float, V3f)","V3f __div (V3f, V3f)","V3f __div (V3f, V3i)","V3f __div (V3f, float)","V3f __add (V3f, V3f)","V3f __add (V3f, V3i)","V3f __sub (V3f, V3f)","V3f __sub (V3f, V3i)","V3f __unm (V3f, V3f)","bool __eq (V3f, V3f)","bool __eq (V3f, V3i)","float __len (V3f, V3f)","float Sum ()","float GetMul ()","float Prod ()","V3f GetPow (V3f, float)","float LinLen ()","float Len ()","float SqLen ()","float MaxComponent ()","float MinComponent ()","float GetMax ()","float GetMin ()","float GetMid ()","float MidComponent ()","bool IsIn (float)","int32_t GetCompIdx (float)","int32_t GetCompIdxSafe (float)","int32_t GetMinIndex ()","int32_t GetMidIndex ()","int32_t GetMaxIndex ()","V3f GetGreaterSigned (float)","V3f GetAbs ()","float GetAvg ()","V2f V2 (V3f)","V2f XY ()","V2f XZ ()","V2f YX ()","V2f YZ ()","V2f ZX ()","V2f ZY ()","V3f X0Z ()","V3f XZY ()","V2f UV (int32_t, int32_t)","V3f UVW (int32_t, int32_t, int32_t)","bool IsAnyNaN ()","V3f GetUnit ()","V3f GetUnitSafe ()","V3f SetAbs ()","float Dot (V3f, V3f)","float Dot (V3f, V3i)","V3f Cross (V3f, V3f)","V3f Cross (V3f, V3i)","V3f Lerp (V3f, V3f, float)","V3f Mix (V3f, V3f, float)","V3f Normalize ()","V3f NormalizeSafe ()","V3f GetNormalized ()","V3f GetNormalizedSafe ()","void Clamp (V3f, float, float)","V3f GetClamped (V3f, float, float)","V3f ClampRadius (float)","V3f Nonzero ()","V3f Signs ()","V3f SignsUnits ()","V3i Signsi ()","V3i SignsUnitsi32 ()","V3i GetV3i ()","void Ceil (V3f)","V3f GetCeiled (V3f)","void Floor (V3f)","V3f GetFloored (V3f)","void Round (V3f)","V3f GetRounded (V3f)","void SetLength (V3f, float)","float Length (V3f)","float Length (V3f, V3f)","V3f IsNaN (V3f)","bool IsZero (V3f)","float DistanceTo (V3f, V3f)"},Properties={"float x","float y","float z","V3f zero","V3f up","V3f right","V3f forward","V3f down","V3f left","V3f back","float length","V3f normalized"}},IRenderTarget={Methods={"Desc GetDesc ()"}},Transform={Methods={"Transform Get (string)","Transform GetChild (int32_t)","V3f LocalToWorld (V3f)","V3f WorldToLocal (V3f)","V3f LocalToWorldVec (V3f)","V3f WorldToLocalVec (V3f)"},Properties={"uint64_t childCount","V3f pos","quat rot","V3f localPos","float localScale","quat localRot","Transform parent","Transform invalid","V3f right","V3f up","V3f forward","string type","shared_ptr<classae::scene::Object> object"}},FileTexture={Methods={"FileTexture (string, FilePath)","bool IsValid ()","bool IsManaged ()","string GetPath ()","ResourceUsage GetUsage ()","void SetUsage (ResourceUsage)","Image GetImage ()"}},MontageComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","string montageId"}},EntityPath={Methods={"EntityPath (string)","bool IsValid ()","bool IsManaged ()","void AddPointPath (double, Transformation)","void AddPointPathCurrent (Transformation)","void Start (double)","void Clear ()"},Properties={"vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> > path"}},StaticVoxelDataComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","string resource","bool isLoaded"}},MeshRender={Properties={"Res<classae::renderer::Material2> material","string type","shared_ptr<classae::scene::Object> object"}},["IAdapter::Caps"]={Methods={"IAdapter::Caps ()"},Properties={"uint32_t drawingCommandsFlags","bool[41] supportedTextureFormats","bool supportsExtendedLineDirective","Limits limits"}},IAccelerationStructure={Methods={"Desc GetDesc ()"}},["ITexture::Desc"]={Methods={"ITexture::Desc ()"},Properties={"Type type","PixelFormat format","ResourceUsage usage","uint32_t usageFlags","uint32_t width","uint32_t height","uint32_t depth","uint32_t mipMapCount","uint32_t sampleCount","bool optimalTiling"}},VoxelRender={Properties={"string type","shared_ptr<classae::scene::Object> object"}},MipMapImage={Properties={"int32_t width","int32_t height","int32_t depth","uint32_t size"}},RasterizerParams={Methods={"RasterizerParams ()"},Properties={"bool rasterizerDiscardEnable","bool depthClampEnable","bool depthBiasEnable","PolygonMode polygonMode","CullMode cullMode","FrontFaceWinding winding","float lineWidth","float depthBiasConstantFactor","float depthBiasClamp","float depthBiasSlopeFactor"}},["IShader::Desc"]={Methods={"IShader::Desc ()"},Properties={"Type type"}},ScriptComponent={Methods={"bool GetSyncToClient ()","void SetSyncToClient (bool)","void SendMessage (string, basic_table_core<0,classsol::basic_reference<0> >)","void SendMessage (string, basic_table_core<0,classsol::basic_reference<0> >, int64_t)"},Properties={"string type","shared_ptr<classae::scene::Object> object","bool isValid","basic_table_core<0,classsol::basic_reference<0> > instance","string file"}},ResResource={},["IRenderTarget::Desc"]={Methods={"IRenderTarget::Desc ()"},Properties={"uint32_t width","uint32_t height","uint32_t layers","uint64_t attachmentMask"}},Component={Properties={"string type","shared_ptr<classae::scene::Object> object"}},ServerScene={Methods={"double GetTime ()","double GetTimeDelta ()","double GetDebugTime ()","bool Test ()","shared_ptr<classae::scene::Object> CreateObject ()","shared_ptr<classae::scene::Object> CloneObject (shared_ptr<classae::scene::Object>)","void DestroyObject (shared_ptr<classae::scene::Object>)","basic_object<classsol::basic_reference<0> > CreateMaterial (string, this_state)","void DebugStats ()","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByName (string, this_state)","basic_table_core<0,classsol::basic_reference<0> > GetAllObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetRootObjects (this_state)","basic_table_core<0,classsol::basic_reference<0> > GetObjectsByTag (string, this_state)","bool IsServerReady ()","bool GetAmFileLoaded ()","void SetAmFileLoaded ()","bool Save (string)","int32_t Merge (string)","void ScheduleLoad (string)","void RebuildLighting ()","shared_ptr<classae::lighting::LightingUpdate> CreateLighting (string, string)","shared_ptr<classae::scene::LuaVoxelDB> GetVoxelDB (string, this_state)","int32_t MontageCreate (shared_ptr<classae::scene::Object>)","int32_t MontageUnlink (shared_ptr<classae::scene::Object>)","shared_ptr<classae::scene::Object> MontageInstantiate (string)"},Properties={"shared_ptr<classae::lighting::LightingUpdate> lighting"}},VoxelInspectData={Properties={"float voxelSize","string texts","Vector_V3f positions","Vector_V3f colors"}},VoxelDB={Methods={"void Clear ()","void UseTemporaryLayers ()","void Flush ()","V3i FromWorld (V3f)","int32_t FromWorld (float)","V3f ToWorld (V3i)","float ToWorld (float)","bool SetUnitVoxelDim (bool)","void SetMask_deprecated (V3i, bool)","bool GetMask (V3i)","bool GetMask (double, double, double)","int32_t GetMaskNeighbours (V3i, int32_t)","int32_t GetMaskNeighbours (double, double, double, int32_t)","int32_t GetMaskNeighboursVN (V3i, int32_t)","int32_t GetMaskNeighboursVN (double, double, double, int32_t)","void ClearVoxel (V3i)","void ClearVoxel (double, double, double)","void SetColor (V3i, V3f)","void SetColor (double, double, double, V3f)","basic_object<classsol::basic_reference<0> > GetColor (V3i, this_state)","V3f GetNormalV (V3i)","V3f GetFilteredNormalV (V3i)","basic_object<classsol::basic_reference<0> > TraceRayV (V3i, V3f, float, this_state)","void PaintSphereV (V3i, int32_t, V3f)","void PaintBoxV (V3i, V3i, V3f)","void PaintBoxV (V3i, V3i, quat, V3f)","void PaintCapsuleV (V3i, V3i, int32_t, V3f)","void PaintCapsuleV (V3i, V3i, int32_t, int32_t, V3f)","void ClearSphereV (V3i, int32_t)","void ClearBoxV (V3i, V3i)","void ClearBoxV (V3i, V3i, quat)","void ClearCapsuleV (V3i, V3i, int32_t)","void ClearCapsuleV (V3i, V3i, int32_t, int32_t)","void MakeSphereV (V3i, int32_t, V3f)","void MakeBoxV (V3i, V3i, V3f)","void MakeBoxV (V3i, V3i, quat, V3f)","void MakeCapsuleV (V3i, V3i, int32_t, V3f)","void MakeCapsuleV (V3i, V3i, int32_t, int32_t, V3f)","void FillTmpLayersV (V3i, V3i, int32_t, int32_t)","basic_object<classsol::basic_reference<0> > TraceRayTmpV (V3i, V3f, float, this_state)","void PaintSphereBlendV (V3i, int32_t, V3f, float, float, float)","V3f GetNormal (V3f)","V3f GetFilteredNormal (V3f)","basic_object<classsol::basic_reference<0> > TraceRay (V3f, V3f, float, this_state)","bool CheckSphere (V3f, float)","bool CheckBox (V3f, V3f, quat)","bool CheckBox (V3f, V3f)","bool CheckCapsule (V3f, V3f, float, float)","bool CheckCapsule (V3f, V3f, float)","void PaintSphere (V3f, float)","void PaintBox (V3f, V3f, quat)","void PaintBox (V3f, V3f)","void PaintCapsule (V3f, V3f, float, float)","void PaintCapsule (V3f, V3f, float)","void ClearSphere (V3f, float)","void ClearBox (V3f, V3f, quat)","void ClearBox (V3f, V3f)","void ClearCapsule (V3f, V3f, float, float)","void ClearCapsule (V3f, V3f, float)","void MakeSphere (V3f, float)","void MakeBox (V3f, V3f, quat)","void MakeBox (V3f, V3f)","void MakeCapsule (V3f, V3f, float, float)","void MakeCapsule (V3f, V3f, float)","void SetBlend (bool)","void SetBlendParams (float, float, float)","void SetMaterial (V3f)","void FillTmpLayers (V3f, V3f, float, int32_t)","basic_object<classsol::basic_reference<0> > TraceRayTmp (V3f, V3f, float, this_state)","void InstantiateIE (V3f, quat, float)","void FreeTmpLayers (int32_t)","void ClearContent ()","bool Load (string)","void RebuildLods (bool)","bool CopyLayer (string, string)","bool ClearLayer (string)","void RemoveHiddenVoxelsC32 ()","void RemoveHiddenVoxelsN16 ()","basic_table_core<0,classsol::basic_reference<0> > GetInfo (this_state)","void CopyTo (shared_ptr<classae::scene::LuaVoxelDB>)","bool Save (string, string, int32_t)","VoxelInspectData Inspect (V3i, int32_t, int32_t, Vector_int32_t, int32_t)","string GetLayers ()"},Properties={"bool autoLightingUpdate","int32_t voxelDim"}},LightingUpdate={Properties={"RealtimeLightingInfo realtimeLighting"}},RendererContext={Properties={"uint64_t currentFrame","double deltaTime","double totalTime","V4f viewPort","string type","string capsDrawingCommandsFlags","string capsSupportedTextureFormats","bool capsSupportsExtendedLineDirective","uint32_t capsLimitConstantBufferOffsetAlignment","uint32_t capsLimitMaxConstantBlockSize","uint32_t capsLimitMaxVertexConstantBlocks","uint32_t capsLimitMaxPixelConstantBlocks","uint32_t capsLimitMaxGeometryConstantBlocks","uint32_t capsLimitMaxComputeConstantBlocks","bool capsFeatureHasDeferredContextSupport","bool capsFeatureHasRTXSupport","uint8_t capsFeatureDebugLevel","string statsTextureCount","string statsTextureSize","string statsBufferCount","string statsBufferSize","string statsAsCount","string statsAsSize","string statsShaderCount","string statsPipelineCount","uint32_t statsRenderTargetCount","uint64_t renderContextCount","bool renderDebugObjects"}},V3i={Methods={"V3i ()","V3i (int32_t, int32_t, int32_t)","V3i (V3f)","V3i (int32_t)","V3i (V3i)","int32_t __index (V3i, uint32_t)","void __newindex (V3i, uint32_t, int32_t)","V3i __mul (V3i, V3i)","V3f __mul (V3i, V3f)","V3i __mul (V3i, int32_t)","V3i __mul (int32_t, V3i)","V3i __div (V3i, V3i)","V3f __div (V3i, V3f)","V3i __div (V3i, int32_t)","V3i __add (V3i, V3i)","V3f __add (V3i, V3f)","V3i __sub (V3i, V3i)","V3f __sub (V3i, V3f)","V3i __unm (V3i, V3i)","bool __eq (V3i, V3i)","bool __eq (V3i, V3f)","float __len ()","V3i __mod (V3i, V3i)","V3i __mod (V3i, int32_t)","V3i __band (V3i, V3i)","V3i __band (V3i, int32_t)","V3i __bor (V3i, V3i)","V3i __bor (V3i, int32_t)","V3i __bxor (V3i, V3i)","V3i __bxor (V3i, int32_t)","V3i __bnot (V3i, V3i)","V3i __shl (V3i, V3i)","V3i __shl (V3i, int32_t)","V3i __shr (V3i, V3i)","V3i __shr (V3i, int32_t)","int32_t Sum ()","float Prod ()","V3f GetPow (V3i, float)","int32_t LinLen ()","float Len ()","float SqLen ()","int32_t MaxComponent ()","int32_t MinComponent ()","int32_t GetMax ()","int32_t GetMin ()","float GetMid (V3i)","int32_t MidComponent ()","bool IsIn (int32_t)","int32_t GetCompIdx (int32_t)","int32_t GetCompIdxSafe (int32_t)","int32_t GetMinIndex ()","int32_t GetMidIndex ()","int32_t GetMaxIndex ()","V3i GetGreaterSigned (int32_t)","V3i GetAbs ()","float GetAvg (V3i)","V2i V2 (V3i)","V2i XY ()","V2i XZ ()","V2i YX ()","V2i YZ ()","V2i ZX ()","V2i ZY ()","V3i X0Z ()","V3i XZY ()","V2i UV (int32_t, int32_t)","V3i UVW (int32_t, int32_t, int32_t)","int32_t GetOr ()","int32_t GetXor ()","int32_t GetAnd ()","int32_t GetMul ()","V3i GetUnit ()","V3i GetUnitSafe ()","V3i SetAbs ()","int32_t Dot (V3i, V3i)","float Dot (V3i, V3f)","V3i Cross (V3i, V3i)","V3f Cross (V3i, V3f)","V3f Lerp (V3i, V3i, int32_t)","V3f Mix (V3i, V3i, int32_t)","bool IsZero (V3i)","float Length ()","float SqrLength ()","V3f GetNormalized (V3i)","V3f GetNormalizedSafe (V3i)","void Clamp (V3i, int32_t, int32_t)","void Clamp (V3i, V3i, V3i)","V3i GetClamped (V3i, int32_t, int32_t)","V3i GetClamped (V3i, V3i, V3i)","V3i ClampRadius (float)","V3i Nonzero ()","V3i Signs ()","V3i SignsUnits ()","void Ceil (V3i)","V3i GetCeiled (V3i)","void Floor (V3i)","V3i GetFloored (V3i)","void Round (V3i)","V3i GetRounded (V3i)","float DistanceTo (V3i, V3i)","float Length (V3i)","float Length (V3i, V3i)"},Properties={"int32_t x","int32_t y","int32_t z","float length","V3f normalized","V3i zero","V3i up","V3i right","V3i forward","V3i down","V3i left","V3i back"}},SystemTransform={},IShader={Methods={"Desc GetDesc ()"}},EntityPathWaypoint={Methods={"EntityPathWaypoint ()"},Properties={"double time","V3f pos","quat rot"}},SystemMeshRender={},SystemMeshData={},Rotation={Methods={"Rotation ()","Rotation (V3f)"},Properties={"V3f angles"}},Transformation={Methods={"Transformation ()","Transformation (Rotation, V3f)"},Properties={"V3f position","Rotation rotation"}},Texture={Methods={"bool IsValid ()","bool IsManaged ()"}},ShaderFiles={Methods={"ShaderFiles (string, FilePath)","bool IsValid ()","bool IsManaged ()","string GetFiles ()","string GetFile (string)","string GetAssetsPath ()"}},["ae::graphics::Options"]={Methods={"ae::graphics::Options ()"},Properties={"uint8_t debugLevel","bool enableRTX","bool stateCache","bool forceGLStateRefresh","bool preferAsyncBufferTransfers","DepthBufferMode depthBufferMode","VSyncMode vsyncMode","uint32_t refreshRateHint"}},SamplerParams={Methods={"SamplerParams ()"},Properties={"TextureWrappingMode wrappingModeS","TextureWrappingMode wrappingModeT","TextureWrappingMode wrappingModeR","TextureFiltering filtering","float maxAnisotropy","bool compareEnable","Function compareOp"}},VoxelData={Properties={"string resource","string type","shared_ptr<classae::scene::Object> object"}},["IAdapter::ResourceStats"]={Methods={"IAdapter::ResourceStats ()"},Properties={"uint32_t[8] textureCount","uint64_t[8] textureSize","uint32_t[7] bufferCount","uint64_t[7] bufferSize","uint32_t[3] asCount","uint64_t[3] asSize","uint32_t[13] shaderCount","uint32_t[4] pipelineCount","uint32_t renderTargetCount"}},Input={Methods={"Input ()","bool KeyDown (uint16_t)","bool Key (uint16_t)","bool KeyUp (uint16_t)","bool KeyCombDown (uint16_t, uint16_t)","bool KeyCombDown (uint16_t, uint16_t, uint16_t)","bool KeyComb (uint16_t, uint16_t)","bool KeyComb (uint16_t, uint16_t, uint16_t)","bool ShiftKey ()","bool CtrlKey ()","bool AltKey ()","string GetKeyName (uint16_t)","uint16_t GetKeyCode (string)","basic_object<classsol::basic_reference<0> > GetKeysDown (this_state)","basic_object<classsol::basic_reference<0> > GetKeys (this_state)","basic_object<classsol::basic_reference<0> > GetKeysUp (this_state)","uint64_t GetKeyShortcutsPressedCount ()","string GetKeyShortcutPressed (uint64_t)","bool MouseBtnDown (uint16_t)","bool MouseBtn (uint16_t)","bool MouseBtnUp (uint16_t)","int32_t MouseWheel ()","V2f MousePos ()","V2f MousePosLast ()","V2f MouseMove ()","V2f MousePosRel ()","V2f MousePosRelLast ()","V2f MouseMoveRel ()","basic_object<classsol::basic_reference<0> > GetMouseButtonsDown (this_state)","basic_object<classsol::basic_reference<0> > GetMouseButtons (this_state)","basic_object<classsol::basic_reference<0> > GetMouseButtonsUp (this_state)","bool GetRelativeMouseMode ()","void SetRelativeMouseMode (bool)","float GesturePinch ()","float GestureRotate ()","V2f GestureMove ()","int16_t NumFingers ()","bool FingerDown (int64_t)","basic_object<classsol::basic_reference<0> > Fingers (this_state)","bool FingerUp (int64_t)","V2f FingerPos (int16_t)","bool VrBtnDown (uint64_t, ControllerButtons)","float VrHandTrigger (uint64_t)","float VrIndexTrigger (uint64_t)","V2f VrThumbStick (uint64_t)","string GetJoyBtnName (uint16_t)","string GetJoyAxisName (uint16_t)","uint16_t GetJoyBtnByName (string)","uint16_t GetJoyAxisByName (string)","int64_t GetActiveJoypadID ()","bool JoyBtnDown (uint16_t, int64_t)","bool JoyBtn (uint16_t, int64_t)","bool JoyBtnUp (uint16_t, int64_t)","float JoyAxis (uint16_t, int64_t)","basic_table_core<0,classsol::basic_reference<0> > GetInputEvents (Input, this_state)"}},V4f={Methods={"V4f ()","V4f (float, float, float, float)","V4f (int32_t, int32_t, int32_t, int32_t)","V4f (float)","V4f (V4f)","V4f (V2f, float, float)","V4f (V3f, float)","float __index (V4f, uint32_t)","void __newindex (V4f, uint32_t, float)","V4f __mul (V4f, V4f)","V4f __mul (V4f, quat)","V4f __mul (V4f, Matrix4f)","V4f __mul (V4f, float)","V4f __mul (float, V4f)","V4f __div (V4f, V4f)","V4f __div (V4f, float)","V4f __add (V4f, V4f)","V4f __sub (V4f, V4f)","V4f __unm (V4f, V4f)","bool __eq (V4f, V4f)","float __len (V4f, V4f)","float Sum ()","float GetMul ()","float Prod ()","float LinLen ()","float Len ()","float SqLen ()","float MaxComponent ()","float MinComponent ()","int32_t GetMinIndex ()","int32_t GetMaxIndex ()","V4f GetAbs ()","V2f V2 (V4f)","V3f V3 (V4f)","V2f XY ()","V2f XZ ()","V2f YZ ()","V3f YZW ()","V3f ZYX ()","V3f ZWX ()","bool IsAnyNaN ()","V4f GetUnit ()","V4f GetUnitSafe ()","V4f SetAbs ()","float Dot (V4f, V4f)","V4f Lerp (V4f, V4f, float)","V4f Mix (V4f, V4f, float)","V4f Normalize ()","V4f NormalizeSafe ()","V4f GetNormalized ()","V4f GetNormalizedSafe ()","void Clamp (V4f, float, float)","V4f GetClamped (V4f, float, float)","V4f Signs ()","void Ceil (V4f)","V4f GetCeiled (V4f)","void Floor (V4f)","V4f GetFloored (V4f)","void Round (V4f)","V4f GetRounded (V4f)","void SetLength (V4f, float)","float Length (V4f)","float Length (V4f, V4f)","V4f IsNaN (V4f)","bool IsZero (V4f)","float DistanceTo (V4f, V4f)"},Properties={"float x","float y","float z","float w","V4f zero","float length","V4f normalized"}},Object3D={Methods={"Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (V3f)","V3f GetForward (Object3D)","V3f GetRight (Object3D)","V3f GetUp (Object3D)","Matrix4f GetLtw (Object3D)","V3f GetPosition (Object3D)","void SetPosition (V3f)"},Properties={"Transformation transformation"}},StreamComponent={Methods={"StreamComponent ()"},Properties={"VertexComponent usage","VertexComponentFormat format","uint32_t offset","bool normalizeIntegerTypes"}},SkyboxComponent={Properties={"string type","shared_ptr<classae::scene::Object> object","float cloudScale","float cloudOffset","float cloudSlope","float sunAzimuth","float sunAltitude","V3f rayleighCoeff","float mieCoeff"}},["IPipeline::ComputeDesc"]={Methods={"IPipeline::ComputeDesc ()"},Properties={"const IShader pShader"}},IPipeline={Methods={"Desc GetDesc ()"}},IAdapter={Methods={"Type GetType ()","Caps GetCaps ()","Features GetFeatures ()","ResourceStats GetResourceStats ()"}},GraphicsOptions={Methods={"GraphicsOptions ()"},Properties={"Options globalOptions","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,structae::graphics::Options,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,structae::graphics::Options>> > platformOptions"}},V2i={Methods={"V2i ()","V2i (int32_t, int32_t)","V2i (int32_t)","V2i (V2i)","int32_t __index (V2i, uint32_t)","void __newindex (V2i, uint32_t, int32_t)","V2i __mul (V2i, V2i)","V2f __mul (V2i, V2f)","V2i __mul (V2i, int32_t)","V2i __mul (int32_t, V2i)","V2i __div (V2i, V2i)","V2f __div (V2i, V2f)","V2i __div (V2i, int32_t)","V2i __add (V2i, V2i)","V2f __add (V2i, V2f)","V2i __sub (V2i, V2i)","V2f __sub (V2i, V2f)","V2i __unm (V2i, V2i)","bool __eq (V2i, V2i)","bool __eq (V2i, V2f)","float __len (V2i, V2i)","V2i __mod (V2i, V2i)","V2i __mod (V2i, int32_t)","V2i __band (V2i, V2i)","V2i __band (V2i, int32_t)","V2i __bor (V2i, V2i)","V2i __bor (V2i, int32_t)","V2i __bxor (V2i, V2i)","V2i __bxor (V2i, int32_t)","V2i __bnot (V2i, V2i)","V2i __shl (V2i, V2i)","V2i __shl (V2i, int32_t)","V2i __shr (V2i, V2i)","V2i __shr (V2i, int32_t)","int32_t Sum ()","int32_t Sub ()","int32_t Diff ()","int32_t Prod ()","int32_t LinLen ()","float Len (V2i)","int32_t SqLen ()","int32_t MaxComponent ()","int32_t MinComponent ()","int32_t GetMax ()","int32_t GetMin ()","bool IsWithin (int32_t)","bool IsIn (int32_t)","void Insert (int32_t)","V2i GetAbs ()","float GetAvg (V2i)","int32_t GetOr ()","int32_t GetXor ()","int32_t GetAnd ()","V2i XY ()","V2i YX ()","V2i GetUnit ()","V2i GetUnitSafe ()","V2i SetAbs ()","int32_t Dot (V2i, V2i)","float Dot (V2i, V2f)","V3i Cross (V2i, V2i)","V3f Cross (V2i, V2f)","V2f Lerp (V2i, V2i, int32_t)","V2f Mix (V2i, V2i, int32_t)","bool IsZero (V2i)","float Length (V2i)","float SqrLength (V2i)","Angle GetAngle (V2i)","float GetAngleRad (V2i)","V2f GetNormalized (V2i)","V2f GetNormalizedTo (V2i, float)","void Clamp (V2i, int32_t, int32_t)","void Clamp (V2i, V2i, V2i)","V2i GetClamped (V2i, int32_t, int32_t)","V2i GetClamped (V2i, V2i, V2i)","void Ceil (V2i)","V2i GetCeiled (V2i)","void Floor (V2i)","V2i GetFloored (V2i)","void Round (V2i)","V2i GetRounded (V2i)","float DistanceTo (V2i, V2i)","V2f GetMorphedTo (V2i, V2i, float)","void RotateRight90 ()","V2f GetRotatedRight (V2i, float)","V2f GetRotatedRight (V2i, Angle)","V2i GetRotatedRight90 ()","void RotateLeft90 ()","V2f GetRotatedLeft (V2i, float)","V2f GetRotatedLeft (V2i, Angle)","V2i GetRotatedLeft90 ()","void Rotate90 ()","V2f GetRotated (V2i, float)","V2f GetRotated (V2i, Angle)","V2i GetRotated90 ()"},Properties={"int32_t x","int32_t y","float length","V2i zero","V2f normalized"}},NativeComponent={Properties={"string type","Object object"}},SystemVoxelData={},V2f={Methods={"V2f ()","V2f (float, float)","V2f (float)","V2f (V2f)","V2f (V2i)","float __index (V2f, uint32_t)","void __newindex (V2f, uint32_t, float)","V2f __mul (V2f, V2f)","V2f __mul (V2f, V2i)","V2f __mul (V2f, float)","V2f __mul (float, V2f)","V2f __div (V2f, V2f)","V2f __div (V2f, V2i)","V2f __div (V2f, float)","V2f __add (V2f, V2f)","V2f __add (V2f, V2i)","V2f __sub (V2f, V2f)","V2f __sub (V2f, V2i)","V2f __unm (V2f, V2f)","bool __eq (V2f, V2f)","bool __eq (V2f, V2i)","float __len (V2f, V2f)","float Sum ()","float Sub ()","float Diff ()","float Prod ()","float LinLen ()","float Len ()","float SqLen ()","float MaxComponent ()","float MinComponent ()","float GetMax ()","float GetMin ()","bool IsWithin (float)","bool IsIn (float)","void Insert (float)","V2f GetAbs ()","float GetAvg ()","V2f XY ()","V2f YX ()","bool IsAnyNaN ()","V2f GetUnit ()","V2f GetUnitSafe ()","V2f SetAbs ()","float Dot (V2f, V2f)","float Dot (V2f, V2i)","V3f Cross (V2f, V2f)","V3f Cross (V2f, V2i)","V2f Lerp (V2f, V2f, float)","V2f Mix (V2f, V2f, float)","bool IsZero (V2f)","float Length ()","float SqrLength ()","Angle GetAngle ()","float GetAngleRad ()","void Normalize ()","void NormalizeTo (float)","V2f GetNormalized ()","V2f GetNormalizedTo (float)","void Clamp (V2f, float, float)","void Clamp (V2f, V2f, V2f)","V2f GetClamped (V2f, float, float)","V2f GetClamped (V2f, V2f, V2f)","void Ceil (V2f)","V2f GetCeiled (V2f)","void Floor (V2f)","V2f GetFloored (V2f)","void Round ()","V2f GetRounded (V2f)","void SetLength (V2f, float)","float DistanceTo (V2f, V2f)","void MorphTo (V2f, float)","V2f GetMorphedTo (V2f, float)","void RotateRight90 ()","void RotateRight (float)","void RotateRight (Angle)","V2f GetRotatedRight (float)","V2f GetRotatedRight (Angle)","V2f GetRotatedRight90 ()","void RotateLeft90 ()","void RotateLeft (float)","void RotateLeft (Angle)","V2f GetRotatedLeft (float)","V2f GetRotatedLeft (Angle)","V2f GetRotatedLeft90 ()","void Rotate90 ()","void Rotate (float)","void Rotate (Angle)","V2f GetRotated (float)","V2f GetRotated (Angle)","V2f GetRotated90 ()"},Properties={"float x","float y","float length","V2f zero","V2f normalized"}},Rect={Methods={"Rect ()","Rect (int32_t, int32_t, int32_t, int32_t)"},Properties={"int32_t x","int32_t y","int32_t width","int32_t height"}},Angle={Methods={"Angle ()","Angle (float, float)","Angle (float)","bool __eq (Angle, Angle)","void Set (float)","float Get ()"},Properties={"float sine","float cosine"}},["IAdapter::Limits"]={Methods={"IAdapter::Limits ()"},Properties={"uint32_t constantBufferOffsetAlignment","uint32_t maxConstantBlockSize","uint32_t maxVertexConstantBlocks","uint32_t maxPixelConstantBlocks","uint32_t maxGeometryConstantBlocks","uint32_t maxComputeConstantBlocks"}},["IAccelerationStructure::Desc"]={Methods={"IAccelerationStructure::Desc ()"},Properties={"Type type","uint32_t usageFlags","uint64_t size"}},Camera={Methods={"Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (V3f)","V3f GetForward (Object3D)","V3f GetRight (Object3D)","V3f GetUp (Object3D)","Matrix4f GetLtw (Object3D)","V3f GetPosition (Object3D)","void SetPosition (V3f)","Transformation GetTransformation ()","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (V3f)","V3f GetForward ()","V3f GetRight ()","V3f GetUp ()","Matrix4f GetLtw ()","V3f GetPosition ()","void SetPosition (V3f)","Frustum GetFrustum ()","void SetFrustum (Frustum)","Matrix4f GetProjection ()","V3f GetRay (V2f)","void SetFovY (float)","float GetFovY ()"},Properties={"Transformation transformation","Transformation transform"}},CommandLine={Methods={"bool HasOption (string)","float GetOptionFloat (string, float)","int64_t GetOptionInt (string, int64_t)","string GetOption (string, string)","V3f GetOptionVec3 (string, V3f)"}},BlendParams={Methods={"BlendParams ()"},Properties={"bool blendEnable","ColorWriteMask colorWriteMask","BlendFactor srcColorBlendFactor","BlendFactor dstColorBlendFactor","BlendOp colorBlendOp","BlendFactor srcAlphaBlendFactor","BlendFactor dstAlphaBlendFactor","BlendOp alphaBlendOp","float[4] blendConstants"}}},Pointers={"AssetManager","Camera","CommandLine","ComputeDesc","ConfigMap","GraphicsDesc","Image","Object","RayTracingDesc","UIItem","const IRenderTarget","const IShader","const char","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >"},Enums={VertexComponentFormat={[1]="Int8",[2]="Int8Vec2",[3]="Int8Vec3",[4]="Int8Vec4",[5]="Int16",[6]="Int16Vec2",[7]="Int16Vec3",[8]="Int16Vec4",[9]="Int32",[10]="Int32Vec2",[11]="Int32Vec3",[12]="Int32Vec4",[13]="UInt8",[14]="UInt8Vec2",[15]="UInt8Vec3",[16]="UInt8Vec4",[17]="UInt16",[18]="UInt16Vec2",[19]="UInt16Vec3",[20]="UInt16Vec4",[21]="UInt32",[22]="UInt32Vec2",[23]="UInt32Vec3",[24]="UInt32Vec4",[25]="Float",[26]="FloatVec2",[27]="FloatVec3",[28]="FloatVec4",[29]="FloatMat2x2",[30]="FloatMat2x3",[31]="FloatMat2x4",[32]="FloatMat3x2",[33]="FloatMat3x3",[34]="FloatMat3x4",[35]="FloatMat4x2",[36]="FloatMat4x3",[37]="FloatMat4x4",[38]="Double",[39]="DoubleVec2",[40]="DoubleVec3",[41]="DoubleVec4",[42]="DoubleMat2x2",[43]="DoubleMat2x3",[44]="DoubleMat2x4",[45]="DoubleMat3x2",[46]="DoubleMat3x3",[47]="DoubleMat3x4",[48]="DoubleMat4x2",[49]="DoubleMat4x3",[50]="DoubleMat4x4",[0]="Unknown"},VSyncMode={[1]="Enabled",[2]="Disabled",[3]="Adaptive",[0]="Default"},ResourceUsage={[1]="Dynamic",[2]="Stream",[0]="Static"},UsageFlagBits={[1]="UsageTransferSrcBIT",[2]="UsageTransferDstBIT",[4]="UsageSampledBIT",[8]="UsageStorageBIT",[512]="UsageFragmentDensityMapBIT",[256]="UsageShadingRateImageBIT",[128]="UsageInputAttachmentBIT",[16]="UsageColorAttachmentBIT",[64]="UsageTransientAttachmentBIT",[32]="UsageDepthStencilAttachmentBIT"},PixelFormat={[1]="RGB888",[2]="RGBA8888",[3]="RGB565",[4]="RGBA5551",[5]="RGBA4444",[6]="BGR888",[7]="BGRA8888",[8]="Depth16",[9]="Depth24",[10]="Depth32",[11]="Depth24Stencil8",[12]="A8",[13]="LA88",[14]="R32f",[15]="RGB32f",[16]="RGBA32f",[17]="R16f",[18]="RGB16f",[19]="RGBA16f",[20]="DXT1",[21]="DXT1_with_ALPHA",[22]="DXT3",[23]="DXT5",[24]="ATC_RGB",[25]="ATC_RGBEA",[26]="ATC_RGBIA",[27]="ETC_RGB",[28]="ETC2_RGB",[29]="ETC2_RGBA_PUNCHTHROUGH_ALPHA",[30]="ETC2_RGBA",[31]="PVRTC4_RGB",[32]="PVRTC2_RGB",[33]="PVRTC4_RGBA",[34]="PVRTC2_RGBA",[35]="Int8",[36]="Int16",[37]="Int32",[38]="UInt8",[39]="UInt16",[40]="UInt32",[0]="Unknown"},LuaErrorType={[1]="DoFile",[2]="Runtime",[3]="UIAction",[0]="None"},CpuArch={[1]="X86",[2]="X86_64",[3]="Arm",[4]="Arm64",[5]="Wasm",[0]="Unknown"},PrimitiveTopology={[1]="LineStrip",[2]="Lines",[3]="TriangleStrip",[4]="TriangleFan",[5]="Triangles",[0]="Points"},Type={[1]="Texture1D",[2]="Texture1DArray",[3]="Texture2D",[4]="Texture2DArray",[5]="Texture3D",[6]="TextureCube",[7]="TextureCubeArray",[0]="Unknown"},AttachmentFlags={[8]="Color0",[2]="Depth",[4]="DepthAndStencil",[64]="Color3",[32]="Color2",[16]="Color1"},SharePermission={"View"},TextureWrappingMode={[1]="Repeat",[2]="MirroredRepeat",[0]="ClampToEdge"},CullMode={[1]="Front",[2]="Back",[3]="FrontAndBack",[0]="None"},Operation={[1]="Zero",[2]="Replace",[3]="Increment",[4]="IncrementWrap",[5]="Decrement",[6]="DecrementWrap",[7]="Invert",[0]="Keep"},DrawingCommandsFlags={"BaseVertex","BaseInstance"},BlendFactor={[1]="One",[2]="SrcColor",[3]="OneMinusSrcColor",[4]="DstColor",[5]="OneMinusDstColor",[6]="SrcAlpha",[7]="OneMinusSrcAlpha",[8]="DstAlpha",[9]="OneMinusDstAlpha",[10]="ConstantColor",[11]="OneMinusConstantColor",[12]="ConstantAlpha",[13]="OneMinusConstantAlpha",[14]="SrcAlphaSaturate",[15]="Src1Color",[16]="OneMinusSrc1Color",[17]="Src1Alpha",[18]="OneMinusSrc1Alpha",[0]="Zero"},DepthBufferMode={[1]="DepthOnly",[2]="DepthAndStencil",[0]="None"},BlendOp={[1]="Subtract",[2]="ReverseSubtract",[3]="Min",[4]="Max",[0]="Add"},ShaderResourceType={[1]="Bool",[2]="BoolVec2",[3]="BoolVec3",[4]="BoolVec4",[5]="Int",[6]="IntVec2",[7]="IntVec3",[8]="IntVec4",[9]="UInt",[10]="UIntVec2",[11]="UIntVec3",[12]="UIntVec4",[13]="Float",[14]="FloatVec2",[15]="FloatVec3",[16]="FloatVec4",[17]="FloatMat2x2",[18]="FloatMat2x3",[19]="FloatMat2x4",[20]="FloatMat3x2",[21]="FloatMat3x3",[22]="FloatMat3x4",[23]="FloatMat4x2",[24]="FloatMat4x3",[25]="FloatMat4x4",[26]="Double",[27]="DoubleVec2",[28]="DoubleVec3",[29]="DoubleVec4",[30]="DoubleMat2x2",[31]="DoubleMat2x3",[32]="DoubleMat2x4",[33]="DoubleMat3x2",[34]="DoubleMat3x3",[35]="DoubleMat3x4",[36]="DoubleMat4x2",[37]="DoubleMat4x3",[38]="DoubleMat4x4",[39]="Image",[40]="Texture",[41]="Buffer",[42]="AccelerationStructure",[0]="Unknown"},VertexComponent={[1]="Index",[2]="Position0",[3]="Position1",[4]="Position2",[5]="Position3",[6]="TexCoord0",[7]="TexCoord1",[8]="TexCoord2",[9]="TexCoord3",[10]="TexCoord4",[11]="Color0",[12]="Color1",[13]="Index0",[14]="Index1",[15]="Normal0",[16]="Normal1",[17]="Tangent",[18]="Bitangent",[19]="Data0",[20]="Data1",[21]="Data2",[22]="Data3",[23]="Data4",[0]="Unknown"},System={[1]="Windows",[2]="Linux",[3]="WebBrowser",[4]="MacOS",[5]="iOS",[6]="Android",[0]="Unknown"},FrontFaceWinding={[1]="CounterClockwise",[0]="Clockwise"},TextureFiltering={[1]="Linear",[2]="Bilinear",[3]="Trilinear",[4]="Anisotropic",[0]="None"},Function={[1]="Less",[2]="Equal",[3]="Lequl",[4]="Greater",[5]="Notequal",[6]="Gequal",[7]="Always",[0]="Never"},PolygonMode={[1]="Line",[2]="Point",[0]="Fill"},UpdateFrequency={[1]="Frame",[2]="ObjectFrame",[3]="ObjectDraw",[0]="Once"}}};return _;end