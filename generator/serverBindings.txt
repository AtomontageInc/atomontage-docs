do local _={Classes={EntityPathWaypoint={Methods={"EntityPathWaypoint ()","EntityPathWaypoint ()"},Properties={"double time","vec3 pos","quat rot"}},["IPipeline::ComputeDesc"]={Methods={"IPipeline::ComputeDesc ()","IPipeline::ComputeDesc ()"},Properties={"const IShader pShader"}},UIItem={Methods={"UIItem ()","UIItem (string)","string GetID ()","vector<classae::core::UIItem,classstd::allocator<classae::core::UIItem> > GetItems ()","bool IsGrid ()","int64_t GetGridRows ()","int64_t GetGridCols ()","vector<classae::core::UIItem,classstd::allocator<classae::core::UIItem> > GetGridItems ()","int64_t PrepareGridItems ()","bool IsTemplating ()","void PrepareTemplatedItems (UIItem)","basic_table_core<0,classsol::basic_reference<0> > GetLuaItem (this_state)"}},V3i={Methods={"V3i ()","V3i (int32_t, int32_t, int32_t)","V3i (int32_t)","V3i ()","V3i (structAsObject)","V3i (structAsRawPointer)","V3i ()","V3i (structAsObject)","V3i (structAsRawPointer)","V3i ()","V3i (structAsObject)","V3i (structAsRawPointer)","V3i __mul (V3i, int32_t)","V3i __mul (int32_t, V3i)","V3i __mul (V3i, V3i)","V3i __div (V3i, int32_t)","V3i __div (V3i, V3i)","V3i __add (V3i, V3i)","V3i __sub (V3i, V3i)","V3i __unm (V3i, V3i)"},Properties={"int32_t x","int32_t y","int32_t z"}},ClientConnectionInfo={Methods={"ClientConnectionInfo ()","ClientConnectionInfo ()"},Properties={"string networkState","uint64_t ID","string name","string IP","uint16_t port","string streamingVersion"}},UIClientContext={Methods={"string UIItemUpdate (uint32_t, UIItem, basic_object<classsol::basic_reference<0> >)","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64_t)","string GetUIActionType (uint64_t)","void OnLuaLog ()","bool IsServer ()","bool IsClient ()","void OpenZeroBraneStudio (string)","float GetFPS ()","uint32_t GetScriptsVersion ()","float GetLogValue (string)","void SetLogValue (string, float)","Vector_float GetLogValueForPlot (string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","V2i GetVideoRange ()","int32_t GetCurrentFrame ()","void SetCurrentFrame (int32_t)","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> > GetVisibleWindows ()","bool IsContainerEnabledAndVisible (UIItem)","void LuaStartDebugger ()","void LuaEnableDebugging (bool)"}},["IPipeline::GraphicsDesc"]={Methods={"IPipeline::GraphicsDesc ()","IPipeline::GraphicsDesc ()"},Properties={"const IShader pShaderVertex","const IShader pShaderFragment","const IShader pShaderGeometry","const IShader pShaderTesselationControl","const IShader pShaderTesselationEvaluation","const IRenderTarget pRenderTarget","InputLayout inputLayout","RasterizerParams rasterizerParams","BlendParams blendParams","DepthStencilParams depthStencilParams","PrimitiveTopology topology","bool primitiveRestartEnable"}},Studio={Methods={"void Close ()","float GetFPS ()","double GetDeltaTime ()","double GetTotalTime ()","Camera GetMainCamera ()","int32_t GetCameraControlStyle ()","void SetCameraControlStyle (int32_t)","bool GetCameraInvert ()","void SetCameraInvert (bool)","int32_t GetViewFrame ()","void SetViewFrame (int32_t)","void Log (string, string)","string GetEULA ()","vec2 GetViewportSize ()","void ReloadLua ()","bool GetSkyBox ()","void SetSkyBox (bool)","vec4 GetBGColor ()","void SetBGColor (vec4)","void SaveEntityPath ()","void ToggleChannelRendering ()","AssetManager GetResourceManScene ()","AssetManager GetResourceManUI ()","AssetManager GetResourceManSettings ()","bool GetVREnabled ()","void SetVREnabled (bool, string)","void ToggleVREnabled (string)"},Properties={"RendererContext renderer","vec2 rendererViewportScale","string commandLine","bool inDevMod","string platform","string sysInfo"}},UIServer={Methods={"basic_table_core<0,classsol::basic_reference<0> > GetClients (this_state)","void SendMessages (int64_t, basic_table_core<0,classsol::basic_reference<0> >)","basic_table_core<0,classsol::basic_reference<0> > ReceiveMessages (this_state)","uint32_t GetScriptsVersion ()","void ResendScripts ()","bool ReloadScripts ()","Vector_uint64_t GetClientIDs ()","Vector_uint64_t GetVoxelClientIDs (UIServer)","AmStreamingStats GetVoxelStreamStats (UIServer, int64_t)","ServerConnectionInfo GetServerConnectionInfo ()","unordered_map<unsigned__int64,classae::studio::ConnectionInfo,structstd::hash<unsigned__int64>,structstd::equal_to<unsigned__int64>,classstd::allocator<structstd::pair<unsigned__int64const,classae::studio::ConnectionInfo>> > GetConnectionInfos ()","NetworkStat GetNetworkStat ()","unordered_map<unsigned__int64,classae::studio::NetworkStat,structstd::hash<unsigned__int64>,structstd::equal_to<unsigned__int64>,classstd::allocator<structstd::pair<unsigned__int64const,classae::studio::NetworkStat>> > GetNetworkStats ()","void Log (uint32_t, string, string)","void Log (string)","string GetAppCommandLine (UIServer)","void OnLuaLog ()"}},IAccelerationStructure={Methods={"Desc GetDesc ()"}},Mat4={Methods={"Mat4 ()","Mat4 (Mat4)","Mat4 ()"}},["IShader::Desc"]={Methods={"IShader::Desc ()","IShader::Desc ()"},Properties={"Type type"}},["IRenderTarget::Desc"]={Methods={"IRenderTarget::Desc ()","IRenderTarget::Desc ()"},Properties={"uint32_t width","uint32_t height","uint32_t layers","uint64_t attachmentMask"}},DrawRenderData={Methods={"DrawRenderData ()","DrawRenderData ()"},Properties={"uint32_t first","uint32_t count","uint32_t instanceCount","uint32_t baseVertex","uint32_t baseInstance"}},ViewPortParams={Methods={"ViewPortParams ()","ViewPortParams ()"},Properties={"Rect viewport","bool scissorEnable","Rect scissor"}},vec2={Methods={"vec2 ()","vec2 (float, float)","vec2 (float)","vec2 ()","vec2 (structAsObject)","vec2 (structAsRawPointer)","vec2 ()","vec2 (structAsObject)","vec2 (structAsRawPointer)","vec2 __mul (vec2, float)","vec2 __mul (float, vec2)","vec2 __mul (vec2, vec2)","vec2 __div (vec2, float)","vec2 __div (vec2, vec2)","vec2 __add (vec2, vec2)","vec2 __sub (vec2, vec2)","vec2 __unm (vec2, vec2)","float Dot (vec2, vec2)","bool IsZero (vec2)","float Length ()","float SqrLength ()","Angle GetAngle ()","float GetAngleRad ()","void Normalize ()","void NormalizeTo (float)","vec2 GetNormalized ()","vec2 GetNormalizedTo (float)","void MorphTo (vec2, float)","vec2 GetMorphedTo (vec2, float)","void RotateRight90 ()","void RotateRight (Angle)","void RotateRight (float)","vec2 GetRotatedRight (Angle)","vec2 GetRotatedRight (float)","vec2 GetRotatedRight90 ()","void RotateLeft90 ()","void RotateLeft (Angle)","void RotateLeft (float)","vec2 GetRotatedLeft (Angle)","vec2 GetRotatedLeft (float)","vec2 GetRotatedLeft90 ()","void Rotate90 ()","void Rotate (Angle)","void Rotate (float)","vec2 GetRotated (Angle)","vec2 GetRotated (float)","vec2 GetRotated90 ()"},Properties={"float x","float y"}},Object3D={Methods={"Object3D (string)","Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (vec3)","vec3 GetForward (Object3D)","vec3 GetRight (Object3D)","vec3 GetUp (Object3D)","Mat4 GetLtw (Object3D)","vec3 GetPosition (Object3D)","void SetPosition (vec3)"},Properties={"Transformation transformation"}},IBuffer={Methods={"Desc GetDesc ()"}},RttrStringView={Methods={"RttrStringView ()","RttrStringView (string)","const char data ()"}},ColorWriteMask={Methods={"ColorWriteMask ()","ColorWriteMask ()"},Properties={"bool r","bool g","bool b","bool a"}},RendererContext={Methods={"RendererContext ()"},Properties={"uint64_t currentFrame","double deltaTime","double totalTime","vec4 viewPort","string type","string capsDrawingCommandsFlags","string capsSupportedTextureFormats","bool capsSupportsExtendedLineDirective","uint32_t capsLimitConstantBufferOffsetAlignment","uint32_t capsLimitMaxConstantBlockSize","uint32_t capsLimitMaxVertexConstantBlocks","uint32_t capsLimitMaxPixelConstantBlocks","uint32_t capsLimitMaxGeometryConstantBlocks","uint32_t capsLimitMaxComputeConstantBlocks","bool capsFeatureHasDeferredContextSupport","bool capsFeatureHasRTXSupport","uint8_t capsFeatureDebugLevel","string statsTextureCount","string statsTextureSize","string statsBufferCount","string statsBufferSize","string statsAsCount","string statsAsSize","string statsShaderCount","string statsPipelineCount","uint32_t statsRenderTargetCount","uint64_t renderContextCount","bool renderDebugObjects"}},["IPipeline::RayTracingDesc"]={Methods={"IPipeline::RayTracingDesc ()","IPipeline::RayTracingDesc ()"},Properties={"uint64_t shaderCount","uint32_t maxRecursionDepth"}},Camera={Methods={"Camera (string)","Transformation GetTransformation (Object3D)","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (vec3)","vec3 GetForward (Object3D)","vec3 GetRight (Object3D)","vec3 GetUp (Object3D)","Mat4 GetLtw (Object3D)","vec3 GetPosition (Object3D)","void SetPosition (vec3)","Transformation GetTransformation ()","void SetTransformation (Transformation)","void MoveForward (float)","void MoveRight (float)","void MoveUp (float)","void Rotate (vec3)","vec3 GetForward ()","vec3 GetRight ()","vec3 GetUp ()","Mat4 GetLtw ()","vec3 GetPosition ()","void SetPosition (vec3)","Frustum GetFrustum ()","void SetFrustum (Frustum)","Mat4 GetProjection ()","vec3 GetRay (vec2)","void SetFovY (float)","float GetFovY ()"},Properties={"Transformation transformation","Transformation transform"}},DepthStencilParams={Methods={"DepthStencilParams ()","DepthStencilParams ()"},Properties={"bool stencilTestEnable","StencilParams frontBufferStencilParams","StencilParams backBufferStencilParams","bool depthTestEnable","bool depthWriteEnable","bool depthBoundsTestEnable","Function depthCompareOp","float minDepthBounds","float maxDepthBounds"}},AmStreamingStatsStatPerInterval={Methods={"AmStreamingStatsStatPerInterval ()","AmStreamingStatsSlot GetStatsByTimestamp (int64_t)"}},Image={Methods={"Image (string)","bool IsValid ()","bool IsManaged ()"},Properties={"PixelFormat pixelFormat","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> > mipMaps","bool isCubeMap"}},Transformation={Methods={"Transformation ()","Transformation (Rotation, vec3)","Transformation ()","Transformation (structAsObject)","Transformation ()","Transformation (structAsObject)","Transformation ()","Transformation ()","Transformation (structAsObject)"},Properties={"vec3 position","Rotation rotation"}},ITexture={Methods={"Desc GetDesc ()"}},["IAdapter::Features"]={Methods={"IAdapter::Features ()","IAdapter::Features ()"},Properties={"bool hasDeferredContextSupport","bool hasRTXSupport","uint8_t debugLevel"}},Rotation={Methods={"Rotation ()","Rotation (vec3)","Rotation ()","Rotation ()","Rotation ()","Rotation ()"},Properties={"vec3 angles"}},IAdapter={Methods={"Type GetType ()","Caps GetCaps ()","Features GetFeatures ()","ResourceStats GetResourceStats ()"}},IPipeline={Methods={"Desc GetDesc ()"}},IShader={Methods={"Desc GetDesc ()"}},vec4={Methods={"vec4 ()","vec4 (float, float, float, float)","vec4 (int32_t, int32_t, int32_t, int32_t)","vec4 (float)","vec4 ()","vec4 ()","vec4 __mul (Mat4, vec4)","vec4 __mul (vec4, float)","vec4 __mul (float, vec4)","vec4 __mul (vec4, vec4)","vec4 __div (vec4, float)","vec4 __div (vec4, vec4)","vec4 __add (vec4, vec4)","vec4 __sub (vec4, vec4)","vec4 __unm (vec4, vec4)"},Properties={"float x","float y","float z","float w"}},RasterizerParams={Methods={"RasterizerParams ()","RasterizerParams ()"},Properties={"bool rasterizerDiscardEnable","bool depthClampEnable","bool depthBiasEnable","PolygonMode polygonMode","CullMode cullMode","FrontFaceWinding winding","float lineWidth","float depthBiasConstantFactor","float depthBiasClamp","float depthBiasSlopeFactor"}},Resource={Methods={"bool IsValid ()","bool IsManaged ()"}},ConnectionInfo={Methods={"ConnectionInfo ()"},Properties={"ClientConnectionInfo client","ServerConnectionInfo server"}},AssetManager={Methods={"unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> > GetAssets (AssetManager)","ResResource Get (string)","bool AddAsset (string, string)","bool AddAsset (type, string)","type GetResourceType (ResResource)","bool IsAssetType (type)","unordered_set<classrttr::type,structstd::hash<classrttr::type>,structstd::equal_to<classrttr::type>,classstd::allocator<classrttr::type> > GetAssetTypes ()","string GetAssetsPath (AssetManager)","string GetFilePath (AssetManager)"},Properties={"reference_wrapper<classstd::unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>>> > assets"}},AmStreamingStatsStatPerFrame={Methods={"AmStreamingStatsStatPerFrame ()","AmStreamingStatsSlot GetStatsByFrameIdx (int64_t)"}},BlendParams={Methods={"BlendParams ()","BlendParams ()"},Properties={"bool blendEnable","ColorWriteMask colorWriteMask","BlendFactor srcColorBlendFactor","BlendFactor dstColorBlendFactor","BlendOp colorBlendOp","BlendFactor srcAlphaBlendFactor","BlendFactor dstAlphaBlendFactor","BlendOp alphaBlendOp","float[4] blendConstants"}},EntityPath={Methods={"EntityPath (string)","EntityPath (string)","bool IsValid ()","bool IsManaged ()","void AddPointPath (double, Transformation)","void AddPointPathCurrent (Transformation)","void Start (double)","void Clear ()"},Properties={"vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> > path"}},MipMapImage={Methods={"MipMapImage ()"},Properties={"int32_t width","int32_t height","int32_t depth","uint32_t size"}},StencilParams={Methods={"StencilParams ()","StencilParams ()"},Properties={"Operation failOp","Operation passOp","Operation depthFailOp","Function compareOp","uint32_t compareMask","uint32_t writeMask","uint32_t reference"}},vec3={Methods={"vec3 ()","vec3 (float, float, float)","vec3 (int32_t, int32_t, int32_t)","vec3 (float)","vec3 ()","vec3 ()","vec4 __mul (Mat4, vec3)","vec3 __mul (vec3, float)","vec3 __mul (float, vec3)","vec3 __mul (vec3, vec3)","vec3 __div (vec3, float)","vec3 __div (vec3, vec3)","vec3 __add (vec3, vec3)","vec3 __sub (vec3, vec3)","vec3 __unm (vec3, vec3)","float Dot (vec3, vec3)","vec3 Lerp (vec3, vec3, float)","vec3 Mix (vec3, vec3, float)","void Normalize (vec3)","vec3 GetNormalized (vec3)","void Clamp (vec3, float, float)","vec3 GetClamped (vec3, float, float)","void Ceil (vec3)","vec3 GetCeiled (vec3)","void Floor (vec3)","vec3 GetFloored (vec3)","void Round (vec3)","vec3 GetRounded (vec3)","void SetLength (vec3, float)","float Length (vec3, vec3)","float Length (vec3)","vec<3,bool,0> IsNaN (vec3)"},Properties={"float x","float y","float z","vec3 zero","vec3 up","vec3 right","vec3 forward","float length","vec3 normalized"}},ConfigMap={Methods={"ConfigMap ()","void SetInt (string, int64_t)","void SetFloat (string, double)","void SetBool (string, bool)","void SetString (string, string)","void SetVec2 (string, vec2)","void SetVec3 (string, vec3)","void SetVec4 (string, vec4)","void Del (string)","bool Exists (string)","int64_t GetInt (string, int64_t)","int64_t GetInt (string)","double GetFloat (string, double)","double GetFloat (string)","bool GetBool (string, bool)","bool GetBool (string)","string GetString (string, string)","string GetString (string)","vec2 GetVec2 (string, vec2)","vec2 GetVec2 (string)","vec3 GetVec3 (string, vec3)","vec3 GetVec3 (string)","vec4 GetVec4 (string, vec4)","vec4 GetVec4 (string)","basic_table_core<0,classsol::basic_reference<0> > GetAllValuesStringified (ConfigMap, this_state)"}},["rttr::type"]={Methods={"RttrStringView GetName ()"}},V2i={Methods={"V2i ()","V2i (int32_t, int32_t)","V2i (int32_t)","V2i ()","V2i (structAsObject)","V2i (structAsRawPointer)","V2i ()","V2i (structAsObject)","V2i (structAsRawPointer)","V2i __mul (V2i, int32_t)","V2i __mul (int32_t, V2i)","V2i __mul (V2i, V2i)","V2i __div (V2i, int32_t)","V2i __div (V2i, V2i)","V2i __add (V2i, V2i)","V2i __sub (V2i, V2i)","V2i __unm (V2i, V2i)"},Properties={"int32_t x","int32_t y"}},["IAdapter::ResourceStats"]={Methods={"IAdapter::ResourceStats ()","IAdapter::ResourceStats ()"},Properties={"uint32_t[8] textureCount","uint64_t[8] textureSize","uint32_t[7] bufferCount","uint64_t[7] bufferSize","uint32_t[3] asCount","uint64_t[3] asSize","uint32_t[13] shaderCount","uint32_t[4] pipelineCount","uint32_t renderTargetCount"}},Client={Methods={"void SendMessage (basic_table_core<0,classsol::basic_reference<0> >)","void SendMessages (basic_table_core<0,classsol::basic_reference<0> >)","basic_table_core<0,classsol::basic_reference<0> > ReceiveMessages (this_state)","string UIItemUpdate (uint32_t, UIItem, basic_object<classsol::basic_reference<0> >)","void OpenKeyboardShortcutInput (string)","void ToggleUICreatorWindow ()","void ToggleUIStudioSDK ()","void ToggleUIVisibility ()","void ToggleMainMenuVisibility ()","void SetToClientUI ()","bool GetUICapturesMouseOrKeyboard ()","bool GetUICapturesMouse ()","bool GetUICapturesKeyboard ()","bool GetUICapturesTextInput ()","bool GetUIIsInEditMode ()","void LoadDefaultLayout ()","void OpenUIWindow (string)","void CloseUIWindow (string)","void ToggleUIWindow (string)","bool IsWindowOpen (string)","void OpenZeroBraneStudio (string)","void OpenZeroBraneStudioActions ()","void SetUIScale (float)","float GetUIScale ()","bool GetUIScaleAuto ()","void SetUIScaleAuto (bool)","string GetMontageURL ()","void SetMontageURL (string)","void LoadMontageByURL ()","void CancelLoadMontageByURL ()","string GetConnectionStatus ()","void DisconnectFromMontageServer ()","float GetLogValue (string)","void SetLogValue (string, float)","void SetStrLogValue (string, string)","float GetLogIValue (uint64_t)","string GetLogIValueName (uint64_t)","string GetLogIValueOutputName (uint64_t)","bool GetLogIsValue (uint64_t)","uint64_t GetLogValuesCount ()","Vector_float GetLogValueForPlot (string)","string GetLogStrValue (string)","string GetLogStrIValue (uint64_t)","string GetLogStrIValueName (uint64_t)","string GetLogStrIValueOutputName (uint64_t)","bool GetLogStrIsValue (uint64_t)","uint64_t GetLogStrValuesCount ()","double GetTime ()","double GetLogTime (string)","float GetFPS ()","ConfigMap GetConfigInputActions ()","void ConnectToServer (Client)","void SetConnectAddr (string)","string GetConnectAddr ()","bool OpenFolder (string)","uint32_t GetScriptsVersion ()","uint32_t GetClientScriptsVersion ()","void ResendServerLua ()","bool LuaConsole (Client, bool, bool)","bool LuaConsole (Client, bool)","void LuaOpenDebugger ()","void LuaEnableDebugging (bool)","Camera GetCamera ()","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> > GetVisibleWindows ()","bool IsContainerEnabledAndVisible (UIItem)","ConnectionInfo GetConnectionInfo ()","NetworkStat GetNetworkStat ()","void Log (string)","void ServerLog (string, string)","string GetAppCommandLine (Client)","AmStreamingStats GetVoxelStreamStats (Client)","void OnLuaLog ()","bool IsClient ()","bool IsServer ()","void SelectItemInUICreator (UIItem)","UIItem GetUIItemByUIActionID (uint64_t)","string GetUIActionType (uint64_t)"}},SamplerParams={Methods={"SamplerParams ()","SamplerParams ()"},Properties={"TextureWrappingMode wrappingModeS","TextureWrappingMode wrappingModeT","TextureWrappingMode wrappingModeR","TextureFiltering filtering","float maxAnisotropy","bool compareEnable","Function compareOp"}},ServerConnectionInfo={Methods={"ServerConnectionInfo ()","ServerConnectionInfo ()"},Properties={"string networkState","string name","string IP","uint16_t port","string streamingVersion"}},StreamComponent={Methods={"StreamComponent ()","StreamComponent ()"},Properties={"VertexComponent usage","VertexComponentFormat format","uint32_t offset","bool normalizeIntegerTypes"}},IRenderTarget={Methods={"Desc GetDesc ()"}},AmStreamingStatsSlot={Methods={"AmStreamingStatsSlot ()"},Properties={"int64_t slotStart","int64_t accumBytes","int64_t accumMessages"}},Frustum={Methods={"Frustum ()","Frustum ()"},Properties={"float nearPlane","float farPlane","float fovY","float aspectRatio"}},Angle={Methods={"Angle ()","Angle (float, float)","Angle (float)","Angle ()","bool __eq (Angle, Angle)","void Set (float)","float Get ()"},Properties={"float sine","float cosine"}},NetworkStat={Methods={"NetworkStat ()"},Properties={"uint64_t receivedUIMessageCount","uint64_t receivedUIMessageCountPerSecond","uint64_t receivedUIData","uint64_t receivedUIDataPerSecond","uint64_t receivedUIDataInFrame","uint64_t receivedUIDataInLastMessage","uint64_t receivedLuaMessageCount","uint64_t receivedLuaMessageCountPerSecond","uint64_t receivedLuaData","uint64_t receivedLuaDataPerSecond","uint64_t receivedLuaDataInFrame","uint64_t receivedLuaDataInLastMessage","uint64_t receivedMessageCount","uint64_t receivedMessageCountPerSecond","uint64_t receivedData","uint64_t receivedDataPerSecond","uint64_t receivedDataInFrame","uint64_t receivedDataInLastMessage","uint64_t sentUIMessageCount","uint64_t sentUIMessageCountPerSecond","uint64_t sentUIData","uint64_t sentUIDataPerSecond","uint64_t sentUIDataInFrame","uint64_t sentUIDataInLastMessage","uint64_t sentLuaMessageCount","uint64_t sentLuaMessageCountPerSecond","uint64_t sentLuaData","uint64_t sentLuaDataPerSecond","uint64_t sentLuaDataInFrame","uint64_t sentLuaDataInLastMessage","uint64_t sentMessageCount","uint64_t sentMessageCountPerSecond","uint64_t sentData","uint64_t sentDataPerSecond","uint64_t sentDataInFrame","uint64_t sentDataInLastMessage"}},["ITexture::Desc"]={Methods={"ITexture::Desc ()","ITexture::Desc ()"},Properties={"Type type","PixelFormat format","ResourceUsage usage","uint32_t usageFlags","uint32_t width","uint32_t height","uint32_t depth","uint32_t mipMapCount","uint32_t sampleCount","bool optimalTiling"}},AmStreamingStats={Methods={"AmStreamingStats ()"},Properties={"AmStreamingStatsTotal sentTotals","AmStreamingStatsTotal recvTotals","AmStreamingStatsStatPerFrame sentPerFrame","AmStreamingStatsStatPerFrame recvPerFrame","AmStreamingStatsStatPerInterval sentPerSecond","AmStreamingStatsStatPerInterval recvPerSecond","AmStreamingStatsStatPerInterval sentPerCustTime","AmStreamingStatsStatPerInterval recvPerCustTime","AmStreamingStatsStatPerMessage sentPerMessage","AmStreamingStatsStatPerMessage recvPerMessage"}},["IAdapter::Limits"]={Methods={"IAdapter::Limits ()","IAdapter::Limits ()"},Properties={"uint32_t constantBufferOffsetAlignment","uint32_t maxConstantBlockSize","uint32_t maxVertexConstantBlocks","uint32_t maxPixelConstantBlocks","uint32_t maxGeometryConstantBlocks","uint32_t maxComputeConstantBlocks"}},AmStreamingStatsTotal={Methods={"AmStreamingStatsTotal ()"},Properties={"uint64_t bytes","uint64_t messages","int64_t lastMsgIdx","int64_t lastOnFrameIdx","int64_t lastTimestampUs"}},["IAccelerationStructure::Desc"]={Methods={"IAccelerationStructure::Desc ()","IAccelerationStructure::Desc ()"},Properties={"Type type","uint32_t usageFlags","uint64_t size"}},Input={Methods={"Input ()","Input ()","bool KeyDown (uint16_t)","bool Key (uint16_t)","bool KeyUp (uint16_t)","bool KeyCombDown (uint16_t, uint16_t, uint16_t)","bool KeyCombDown (uint16_t, uint16_t)","bool KeyComb (uint16_t, uint16_t, uint16_t)","bool KeyComb (uint16_t, uint16_t)","bool ShiftKey ()","bool CtrlKey ()","bool AltKey ()","string GetKeyName (uint16_t)","uint16_t GetKeyCode (string)","basic_object<classsol::basic_reference<0> > GetKeysDown (this_state)","basic_object<classsol::basic_reference<0> > GetKeys (this_state)","basic_object<classsol::basic_reference<0> > GetKeysUp (this_state)","uint64_t GetKeyShortcutsPressedCount ()","string GetKeyShortcutPressed (uint64_t)","bool MouseBtnDown (uint16_t)","bool MouseBtn (uint16_t)","bool MouseBtnUp (uint16_t)","int32_t MouseWheel ()","vec2 MousePos ()","vec2 MousePosLast ()","vec2 MouseMove ()","vec2 MousePosRel ()","vec2 MousePosRelLast ()","vec2 MouseMoveRel ()","basic_object<classsol::basic_reference<0> > GetMouseButtonsDown (this_state)","basic_object<classsol::basic_reference<0> > GetMouseButtons (this_state)","basic_object<classsol::basic_reference<0> > GetMouseButtonsUp (this_state)","float GesturePinch ()","float GestureRotate ()","vec2 GestureMove ()","int16_t NumFingers ()","bool FingerDown (int64_t)","Vector_int64_t Fingers ()","bool FingerUp (int64_t)","vec2 FingerPos (int16_t)","bool VrBtnDown (uint64_t, ControllerButtons)","float VrHandTrigger (uint64_t)","float VrIndexTrigger (uint64_t)","vec2 VrThumbStick (uint64_t)","string GetJoyBtnName (uint16_t)","string GetJoyAxisName (uint16_t)","uint16_t GetJoyBtnByName (string)","uint16_t GetJoyAxisByName (string)","int64_t GetActiveJoypadID ()","bool JoyBtnDown (uint16_t, int64_t)","bool JoyBtn (uint16_t, int64_t)","bool JoyBtnUp (uint16_t, int64_t)","float JoyAxis (uint16_t, int64_t)","basic_table_core<0,classsol::basic_reference<0> > GetInputEvents (Input, this_state)"}},["IAdapter::Caps"]={Methods={"IAdapter::Caps ()","IAdapter::Caps ()"},Properties={"uint32_t drawingCommandsFlags","bool[41] supportedTextureFormats","bool supportsExtendedLineDirective","Limits limits"}},ResResource={Methods={"ResResource ()"}},["IPipeline::Desc"]={Methods={"IPipeline::Desc ()","IPipeline::Desc (GraphicsDesc)","IPipeline::Desc (ComputeDesc)","IPipeline::Desc (RayTracingDesc)","IPipeline::Desc ()"},Properties={"Type type","GraphicsDesc pGraphicsDesc","ComputeDesc pComputeDesc","RayTracingDesc pRayTracingDesc"}},Rect={Methods={"Rect ()","Rect (int32_t, int32_t, int32_t, int32_t)","Rect ()"},Properties={"int32_t x","int32_t y","int32_t width","int32_t height"}},AmStreamingStatsStatPerMessage={Methods={"AmStreamingStatsStatPerMessage ()","AmStreamingStatsSlot GetStatsByMessageIdx (int64_t)"}},["IBuffer::Desc"]={Methods={"IBuffer::Desc ()","IBuffer::Desc ()"},Properties={"Type type","ResourceUsage usage","uint32_t usageFlags","uint64_t size"}},Box={Methods={"Box ()","Box (uint32_t, uint32_t, uint32_t)","Box (int32_t, int32_t, int32_t, int32_t, int32_t, int32_t)","Box ()"},Properties={"int32_t minX","int32_t maxX","int32_t minY","int32_t maxY","int32_t minZ","int32_t maxZ"}}},Pointers={"AssetManager","Camera","ComputeDesc","ConfigMap","GraphicsDesc","RayTracingDesc","RendererContext","UIItem","const IRenderTarget","const IShader","const char","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >"},Namespaces={structsol={"this_state"},structglm={"vec<3,bool,0>"},IShader={"Desc"},IAccelerationStructure={"Desc"},ITexture={"Desc"},classsol={"basic_object<classsol::basic_reference<0> >","basic_table_core<0,classsol::basic_reference<0> >"},rttr={"type"},IBuffer={"Desc"},classstd={"reference_wrapper<classstd::unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>>> >","unordered_map<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>,classrttr::type,structstd::hash<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,structstd::equal_to<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>>,classstd::allocator<structstd::pair<classstd::basic_string<char,structstd::char_traits<char>,classstd::allocator<char>>const,classrttr::type>> >","unordered_map<unsigned__int64,classae::studio::ConnectionInfo,structstd::hash<unsigned__int64>,structstd::equal_to<unsigned__int64>,classstd::allocator<structstd::pair<unsigned__int64const,classae::studio::ConnectionInfo>> >","unordered_map<unsigned__int64,classae::studio::NetworkStat,structstd::hash<unsigned__int64>,structstd::equal_to<unsigned__int64>,classstd::allocator<structstd::pair<unsigned__int64const,classae::studio::NetworkStat>> >","unordered_set<classrttr::type,structstd::hash<classrttr::type>,structstd::equal_to<classrttr::type>,classstd::allocator<classrttr::type> >","vector<classae::core::EntityPath::Waypoint,classstd::allocator<classae::core::EntityPath::Waypoint> >","vector<classae::core::UIItem*,classstd::allocator<classae::core::UIItem*> >","vector<classae::core::UIItem,classstd::allocator<classae::core::UIItem> >","vector<structae::core::Image::MipMapImage,classstd::allocator<structae::core::Image::MipMapImage> >"},IAdapter={"Caps","Features","Limits","ResourceStats"},["structae::graphics"]={"InputLayout"},["const IPipeline"]={"ComputeDesc","GraphicsDesc","RayTracingDesc"},std={"string"},IPipeline={"Desc"},IRenderTarget={"Desc"},["enumae::core::Input"]={"ControllerButtons"}},Enums={["VRMirrorOptions::Eyes"]={[1]="RightOnly",[2]="Both",[0]="LeftOnly"},["OverlayWindow::Corner"]={[1]="TopRight",[2]="BottomLeft",[3]="BottomRight",[0]="TopLeft",[-1]="None"},ShaderResourceType={[1]="Bool",[2]="BoolVec2",[3]="BoolVec3",[4]="BoolVec4",[5]="Int",[6]="IntVec2",[7]="IntVec3",[8]="IntVec4",[9]="UInt",[10]="UIntVec2",[11]="UIntVec3",[12]="UIntVec4",[13]="Float",[14]="FloatVec2",[15]="FloatVec3",[16]="FloatVec4",[17]="FloatMat2x2",[18]="FloatMat2x3",[19]="FloatMat2x4",[20]="FloatMat3x2",[21]="FloatMat3x3",[22]="FloatMat3x4",[23]="FloatMat4x2",[24]="FloatMat4x3",[25]="FloatMat4x4",[26]="Double",[27]="DoubleVec2",[28]="DoubleVec3",[29]="DoubleVec4",[30]="DoubleMat2x2",[31]="DoubleMat2x3",[32]="DoubleMat2x4",[33]="DoubleMat3x2",[34]="DoubleMat3x3",[35]="DoubleMat3x4",[36]="DoubleMat4x2",[37]="DoubleMat4x3",[38]="DoubleMat4x4",[39]="Image",[40]="Texture",[41]="Buffer",[42]="AccelerationStructure",[0]="Unknown"},MemTarget={[1]="VideoMem",[0]="SystemMem"},PixelFormat={[1]="RGB888",[2]="RGBA8888",[3]="RGB565",[4]="RGBA5551",[5]="RGBA4444",[6]="BGR888",[7]="BGRA8888",[8]="Depth16",[9]="Depth24",[10]="Depth32",[11]="Depth24Stencil8",[12]="A8",[13]="LA88",[14]="R32f",[15]="RGB32f",[16]="RGBA32f",[17]="R16f",[18]="RGB16f",[19]="RGBA16f",[20]="DXT1",[21]="DXT1_with_ALPHA",[22]="DXT3",[23]="DXT5",[24]="ATC_RGB",[25]="ATC_RGBEA",[26]="ATC_RGBIA",[27]="ETC_RGB",[28]="ETC2_RGB",[29]="ETC2_RGBA_PUNCHTHROUGH_ALPHA",[30]="ETC2_RGBA",[31]="PVRTC4_RGB",[32]="PVRTC2_RGB",[33]="PVRTC4_RGBA",[34]="PVRTC2_RGBA",[35]="Int8",[36]="Int16",[37]="Int32",[38]="UInt8",[39]="UInt16",[40]="UInt32",[0]="Unknown"},RenderTargetAttachmentLoadOp={[1]="Clear",[2]="DontCare",[0]="Load"},PrimitiveTopology={[1]="LineStrip",[2]="Lines",[3]="TriangleStrip",[4]="TriangleFan",[5]="Triangles",[0]="Points"},LuaErrorType={[1]="DoFile",[2]="Runtime",[3]="UIAction",[0]="None"},RTXShaderGroupType={[1]="TrianglesHitGroup",[2]="ProceduralHitGroup",[0]="General"},CullMode={[1]="Front",[2]="Back",[3]="FrontAndBack",[0]="None"},ResourceStateTransitionMode={[1]="Transition",[2]="Verify",[0]="None"},DrawingCommandsFlags={"BaseVertex","BaseInstance"},BlendOp={[1]="Subtract",[2]="ReverseSubtract",[3]="Min",[4]="Max",[0]="Add"},ResourceMemoryUsage={[1]="GpuOnly",[3]="CpuToGpu",[4]="GpuToCpu",[0]="Unknown"},RenderTargetAttachmentStoreOp={[1]="DontCare",[0]="Store"},FrontFaceWinding={[1]="CounterClockwise",[0]="Clockwise"},["ReflectionTest::CameraType"]={[5]="Ortho",[7]="Perspective"},AttachmentFlags={[8]="Color0",[2]="Depth",[4]="DepthAndStencil",[64]="Color3",[32]="Color2",[16]="Color1"},["VoxelizeImageStackParams::InterpolationMode"]={[1]="CLOSEST",[2]="TRILINEAR",[3]="TRICUBIC",[0]="UNKNOWN"},CpuArch={[1]="X86",[2]="X86_64",[3]="Arm",[4]="Arm64",[5]="Wasm",[0]="Unknown"},["VoxelizeImageStackParams::BlendMode"]={[1]="SELECT",[2]="BLEND_WEIGHTED",[3]="BLEND_AGAINST_MAX",[0]="UNKNOWN"},TextureFiltering={[1]="Linear",[2]="Bilinear",[3]="Trilinear",[4]="Anisotropic",[0]="None"},BlendFactor={[1]="One",[2]="SrcColor",[3]="OneMinusSrcColor",[4]="DstColor",[5]="OneMinusDstColor",[6]="SrcAlpha",[7]="OneMinusSrcAlpha",[8]="DstAlpha",[9]="OneMinusDstAlpha",[10]="ConstantColor",[11]="OneMinusConstantColor",[12]="ConstantAlpha",[13]="OneMinusConstantAlpha",[14]="SrcAlphaSaturate",[15]="Src1Color",[16]="OneMinusSrc1Color",[17]="Src1Alpha",[18]="OneMinusSrc1Alpha",[0]="Zero"},Operation={[1]="Zero",[2]="Replace",[3]="Increment",[4]="IncrementWrap",[5]="Decrement",[6]="DecrementWrap",[7]="Invert",[0]="Keep"},VSyncMode={[1]="Enabled",[2]="Disabled",[3]="Adaptive",[0]="Default"},UsageFlagBits={[1]="UsageAllowUpdateBIT",[2]="UsageAllowCompactionBIT",[4]="UsagePreferFastTraceBIT",[8]="UsagePreferFastBuildBIT",[16]="UsageLowMemoryBIT"},UpdateFrequency={[1]="Frame",[2]="ObjectFrame",[3]="ObjectDraw",[0]="Once"},Type={[1]="TopLevel",[2]="BottomLevel",[0]="Unknown"},MessageLevel={[1]="Error",[2]="Warn",[3]="Info",[4]="Debug",[5]="Trace",[0]="Critical"},RenderTargetAttachmentLayout={[1]="General",[2]="ColorAttachmentOptimal",[3]="DepthStencilAttachmentOptimal",[4]="DepthStencilReadOnlyOptimal",[5]="ShaderReadOnlyOptimal",[6]="TransferSrcOptimal",[7]="TransferDstOptimal",[8]="Preinitialized",[9]="DepthReadOnlyStencilAttachmentOptimal",[10]="DepthAttachmentStencilReadOnlyOptimal",[11]="PresentSrc",[12]="SharedPresentSrc",[13]="ShadingRateOptimal",[14]="FragmentDensityMapOptimal",[0]="Undefined"},VertexComponentFormat={[1]="Int8",[2]="Int8Vec2",[3]="Int8Vec3",[4]="Int8Vec4",[5]="Int16",[6]="Int16Vec2",[7]="Int16Vec3",[8]="Int16Vec4",[9]="Int32",[10]="Int32Vec2",[11]="Int32Vec3",[12]="Int32Vec4",[13]="UInt8",[14]="UInt8Vec2",[15]="UInt8Vec3",[16]="UInt8Vec4",[17]="UInt16",[18]="UInt16Vec2",[19]="UInt16Vec3",[20]="UInt16Vec4",[21]="UInt32",[22]="UInt32Vec2",[23]="UInt32Vec3",[24]="UInt32Vec4",[25]="Float",[26]="FloatVec2",[27]="FloatVec3",[28]="FloatVec4",[0]="Unknown"},VertexComponent={[1]="Position1",[2]="Position2",[3]="Position3",[4]="TexCoord0",[5]="TexCoord1",[6]="TexCoord2",[7]="TexCoord3",[8]="TexCoord4",[9]="Color0",[10]="Color1",[11]="Index0",[12]="Index1",[13]="Normal0",[14]="Normal1",[15]="Tangent",[16]="Bitangent",[17]="Index",[18]="Unknown",[0]="Position0"},TextureWrappingMode={[1]="Repeat",[2]="MirroredRepeat",[0]="ClampToEdge"},System={[1]="Windows",[2]="Linux",[3]="WebBrowser",[4]="MacOS",[5]="iOS",[6]="Android",[0]="Unknown"},ResourceState={[1]="Undefined",[2]="VertexBuffer",[4]="ConstantBuffer",[16]="SBTBuffer",[131072]="Present",[65536]="AccelerationStructure",[8192]="CopySource",[4096]="CopyDest",[8]="IndexBuffer",[2048]="IndirectArgument",[0]="Unknown",[512]="ShaderResource",[256]="DepthRead",[128]="DepthWrite",[64]="UnorderedAccess",[32]="RenderTarget"},Function={[1]="Less",[2]="Equal",[3]="Lequl",[4]="Greater",[5]="Notequal",[6]="Gequal",[7]="Always",[0]="Never"},["ScriptNode::Flow"]={[1]="Output",[0]="Input"},ResourceUsage={[1]="Dynamic",[2]="Stream",[0]="Static"},PolygonMode={[1]="Line",[2]="Point",[0]="Fill"},DepthBufferMode={[1]="DepthOnly",[2]="DepthAndStencil",[0]="None"}}};return _;end